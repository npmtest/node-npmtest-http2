{"/home/travis/build/npmtest/node-npmtest-http2/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_http2 */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-http2/lib.npmtest_http2.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/lib.npmtest_http2.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_http2 */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_http2 = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_http2 = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-http2/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":49}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":63},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-http2 && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_http2 */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_http2","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_http2.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_http2.rollup.js'] =","            local.assetsDict['/assets.npmtest_http2.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_http2.__dirname + '/lib.npmtest_http2.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}},"branchMap":{},"code":["// [node-http2][homepage] is an [HTTP/2][http2] implementation for [node.js][node].","//","// The core of the protocol is implemented in the protocol sub-directory. This directory provides","// two important features on top of the protocol:","//","// * Implementation of different negotiation schemes that can be used to start a HTTP2 connection.","//   These include TLS ALPN, Upgrade and Plain TCP.","//","// * Providing an API very similar to the standard node.js [HTTPS module API][node-https]","//   (which is in turn very similar to the [HTTP module API][node-http]).","//","// [homepage]:            https://github.com/molnarg/node-http2","// [http2]:               https://tools.ietf.org/html/rfc7540","// [node]:                https://nodejs.org/","// [node-https]:          https://nodejs.org/api/https.html","// [node-http]:           https://nodejs.org/api/http.html","","module.exports   = require('./http');","","/*","                  HTTP API","","               |            ^","               |            |"," +-------------|------------|------------------------------------------------------+"," |             |            |        Server/Agent                                  |"," |             v            |                                                      |"," |        +----------+ +----------+                                                |"," |        | Outgoing | | Incoming |                                                |"," |        | req/res. | | req/res. |                                                |"," |        +----------+ +----------+                                                |"," |             |            ^                                                      |"," |             |            |                                                      |"," |   +---------|------------|-------------------------------------+   +-----       |"," |   |         |            |   Endpoint                          |   |            |"," |   |         |            |                                     |   |            |"," |   |         v            |                                     |   |            |"," |   |    +-----------------------+  +--------------------        |   |            |"," |   |    |        Stream         |  |         Stream      ...    |   |            |"," |   |    +-----------------------+  +--------------------        |   |            |"," |   |                                                            |   |            |"," |   +------------------------------------------------------------+   +-----       |"," |                             |        |                                          |"," |                             |        |                                          |"," |                             v        |                                          |"," |   +------------------------------------------------------------+   +-----       |"," |   |                         TCP stream                         |   |      ...   |"," |   +------------------------------------------------------------+   +-----       |"," |                                                                                 |"," +---------------------------------------------------------------------------------+","","*/",""],"l":{"18":1}},"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/http.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/http.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":1,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":1,"102":0,"103":1,"104":0,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":1,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":1,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":1,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":0,"233":1,"234":1,"235":1,"236":0,"237":1,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":1,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":1,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":0,"274":0,"275":1,"276":0,"277":1,"278":0,"279":0,"280":1,"281":0,"282":0,"283":0,"284":1,"285":0,"286":1,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":1,"296":0,"297":0,"298":0,"299":1,"300":0,"301":0,"302":0,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":1,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":1,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":1,"441":0,"442":0,"443":0,"444":1,"445":0,"446":0,"447":0,"448":0,"449":1,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":1,"459":0,"460":1,"461":0,"462":0,"463":1,"464":1,"465":0,"466":0,"467":0,"468":1,"469":1,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":1,"492":0,"493":0,"494":0,"495":1,"496":0,"497":0,"498":0,"499":1,"500":0,"501":0,"502":0,"503":1,"504":0,"505":0,"506":0,"507":0,"508":1,"509":0,"510":0,"511":0,"512":0,"513":1,"514":0,"515":0,"516":0,"517":0,"518":1,"519":0,"520":0,"521":0,"522":0,"523":0,"524":1,"525":0,"526":0,"527":0,"528":0,"529":0,"530":1,"531":0,"532":1,"533":1,"534":0,"535":0,"536":0,"537":0,"538":1,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":1,"550":1,"551":0,"552":1,"553":0,"554":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0,0],"55":[0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[1,1],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0,0,0,0,0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"fnMap":{"1":{"name":"noop","line":203,"loc":{"start":{"line":203,"column":0},"end":{"line":203,"column":16}}},"2":{"name":"(anonymous_2)","line":212,"loc":{"start":{"line":212,"column":9},"end":{"line":212,"column":20}}},"3":{"name":"IncomingMessage","line":221,"loc":{"start":{"line":221,"column":0},"end":{"line":221,"column":33}}},"4":{"name":"_onHeaders","line":250,"loc":{"start":{"line":250,"column":39},"end":{"line":250,"column":68}}},"5":{"name":"(anonymous_5)","line":267,"loc":{"start":{"line":267,"column":28},"end":{"line":267,"column":46}}},"6":{"name":"_onEnd","line":272,"loc":{"start":{"line":272,"column":35},"end":{"line":272,"column":53}}},"7":{"name":"_checkSpecialHeader","line":278,"loc":{"start":{"line":278,"column":48},"end":{"line":278,"column":89}}},"8":{"name":"_validateHeaders","line":287,"loc":{"start":{"line":287,"column":45},"end":{"line":287,"column":80}}},"9":{"name":"OutgoingMessage","line":321,"loc":{"start":{"line":321,"column":0},"end":{"line":321,"column":27}}},"10":{"name":"_write","line":334,"loc":{"start":{"line":334,"column":35},"end":{"line":334,"column":78}}},"11":{"name":"_finish","line":342,"loc":{"start":{"line":342,"column":36},"end":{"line":342,"column":55}}},"12":{"name":"setHeader","line":358,"loc":{"start":{"line":358,"column":38},"end":{"line":358,"column":70}}},"13":{"name":"removeHeader","line":370,"loc":{"start":{"line":370,"column":41},"end":{"line":370,"column":69}}},"14":{"name":"getHeader","line":378,"loc":{"start":{"line":378,"column":38},"end":{"line":378,"column":63}}},"15":{"name":"addTrailers","line":382,"loc":{"start":{"line":382,"column":40},"end":{"line":382,"column":71}}},"16":{"name":"forwardEvent","line":401,"loc":{"start":{"line":401,"column":0},"end":{"line":401,"column":45}}},"17":{"name":"forward","line":402,"loc":{"start":{"line":402,"column":2},"end":{"line":402,"column":21}}},"18":{"name":"Server","line":431,"loc":{"start":{"line":431,"column":0},"end":{"line":431,"column":25}}},"19":{"name":"(anonymous_19)","line":451,"loc":{"start":{"line":451,"column":40},"end":{"line":451,"column":57}}},"20":{"name":"_start","line":485,"loc":{"start":{"line":485,"column":26},"end":{"line":485,"column":50}}},"21":{"name":"_onStream","line":496,"loc":{"start":{"line":496,"column":24},"end":{"line":496,"column":51}}},"22":{"name":"_fallback","line":514,"loc":{"start":{"line":514,"column":29},"end":{"line":514,"column":56}}},"23":{"name":"listen","line":532,"loc":{"start":{"line":532,"column":26},"end":{"line":532,"column":58}}},"24":{"name":"close","line":540,"loc":{"start":{"line":540,"column":25},"end":{"line":540,"column":50}}},"25":{"name":"setTimeout","line":545,"loc":{"start":{"line":545,"column":30},"end":{"line":545,"column":69}}},"26":{"name":"getTimeout","line":552,"loc":{"start":{"line":552,"column":7},"end":{"line":552,"column":29}}},"27":{"name":"setTimeout","line":559,"loc":{"start":{"line":559,"column":7},"end":{"line":559,"column":36}}},"28":{"name":"on","line":570,"loc":{"start":{"line":570,"column":22},"end":{"line":570,"column":51}}},"29":{"name":"addContext","line":579,"loc":{"start":{"line":579,"column":30},"end":{"line":579,"column":73}}},"30":{"name":"address","line":585,"loc":{"start":{"line":585,"column":27},"end":{"line":585,"column":46}}},"31":{"name":"createServerRaw","line":589,"loc":{"start":{"line":589,"column":0},"end":{"line":589,"column":51}}},"32":{"name":"createServerTLS","line":609,"loc":{"start":{"line":609,"column":0},"end":{"line":609,"column":51}}},"33":{"name":"notImplemented","line":640,"loc":{"start":{"line":640,"column":0},"end":{"line":640,"column":26}}},"34":{"name":"IncomingRequest","line":650,"loc":{"start":{"line":650,"column":0},"end":{"line":650,"column":33}}},"35":{"name":"_onHeaders","line":659,"loc":{"start":{"line":659,"column":39},"end":{"line":659,"column":68}}},"36":{"name":"OutgoingResponse","line":694,"loc":{"start":{"line":694,"column":0},"end":{"line":694,"column":34}}},"37":{"name":"writeHead","line":707,"loc":{"start":{"line":707,"column":39},"end":{"line":707,"column":93}}},"38":{"name":"_implicitHeaders","line":735,"loc":{"start":{"line":735,"column":46},"end":{"line":735,"column":74}}},"39":{"name":"(anonymous_39)","line":741,"loc":{"start":{"line":741,"column":45},"end":{"line":741,"column":56}}},"40":{"name":"write","line":745,"loc":{"start":{"line":745,"column":35},"end":{"line":745,"column":52}}},"41":{"name":"end","line":750,"loc":{"start":{"line":750,"column":33},"end":{"line":750,"column":48}}},"42":{"name":"_onRequestHeaders","line":756,"loc":{"start":{"line":756,"column":47},"end":{"line":756,"column":83}}},"43":{"name":"push","line":760,"loc":{"start":{"line":760,"column":34},"end":{"line":760,"column":57}}},"44":{"name":"altsvc","line":785,"loc":{"start":{"line":785,"column":36},"end":{"line":785,"column":92}}},"45":{"name":"on","line":794,"loc":{"start":{"line":794,"column":32},"end":{"line":794,"column":61}}},"46":{"name":"requestRaw","line":811,"loc":{"start":{"line":811,"column":0},"end":{"line":811,"column":39}}},"47":{"name":"requestTLS","line":827,"loc":{"start":{"line":827,"column":0},"end":{"line":827,"column":39}}},"48":{"name":"getRaw","line":843,"loc":{"start":{"line":843,"column":0},"end":{"line":843,"column":35}}},"49":{"name":"getTLS","line":859,"loc":{"start":{"line":859,"column":0},"end":{"line":859,"column":35}}},"50":{"name":"Agent","line":878,"loc":{"start":{"line":878,"column":0},"end":{"line":878,"column":24}}},"51":{"name":"request","line":901,"loc":{"start":{"line":901,"column":26},"end":{"line":901,"column":62}}},"52":{"name":"(anonymous_52)","line":947,"loc":{"start":{"line":947,"column":32},"end":{"line":947,"column":49}}},"53":{"name":"(anonymous_53)","line":952,"loc":{"start":{"line":952,"column":25},"end":{"line":952,"column":40}}},"54":{"name":"(anonymous_54)","line":977,"loc":{"start":{"line":977,"column":29},"end":{"line":977,"column":46}}},"55":{"name":"(anonymous_55)","line":983,"loc":{"start":{"line":983,"column":30},"end":{"line":983,"column":47}}},"56":{"name":"negotiated","line":992,"loc":{"start":{"line":992,"column":4},"end":{"line":992,"column":26}}},"57":{"name":"(anonymous_57)","line":1021,"loc":{"start":{"line":1021,"column":19},"end":{"line":1021,"column":38}}},"58":{"name":"get","line":1034,"loc":{"start":{"line":1034,"column":22},"end":{"line":1034,"column":54}}},"59":{"name":"(anonymous_59)","line":1040,"loc":{"start":{"line":1040,"column":26},"end":{"line":1040,"column":42}}},"60":{"name":"unbundleSocket","line":1049,"loc":{"start":{"line":1049,"column":0},"end":{"line":1049,"column":32}}},"61":{"name":"hasAgentOptions","line":1060,"loc":{"start":{"line":1060,"column":0},"end":{"line":1060,"column":34}}},"62":{"name":"getMaxSockets","line":1072,"loc":{"start":{"line":1072,"column":7},"end":{"line":1072,"column":32}}},"63":{"name":"setMaxSockets","line":1075,"loc":{"start":{"line":1075,"column":7},"end":{"line":1075,"column":37}}},"64":{"name":"OutgoingRequest","line":1085,"loc":{"start":{"line":1085,"column":0},"end":{"line":1085,"column":27}}},"65":{"name":"_start","line":1094,"loc":{"start":{"line":1094,"column":35},"end":{"line":1094,"column":68}}},"66":{"name":"_fallback","line":1129,"loc":{"start":{"line":1129,"column":38},"end":{"line":1129,"column":66}}},"67":{"name":"setPriority","line":1135,"loc":{"start":{"line":1135,"column":40},"end":{"line":1135,"column":71}}},"68":{"name":"on","line":1145,"loc":{"start":{"line":1145,"column":31},"end":{"line":1145,"column":60}}},"69":{"name":"setNoDelay","line":1154,"loc":{"start":{"line":1154,"column":39},"end":{"line":1154,"column":68}}},"70":{"name":"setSocketKeepAlive","line":1162,"loc":{"start":{"line":1162,"column":47},"end":{"line":1162,"column":97}}},"71":{"name":"setTimeout","line":1170,"loc":{"start":{"line":1170,"column":39},"end":{"line":1170,"column":78}}},"72":{"name":"abort","line":1179,"loc":{"start":{"line":1179,"column":34},"end":{"line":1179,"column":51}}},"73":{"name":"_onPromise","line":1190,"loc":{"start":{"line":1190,"column":39},"end":{"line":1190,"column":76}}},"74":{"name":"IncomingResponse","line":1205,"loc":{"start":{"line":1205,"column":0},"end":{"line":1205,"column":34}}},"75":{"name":"_onHeaders","line":1214,"loc":{"start":{"line":1214,"column":40},"end":{"line":1214,"column":69}}},"76":{"name":"IncomingPromise","line":1235,"loc":{"start":{"line":1235,"column":0},"end":{"line":1235,"column":57}}},"77":{"name":"cancel","line":1254,"loc":{"start":{"line":1254,"column":35},"end":{"line":1254,"column":53}}},"78":{"name":"setPriority","line":1258,"loc":{"start":{"line":1258,"column":40},"end":{"line":1258,"column":71}}}},"statementMap":{"1":{"start":{"line":129,"column":0},"end":{"line":129,"column":25}},"2":{"start":{"line":130,"column":0},"end":{"line":130,"column":25}},"3":{"start":{"line":131,"column":0},"end":{"line":131,"column":27}},"4":{"start":{"line":132,"column":0},"end":{"line":132,"column":50}},"5":{"start":{"line":133,"column":0},"end":{"line":133,"column":48}},"6":{"start":{"line":134,"column":0},"end":{"line":134,"column":42}},"7":{"start":{"line":135,"column":0},"end":{"line":135,"column":42}},"8":{"start":{"line":136,"column":0},"end":{"line":136,"column":37}},"9":{"start":{"line":137,"column":0},"end":{"line":137,"column":33}},"10":{"start":{"line":138,"column":0},"end":{"line":138,"column":27}},"11":{"start":{"line":139,"column":0},"end":{"line":139,"column":29}},"12":{"start":{"line":141,"column":0},"end":{"line":141,"column":41}},"13":{"start":{"line":142,"column":0},"end":{"line":142,"column":42}},"14":{"start":{"line":143,"column":0},"end":{"line":143,"column":42}},"15":{"start":{"line":144,"column":0},"end":{"line":144,"column":28}},"16":{"start":{"line":146,"column":0},"end":{"line":153,"column":2}},"17":{"start":{"line":156,"column":0},"end":{"line":156,"column":68}},"18":{"start":{"line":160,"column":0},"end":{"line":197,"column":12}},"19":{"start":{"line":203,"column":0},"end":{"line":203,"column":18}},"20":{"start":{"line":204,"column":0},"end":{"line":213,"column":2}},"21":{"start":{"line":212,"column":22},"end":{"line":212,"column":34}},"22":{"start":{"line":216,"column":0},"end":{"line":216,"column":43}},"23":{"start":{"line":221,"column":0},"end":{"line":243,"column":1}},"24":{"start":{"line":223,"column":2},"end":{"line":223,"column":25}},"25":{"start":{"line":224,"column":2},"end":{"line":224,"column":20}},"26":{"start":{"line":225,"column":2},"end":{"line":225,"column":37}},"27":{"start":{"line":227,"column":2},"end":{"line":227,"column":55}},"28":{"start":{"line":231,"column":2},"end":{"line":231,"column":27}},"29":{"start":{"line":232,"column":2},"end":{"line":232,"column":28}},"30":{"start":{"line":233,"column":2},"end":{"line":233,"column":28}},"31":{"start":{"line":236,"column":2},"end":{"line":236,"column":20}},"32":{"start":{"line":237,"column":2},"end":{"line":237,"column":28}},"33":{"start":{"line":238,"column":2},"end":{"line":238,"column":36}},"34":{"start":{"line":241,"column":2},"end":{"line":241,"column":53}},"35":{"start":{"line":242,"column":2},"end":{"line":242,"column":45}},"36":{"start":{"line":244,"column":0},"end":{"line":244,"column":110}},"37":{"start":{"line":250,"column":0},"end":{"line":270,"column":2}},"38":{"start":{"line":252,"column":2},"end":{"line":252,"column":33}},"39":{"start":{"line":255,"column":2},"end":{"line":263,"column":3}},"40":{"start":{"line":256,"column":4},"end":{"line":262,"column":5}},"41":{"start":{"line":257,"column":6},"end":{"line":261,"column":7}},"42":{"start":{"line":258,"column":8},"end":{"line":258,"column":45}},"43":{"start":{"line":260,"column":8},"end":{"line":260,"column":43}},"44":{"start":{"line":266,"column":2},"end":{"line":266,"column":18}},"45":{"start":{"line":267,"column":2},"end":{"line":269,"column":5}},"46":{"start":{"line":268,"column":4},"end":{"line":268,"column":36}},"47":{"start":{"line":272,"column":0},"end":{"line":274,"column":2}},"48":{"start":{"line":273,"column":2},"end":{"line":273,"column":40}},"49":{"start":{"line":276,"column":0},"end":{"line":276,"column":44}},"50":{"start":{"line":278,"column":0},"end":{"line":285,"column":2}},"51":{"start":{"line":279,"column":2},"end":{"line":282,"column":3}},"52":{"start":{"line":280,"column":4},"end":{"line":280,"column":91}},"53":{"start":{"line":281,"column":4},"end":{"line":281,"column":40}},"54":{"start":{"line":284,"column":2},"end":{"line":284,"column":15}},"55":{"start":{"line":287,"column":0},"end":{"line":316,"column":2}},"56":{"start":{"line":293,"column":2},"end":{"line":300,"column":3}},"57":{"start":{"line":294,"column":4},"end":{"line":294,"column":35}},"58":{"start":{"line":295,"column":4},"end":{"line":299,"column":5}},"59":{"start":{"line":296,"column":6},"end":{"line":296,"column":84}},"60":{"start":{"line":297,"column":6},"end":{"line":297,"column":42}},"61":{"start":{"line":298,"column":6},"end":{"line":298,"column":13}},"62":{"start":{"line":302,"column":2},"end":{"line":315,"column":3}},"63":{"start":{"line":304,"column":4},"end":{"line":307,"column":5}},"64":{"start":{"line":305,"column":6},"end":{"line":305,"column":42}},"65":{"start":{"line":306,"column":6},"end":{"line":306,"column":13}},"66":{"start":{"line":311,"column":4},"end":{"line":314,"column":5}},"67":{"start":{"line":312,"column":6},"end":{"line":312,"column":42}},"68":{"start":{"line":313,"column":6},"end":{"line":313,"column":13}},"69":{"start":{"line":321,"column":0},"end":{"line":331,"column":1}},"70":{"start":{"line":323,"column":2},"end":{"line":323,"column":22}},"71":{"start":{"line":325,"column":2},"end":{"line":325,"column":21}},"72":{"start":{"line":326,"column":2},"end":{"line":326,"column":29}},"73":{"start":{"line":327,"column":2},"end":{"line":327,"column":27}},"74":{"start":{"line":328,"column":2},"end":{"line":328,"column":24}},"75":{"start":{"line":330,"column":2},"end":{"line":330,"column":34}},"76":{"start":{"line":332,"column":0},"end":{"line":332,"column":107}},"77":{"start":{"line":334,"column":0},"end":{"line":340,"column":2}},"78":{"start":{"line":335,"column":2},"end":{"line":339,"column":3}},"79":{"start":{"line":336,"column":4},"end":{"line":336,"column":49}},"80":{"start":{"line":338,"column":4},"end":{"line":338,"column":75}},"81":{"start":{"line":342,"column":0},"end":{"line":356,"column":2}},"82":{"start":{"line":343,"column":2},"end":{"line":355,"column":3}},"83":{"start":{"line":344,"column":4},"end":{"line":350,"column":5}},"84":{"start":{"line":345,"column":6},"end":{"line":349,"column":7}},"85":{"start":{"line":346,"column":8},"end":{"line":346,"column":49}},"86":{"start":{"line":348,"column":8},"end":{"line":348,"column":44}},"87":{"start":{"line":351,"column":4},"end":{"line":351,"column":25}},"88":{"start":{"line":352,"column":4},"end":{"line":352,"column":22}},"89":{"start":{"line":354,"column":4},"end":{"line":354,"column":49}},"90":{"start":{"line":358,"column":0},"end":{"line":368,"column":2}},"91":{"start":{"line":359,"column":2},"end":{"line":367,"column":3}},"92":{"start":{"line":360,"column":4},"end":{"line":360,"column":84}},"93":{"start":{"line":362,"column":4},"end":{"line":362,"column":30}},"94":{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},"95":{"start":{"line":364,"column":6},"end":{"line":364,"column":84}},"96":{"start":{"line":366,"column":4},"end":{"line":366,"column":32}},"97":{"start":{"line":370,"column":0},"end":{"line":376,"column":2}},"98":{"start":{"line":371,"column":2},"end":{"line":375,"column":3}},"99":{"start":{"line":372,"column":4},"end":{"line":372,"column":87}},"100":{"start":{"line":374,"column":4},"end":{"line":374,"column":45}},"101":{"start":{"line":378,"column":0},"end":{"line":380,"column":2}},"102":{"start":{"line":379,"column":2},"end":{"line":379,"column":43}},"103":{"start":{"line":382,"column":0},"end":{"line":384,"column":2}},"104":{"start":{"line":383,"column":2},"end":{"line":383,"column":28}},"105":{"start":{"line":386,"column":0},"end":{"line":386,"column":44}},"106":{"start":{"line":388,"column":0},"end":{"line":388,"column":94}},"107":{"start":{"line":393,"column":0},"end":{"line":393,"column":24}},"108":{"start":{"line":394,"column":0},"end":{"line":394,"column":42}},"109":{"start":{"line":395,"column":0},"end":{"line":395,"column":44}},"110":{"start":{"line":396,"column":0},"end":{"line":396,"column":42}},"111":{"start":{"line":401,"column":0},"end":{"line":426,"column":1}},"112":{"start":{"line":402,"column":2},"end":{"line":419,"column":3}},"113":{"start":{"line":403,"column":4},"end":{"line":403,"column":44}},"114":{"start":{"line":405,"column":4},"end":{"line":405,"column":29}},"115":{"start":{"line":408,"column":4},"end":{"line":414,"column":5}},"116":{"start":{"line":409,"column":6},"end":{"line":409,"column":25}},"117":{"start":{"line":410,"column":6},"end":{"line":410,"column":39}},"118":{"start":{"line":412,"column":6},"end":{"line":412,"column":38}},"119":{"start":{"line":413,"column":6},"end":{"line":413,"column":13}},"120":{"start":{"line":416,"column":4},"end":{"line":418,"column":5}},"121":{"start":{"line":417,"column":6},"end":{"line":417,"column":44}},"122":{"start":{"line":421,"column":2},"end":{"line":421,"column":28}},"123":{"start":{"line":425,"column":2},"end":{"line":425,"column":17}},"124":{"start":{"line":431,"column":0},"end":{"line":481,"column":1}},"125":{"start":{"line":432,"column":2},"end":{"line":432,"column":38}},"126":{"start":{"line":434,"column":2},"end":{"line":434,"column":74}},"127":{"start":{"line":435,"column":2},"end":{"line":435,"column":36}},"128":{"start":{"line":437,"column":2},"end":{"line":437,"column":37}},"129":{"start":{"line":438,"column":2},"end":{"line":438,"column":43}},"130":{"start":{"line":441,"column":2},"end":{"line":478,"column":3}},"131":{"start":{"line":442,"column":4},"end":{"line":442,"column":54}},"132":{"start":{"line":443,"column":4},"end":{"line":443,"column":23}},"133":{"start":{"line":444,"column":4},"end":{"line":444,"column":47}},"134":{"start":{"line":445,"column":4},"end":{"line":445,"column":46}},"135":{"start":{"line":446,"column":4},"end":{"line":446,"column":54}},"136":{"start":{"line":447,"column":4},"end":{"line":447,"column":67}},"137":{"start":{"line":448,"column":4},"end":{"line":448,"column":47}},"138":{"start":{"line":449,"column":4},"end":{"line":449,"column":79}},"139":{"start":{"line":450,"column":4},"end":{"line":450,"column":56}},"140":{"start":{"line":451,"column":4},"end":{"line":460,"column":7}},"141":{"start":{"line":452,"column":6},"end":{"line":452,"column":73}},"142":{"start":{"line":455,"column":6},"end":{"line":459,"column":7}},"143":{"start":{"line":456,"column":8},"end":{"line":456,"column":22}},"144":{"start":{"line":458,"column":8},"end":{"line":458,"column":25}},"145":{"start":{"line":461,"column":4},"end":{"line":461,"column":64}},"146":{"start":{"line":463,"column":4},"end":{"line":463,"column":46}},"147":{"start":{"line":464,"column":4},"end":{"line":464,"column":50}},"148":{"start":{"line":468,"column":7},"end":{"line":478,"column":3}},"149":{"start":{"line":469,"column":4},"end":{"line":469,"column":60}},"150":{"start":{"line":470,"column":4},"end":{"line":470,"column":25}},"151":{"start":{"line":471,"column":4},"end":{"line":471,"column":43}},"152":{"start":{"line":476,"column":4},"end":{"line":476,"column":81}},"153":{"start":{"line":477,"column":4},"end":{"line":477,"column":95}},"154":{"start":{"line":480,"column":2},"end":{"line":480,"column":58}},"155":{"start":{"line":482,"column":0},"end":{"line":482,"column":93}},"156":{"start":{"line":485,"column":0},"end":{"line":512,"column":2}},"157":{"start":{"line":486,"column":2},"end":{"line":486,"column":67}},"158":{"start":{"line":488,"column":2},"end":{"line":491,"column":54}},"159":{"start":{"line":493,"column":2},"end":{"line":493,"column":39}},"160":{"start":{"line":495,"column":2},"end":{"line":495,"column":18}},"161":{"start":{"line":496,"column":2},"end":{"line":506,"column":5}},"162":{"start":{"line":497,"column":4},"end":{"line":497,"column":48}},"163":{"start":{"line":498,"column":4},"end":{"line":498,"column":46}},"164":{"start":{"line":501,"column":4},"end":{"line":501,"column":49}},"165":{"start":{"line":502,"column":4},"end":{"line":502,"column":43}},"166":{"start":{"line":503,"column":4},"end":{"line":503,"column":67}},"167":{"start":{"line":505,"column":4},"end":{"line":505,"column":78}},"168":{"start":{"line":508,"column":2},"end":{"line":508,"column":60}},"169":{"start":{"line":509,"column":2},"end":{"line":509,"column":58}},"170":{"start":{"line":511,"column":2},"end":{"line":511,"column":44}},"171":{"start":{"line":514,"column":0},"end":{"line":527,"column":2}},"172":{"start":{"line":515,"column":2},"end":{"line":515,"column":69}},"173":{"start":{"line":517,"column":2},"end":{"line":520,"column":52}},"174":{"start":{"line":522,"column":2},"end":{"line":524,"column":3}},"175":{"start":{"line":523,"column":4},"end":{"line":523,"column":64}},"176":{"start":{"line":526,"column":2},"end":{"line":526,"column":34}},"177":{"start":{"line":532,"column":0},"end":{"line":538,"column":2}},"178":{"start":{"line":533,"column":2},"end":{"line":534,"column":55}},"179":{"start":{"line":535,"column":2},"end":{"line":535,"column":53}},"180":{"start":{"line":537,"column":2},"end":{"line":537,"column":22}},"181":{"start":{"line":540,"column":0},"end":{"line":543,"column":2}},"182":{"start":{"line":541,"column":2},"end":{"line":541,"column":35}},"183":{"start":{"line":542,"column":2},"end":{"line":542,"column":31}},"184":{"start":{"line":545,"column":0},"end":{"line":549,"column":2}},"185":{"start":{"line":546,"column":2},"end":{"line":548,"column":3}},"186":{"start":{"line":547,"column":4},"end":{"line":547,"column":47}},"187":{"start":{"line":551,"column":0},"end":{"line":564,"column":3}},"188":{"start":{"line":553,"column":4},"end":{"line":557,"column":5}},"189":{"start":{"line":554,"column":6},"end":{"line":554,"column":34}},"190":{"start":{"line":556,"column":6},"end":{"line":556,"column":23}},"191":{"start":{"line":560,"column":4},"end":{"line":562,"column":5}},"192":{"start":{"line":561,"column":6},"end":{"line":561,"column":37}},"193":{"start":{"line":570,"column":0},"end":{"line":576,"column":2}},"194":{"start":{"line":571,"column":2},"end":{"line":575,"column":3}},"195":{"start":{"line":572,"column":4},"end":{"line":572,"column":67}},"196":{"start":{"line":574,"column":4},"end":{"line":574,"column":65}},"197":{"start":{"line":579,"column":0},"end":{"line":583,"column":2}},"198":{"start":{"line":580,"column":2},"end":{"line":582,"column":3}},"199":{"start":{"line":581,"column":4},"end":{"line":581,"column":51}},"200":{"start":{"line":585,"column":0},"end":{"line":587,"column":2}},"201":{"start":{"line":586,"column":2},"end":{"line":586,"column":31}},"202":{"start":{"line":589,"column":0},"end":{"line":607,"column":1}},"203":{"start":{"line":590,"column":2},"end":{"line":593,"column":3}},"204":{"start":{"line":591,"column":4},"end":{"line":591,"column":30}},"205":{"start":{"line":592,"column":4},"end":{"line":592,"column":17}},"206":{"start":{"line":595,"column":2},"end":{"line":597,"column":3}},"207":{"start":{"line":596,"column":4},"end":{"line":596,"column":83}},"208":{"start":{"line":599,"column":2},"end":{"line":599,"column":23}},"209":{"start":{"line":600,"column":2},"end":{"line":600,"column":35}},"210":{"start":{"line":602,"column":2},"end":{"line":604,"column":3}},"211":{"start":{"line":603,"column":4},"end":{"line":603,"column":42}},"212":{"start":{"line":606,"column":2},"end":{"line":606,"column":16}},"213":{"start":{"line":609,"column":0},"end":{"line":625,"column":1}},"214":{"start":{"line":610,"column":2},"end":{"line":612,"column":3}},"215":{"start":{"line":611,"column":4},"end":{"line":611,"column":45}},"216":{"start":{"line":613,"column":2},"end":{"line":615,"column":3}},"217":{"start":{"line":614,"column":4},"end":{"line":614,"column":81}},"218":{"start":{"line":616,"column":2},"end":{"line":616,"column":24}},"219":{"start":{"line":618,"column":2},"end":{"line":618,"column":35}},"220":{"start":{"line":620,"column":2},"end":{"line":622,"column":3}},"221":{"start":{"line":621,"column":4},"end":{"line":621,"column":42}},"222":{"start":{"line":624,"column":2},"end":{"line":624,"column":16}},"223":{"start":{"line":628,"column":0},"end":{"line":628,"column":19}},"224":{"start":{"line":629,"column":0},"end":{"line":629,"column":68}},"225":{"start":{"line":630,"column":0},"end":{"line":630,"column":53}},"226":{"start":{"line":631,"column":0},"end":{"line":631,"column":41}},"227":{"start":{"line":634,"column":0},"end":{"line":634,"column":17}},"228":{"start":{"line":635,"column":0},"end":{"line":635,"column":43}},"229":{"start":{"line":636,"column":0},"end":{"line":636,"column":33}},"230":{"start":{"line":637,"column":0},"end":{"line":637,"column":25}},"231":{"start":{"line":640,"column":0},"end":{"line":642,"column":1}},"232":{"start":{"line":641,"column":4},"end":{"line":641,"column":56}},"233":{"start":{"line":644,"column":0},"end":{"line":644,"column":18}},"234":{"start":{"line":645,"column":0},"end":{"line":645,"column":85}},"235":{"start":{"line":650,"column":0},"end":{"line":652,"column":1}},"236":{"start":{"line":651,"column":2},"end":{"line":651,"column":37}},"237":{"start":{"line":653,"column":0},"end":{"line":653,"column":114}},"238":{"start":{"line":659,"column":0},"end":{"line":689,"column":2}},"239":{"start":{"line":670,"column":2},"end":{"line":670,"column":75}},"240":{"start":{"line":671,"column":2},"end":{"line":671,"column":75}},"241":{"start":{"line":672,"column":2},"end":{"line":672,"column":80}},"242":{"start":{"line":673,"column":2},"end":{"line":673,"column":75}},"243":{"start":{"line":674,"column":2},"end":{"line":677,"column":3}},"244":{"start":{"line":676,"column":4},"end":{"line":676,"column":11}},"245":{"start":{"line":680,"column":2},"end":{"line":680,"column":32}},"246":{"start":{"line":683,"column":2},"end":{"line":683,"column":59}},"247":{"start":{"line":686,"column":2},"end":{"line":687,"column":80}},"248":{"start":{"line":688,"column":2},"end":{"line":688,"column":21}},"249":{"start":{"line":694,"column":0},"end":{"line":704,"column":1}},"250":{"start":{"line":695,"column":2},"end":{"line":695,"column":29}},"251":{"start":{"line":697,"column":2},"end":{"line":697,"column":55}},"252":{"start":{"line":699,"column":2},"end":{"line":699,"column":23}},"253":{"start":{"line":700,"column":2},"end":{"line":700,"column":24}},"254":{"start":{"line":701,"column":2},"end":{"line":701,"column":23}},"255":{"start":{"line":703,"column":2},"end":{"line":703,"column":65}},"256":{"start":{"line":705,"column":0},"end":{"line":705,"column":116}},"257":{"start":{"line":707,"column":0},"end":{"line":733,"column":2}},"258":{"start":{"line":708,"column":2},"end":{"line":710,"column":3}},"259":{"start":{"line":709,"column":4},"end":{"line":709,"column":11}},"260":{"start":{"line":712,"column":2},"end":{"line":716,"column":3}},"261":{"start":{"line":713,"column":4},"end":{"line":713,"column":93}},"262":{"start":{"line":715,"column":4},"end":{"line":715,"column":27}},"263":{"start":{"line":718,"column":2},"end":{"line":720,"column":3}},"264":{"start":{"line":719,"column":4},"end":{"line":719,"column":40}},"265":{"start":{"line":721,"column":2},"end":{"line":721,"column":26}},"266":{"start":{"line":723,"column":2},"end":{"line":725,"column":3}},"267":{"start":{"line":724,"column":4},"end":{"line":724,"column":46}},"268":{"start":{"line":727,"column":2},"end":{"line":727,"column":92}},"269":{"start":{"line":729,"column":2},"end":{"line":729,"column":52}},"270":{"start":{"line":731,"column":2},"end":{"line":731,"column":31}},"271":{"start":{"line":732,"column":2},"end":{"line":732,"column":26}},"272":{"start":{"line":735,"column":0},"end":{"line":739,"column":2}},"273":{"start":{"line":736,"column":2},"end":{"line":738,"column":3}},"274":{"start":{"line":737,"column":4},"end":{"line":737,"column":36}},"275":{"start":{"line":741,"column":0},"end":{"line":743,"column":2}},"276":{"start":{"line":742,"column":2},"end":{"line":742,"column":26}},"277":{"start":{"line":745,"column":0},"end":{"line":748,"column":2}},"278":{"start":{"line":746,"column":2},"end":{"line":746,"column":26}},"279":{"start":{"line":747,"column":2},"end":{"line":747,"column":64}},"280":{"start":{"line":750,"column":0},"end":{"line":754,"column":2}},"281":{"start":{"line":751,"column":2},"end":{"line":751,"column":22}},"282":{"start":{"line":752,"column":2},"end":{"line":752,"column":26}},"283":{"start":{"line":753,"column":2},"end":{"line":753,"column":62}},"284":{"start":{"line":756,"column":0},"end":{"line":758,"column":2}},"285":{"start":{"line":757,"column":2},"end":{"line":757,"column":33}},"286":{"start":{"line":760,"column":0},"end":{"line":783,"column":2}},"287":{"start":{"line":761,"column":2},"end":{"line":763,"column":3}},"288":{"start":{"line":762,"column":4},"end":{"line":762,"column":33}},"289":{"start":{"line":765,"column":2},"end":{"line":767,"column":3}},"290":{"start":{"line":766,"column":4},"end":{"line":766,"column":51}},"291":{"start":{"line":769,"column":2},"end":{"line":774,"column":22}},"292":{"start":{"line":776,"column":2},"end":{"line":778,"column":72}},"293":{"start":{"line":780,"column":2},"end":{"line":780,"column":48}},"294":{"start":{"line":782,"column":2},"end":{"line":782,"column":42}},"295":{"start":{"line":785,"column":0},"end":{"line":790,"column":2}},"296":{"start":{"line":786,"column":4},"end":{"line":788,"column":5}},"297":{"start":{"line":787,"column":8},"end":{"line":787,"column":20}},"298":{"start":{"line":789,"column":4},"end":{"line":789,"column":63}},"299":{"start":{"line":794,"column":0},"end":{"line":800,"column":2}},"300":{"start":{"line":795,"column":2},"end":{"line":799,"column":3}},"301":{"start":{"line":796,"column":4},"end":{"line":796,"column":60}},"302":{"start":{"line":798,"column":4},"end":{"line":798,"column":61}},"303":{"start":{"line":805,"column":0},"end":{"line":805,"column":40}},"304":{"start":{"line":806,"column":0},"end":{"line":806,"column":42}},"305":{"start":{"line":807,"column":0},"end":{"line":807,"column":44}},"306":{"start":{"line":808,"column":0},"end":{"line":808,"column":22}},"307":{"start":{"line":809,"column":0},"end":{"line":809,"column":32}},"308":{"start":{"line":811,"column":0},"end":{"line":825,"column":1}},"309":{"start":{"line":812,"column":2},"end":{"line":814,"column":3}},"310":{"start":{"line":813,"column":4},"end":{"line":813,"column":33}},"311":{"start":{"line":815,"column":2},"end":{"line":815,"column":23}},"312":{"start":{"line":816,"column":2},"end":{"line":818,"column":3}},"313":{"start":{"line":817,"column":4},"end":{"line":817,"column":70}},"314":{"start":{"line":819,"column":2},"end":{"line":823,"column":3}},"315":{"start":{"line":820,"column":4},"end":{"line":820,"column":49}},"316":{"start":{"line":821,"column":4},"end":{"line":821,"column":30}},"317":{"start":{"line":822,"column":4},"end":{"line":822,"column":57}},"318":{"start":{"line":824,"column":2},"end":{"line":824,"column":56}},"319":{"start":{"line":827,"column":0},"end":{"line":841,"column":1}},"320":{"start":{"line":828,"column":2},"end":{"line":830,"column":3}},"321":{"start":{"line":829,"column":4},"end":{"line":829,"column":33}},"322":{"start":{"line":831,"column":2},"end":{"line":831,"column":24}},"323":{"start":{"line":832,"column":2},"end":{"line":834,"column":3}},"324":{"start":{"line":833,"column":4},"end":{"line":833,"column":71}},"325":{"start":{"line":835,"column":2},"end":{"line":839,"column":3}},"326":{"start":{"line":836,"column":4},"end":{"line":836,"column":49}},"327":{"start":{"line":837,"column":4},"end":{"line":837,"column":30}},"328":{"start":{"line":838,"column":4},"end":{"line":838,"column":57}},"329":{"start":{"line":840,"column":2},"end":{"line":840,"column":56}},"330":{"start":{"line":843,"column":0},"end":{"line":857,"column":1}},"331":{"start":{"line":844,"column":2},"end":{"line":846,"column":3}},"332":{"start":{"line":845,"column":4},"end":{"line":845,"column":33}},"333":{"start":{"line":847,"column":2},"end":{"line":847,"column":23}},"334":{"start":{"line":848,"column":2},"end":{"line":850,"column":3}},"335":{"start":{"line":849,"column":4},"end":{"line":849,"column":70}},"336":{"start":{"line":851,"column":2},"end":{"line":855,"column":3}},"337":{"start":{"line":852,"column":4},"end":{"line":852,"column":49}},"338":{"start":{"line":853,"column":4},"end":{"line":853,"column":30}},"339":{"start":{"line":854,"column":4},"end":{"line":854,"column":53}},"340":{"start":{"line":856,"column":2},"end":{"line":856,"column":52}},"341":{"start":{"line":859,"column":0},"end":{"line":873,"column":1}},"342":{"start":{"line":860,"column":2},"end":{"line":862,"column":3}},"343":{"start":{"line":861,"column":4},"end":{"line":861,"column":33}},"344":{"start":{"line":863,"column":2},"end":{"line":863,"column":24}},"345":{"start":{"line":864,"column":2},"end":{"line":866,"column":3}},"346":{"start":{"line":865,"column":4},"end":{"line":865,"column":71}},"347":{"start":{"line":867,"column":2},"end":{"line":871,"column":3}},"348":{"start":{"line":868,"column":4},"end":{"line":868,"column":49}},"349":{"start":{"line":869,"column":4},"end":{"line":869,"column":30}},"350":{"start":{"line":870,"column":4},"end":{"line":870,"column":53}},"351":{"start":{"line":872,"column":2},"end":{"line":872,"column":52}},"352":{"start":{"line":878,"column":0},"end":{"line":898,"column":1}},"353":{"start":{"line":879,"column":2},"end":{"line":879,"column":26}},"354":{"start":{"line":880,"column":2},"end":{"line":880,"column":26}},"355":{"start":{"line":882,"column":2},"end":{"line":882,"column":38}},"356":{"start":{"line":884,"column":2},"end":{"line":884,"column":36}},"357":{"start":{"line":885,"column":2},"end":{"line":885,"column":74}},"358":{"start":{"line":886,"column":2},"end":{"line":886,"column":22}},"359":{"start":{"line":892,"column":2},"end":{"line":892,"column":45}},"360":{"start":{"line":893,"column":2},"end":{"line":893,"column":44}},"361":{"start":{"line":894,"column":2},"end":{"line":894,"column":46}},"362":{"start":{"line":896,"column":2},"end":{"line":896,"column":42}},"363":{"start":{"line":897,"column":2},"end":{"line":897,"column":44}},"364":{"start":{"line":899,"column":0},"end":{"line":899,"column":91}},"365":{"start":{"line":901,"column":0},"end":{"line":1032,"column":2}},"366":{"start":{"line":902,"column":2},"end":{"line":906,"column":3}},"367":{"start":{"line":903,"column":4},"end":{"line":903,"column":33}},"368":{"start":{"line":905,"column":4},"end":{"line":905,"column":40}},"369":{"start":{"line":908,"column":2},"end":{"line":908,"column":59}},"370":{"start":{"line":909,"column":2},"end":{"line":909,"column":50}},"371":{"start":{"line":910,"column":2},"end":{"line":910,"column":65}},"372":{"start":{"line":911,"column":2},"end":{"line":911,"column":37}},"373":{"start":{"line":912,"column":2},"end":{"line":912,"column":37}},"374":{"start":{"line":914,"column":2},"end":{"line":917,"column":3}},"375":{"start":{"line":915,"column":4},"end":{"line":915,"column":85}},"376":{"start":{"line":916,"column":4},"end":{"line":916,"column":84}},"377":{"start":{"line":919,"column":2},"end":{"line":919,"column":47}},"378":{"start":{"line":921,"column":2},"end":{"line":923,"column":3}},"379":{"start":{"line":922,"column":4},"end":{"line":922,"column":37}},"380":{"start":{"line":925,"column":2},"end":{"line":929,"column":14}},"381":{"start":{"line":930,"column":2},"end":{"line":930,"column":18}},"382":{"start":{"line":933,"column":2},"end":{"line":1029,"column":3}},"383":{"start":{"line":934,"column":4},"end":{"line":934,"column":39}},"384":{"start":{"line":935,"column":4},"end":{"line":935,"column":53}},"385":{"start":{"line":939,"column":7},"end":{"line":1029,"column":3}},"386":{"start":{"line":940,"column":4},"end":{"line":940,"column":65}},"387":{"start":{"line":941,"column":4},"end":{"line":945,"column":7}},"388":{"start":{"line":947,"column":4},"end":{"line":950,"column":7}},"389":{"start":{"line":948,"column":6},"end":{"line":948,"column":59}},"390":{"start":{"line":949,"column":6},"end":{"line":949,"column":35}},"391":{"start":{"line":952,"column":4},"end":{"line":955,"column":7}},"392":{"start":{"line":953,"column":6},"end":{"line":953,"column":63}},"393":{"start":{"line":954,"column":6},"end":{"line":954,"column":35}},"394":{"start":{"line":957,"column":4},"end":{"line":957,"column":35}},"395":{"start":{"line":958,"column":4},"end":{"line":958,"column":50}},"396":{"start":{"line":959,"column":4},"end":{"line":959,"column":53}},"397":{"start":{"line":964,"column":4},"end":{"line":964,"column":24}},"398":{"start":{"line":965,"column":4},"end":{"line":965,"column":47}},"399":{"start":{"line":966,"column":4},"end":{"line":966,"column":47}},"400":{"start":{"line":967,"column":4},"end":{"line":967,"column":46}},"401":{"start":{"line":968,"column":4},"end":{"line":968,"column":38}},"402":{"start":{"line":969,"column":4},"end":{"line":969,"column":54}},"403":{"start":{"line":970,"column":4},"end":{"line":974,"column":5}},"404":{"start":{"line":971,"column":6},"end":{"line":971,"column":47}},"405":{"start":{"line":972,"column":11},"end":{"line":974,"column":5}},"406":{"start":{"line":973,"column":6},"end":{"line":973,"column":39}},"407":{"start":{"line":975,"column":4},"end":{"line":975,"column":46}},"408":{"start":{"line":977,"column":4},"end":{"line":981,"column":7}},"409":{"start":{"line":978,"column":6},"end":{"line":978,"column":59}},"410":{"start":{"line":979,"column":6},"end":{"line":979,"column":35}},"411":{"start":{"line":980,"column":6},"end":{"line":980,"column":35}},"412":{"start":{"line":983,"column":4},"end":{"line":990,"column":7}},"413":{"start":{"line":984,"column":6},"end":{"line":984,"column":73}},"414":{"start":{"line":985,"column":6},"end":{"line":989,"column":7}},"415":{"start":{"line":986,"column":8},"end":{"line":986,"column":21}},"416":{"start":{"line":988,"column":8},"end":{"line":988,"column":47}},"417":{"start":{"line":992,"column":4},"end":{"line":1019,"column":5}},"418":{"start":{"line":993,"column":6},"end":{"line":993,"column":19}},"419":{"start":{"line":994,"column":6},"end":{"line":994,"column":99}},"420":{"start":{"line":995,"column":6},"end":{"line":1001,"column":7}},"421":{"start":{"line":996,"column":8},"end":{"line":996,"column":48}},"422":{"start":{"line":997,"column":8},"end":{"line":997,"column":44}},"423":{"start":{"line":998,"column":8},"end":{"line":998,"column":69}},"424":{"start":{"line":999,"column":8},"end":{"line":999,"column":46}},"425":{"start":{"line":1000,"column":8},"end":{"line":1000,"column":54}},"426":{"start":{"line":1002,"column":6},"end":{"line":1018,"column":7}},"427":{"start":{"line":1004,"column":8},"end":{"line":1007,"column":9}},"428":{"start":{"line":1006,"column":10},"end":{"line":1006,"column":27}},"429":{"start":{"line":1010,"column":8},"end":{"line":1017,"column":9}},"430":{"start":{"line":1011,"column":10},"end":{"line":1012,"column":59}},"431":{"start":{"line":1013,"column":10},"end":{"line":1013,"column":41}},"432":{"start":{"line":1014,"column":10},"end":{"line":1014,"column":35}},"433":{"start":{"line":1016,"column":10},"end":{"line":1016,"column":36}},"434":{"start":{"line":1021,"column":4},"end":{"line":1028,"column":7}},"435":{"start":{"line":1022,"column":6},"end":{"line":1022,"column":21}},"436":{"start":{"line":1023,"column":6},"end":{"line":1027,"column":7}},"437":{"start":{"line":1024,"column":8},"end":{"line":1024,"column":57}},"438":{"start":{"line":1026,"column":8},"end":{"line":1026,"column":40}},"439":{"start":{"line":1031,"column":2},"end":{"line":1031,"column":17}},"440":{"start":{"line":1034,"column":0},"end":{"line":1038,"column":2}},"441":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":48}},"442":{"start":{"line":1036,"column":2},"end":{"line":1036,"column":16}},"443":{"start":{"line":1037,"column":2},"end":{"line":1037,"column":17}},"444":{"start":{"line":1040,"column":0},"end":{"line":1047,"column":2}},"445":{"start":{"line":1041,"column":2},"end":{"line":1043,"column":3}},"446":{"start":{"line":1042,"column":4},"end":{"line":1042,"column":31}},"447":{"start":{"line":1044,"column":2},"end":{"line":1046,"column":3}},"448":{"start":{"line":1045,"column":4},"end":{"line":1045,"column":37}},"449":{"start":{"line":1049,"column":0},"end":{"line":1058,"column":1}},"450":{"start":{"line":1050,"column":2},"end":{"line":1050,"column":36}},"451":{"start":{"line":1051,"column":2},"end":{"line":1051,"column":35}},"452":{"start":{"line":1052,"column":2},"end":{"line":1052,"column":40}},"453":{"start":{"line":1053,"column":2},"end":{"line":1053,"column":37}},"454":{"start":{"line":1054,"column":2},"end":{"line":1054,"column":37}},"455":{"start":{"line":1055,"column":2},"end":{"line":1055,"column":18}},"456":{"start":{"line":1056,"column":2},"end":{"line":1056,"column":23}},"457":{"start":{"line":1057,"column":2},"end":{"line":1057,"column":22}},"458":{"start":{"line":1060,"column":0},"end":{"line":1069,"column":1}},"459":{"start":{"line":1061,"column":2},"end":{"line":1068,"column":35}},"460":{"start":{"line":1071,"column":0},"end":{"line":1078,"column":3}},"461":{"start":{"line":1073,"column":4},"end":{"line":1073,"column":39}},"462":{"start":{"line":1076,"column":4},"end":{"line":1076,"column":40}},"463":{"start":{"line":1080,"column":0},"end":{"line":1080,"column":34}},"464":{"start":{"line":1085,"column":0},"end":{"line":1091,"column":1}},"465":{"start":{"line":1086,"column":2},"end":{"line":1086,"column":29}},"466":{"start":{"line":1088,"column":2},"end":{"line":1088,"column":24}},"467":{"start":{"line":1090,"column":2},"end":{"line":1090,"column":26}},"468":{"start":{"line":1092,"column":0},"end":{"line":1092,"column":114}},"469":{"start":{"line":1094,"column":0},"end":{"line":1127,"column":2}},"470":{"start":{"line":1095,"column":2},"end":{"line":1095,"column":23}},"471":{"start":{"line":1096,"column":2},"end":{"line":1096,"column":25}},"472":{"start":{"line":1098,"column":2},"end":{"line":1098,"column":55}},"473":{"start":{"line":1100,"column":2},"end":{"line":1102,"column":3}},"474":{"start":{"line":1101,"column":4},"end":{"line":1101,"column":46}},"475":{"start":{"line":1103,"column":2},"end":{"line":1103,"column":30}},"476":{"start":{"line":1104,"column":2},"end":{"line":1104,"column":22}},"477":{"start":{"line":1106,"column":2},"end":{"line":1108,"column":3}},"478":{"start":{"line":1107,"column":4},"end":{"line":1107,"column":83}},"479":{"start":{"line":1110,"column":2},"end":{"line":1110,"column":53}},"480":{"start":{"line":1111,"column":2},"end":{"line":1111,"column":38}},"481":{"start":{"line":1112,"column":2},"end":{"line":1112,"column":39}},"482":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":34}},"483":{"start":{"line":1115,"column":2},"end":{"line":1117,"column":74}},"484":{"start":{"line":1118,"column":2},"end":{"line":1118,"column":31}},"485":{"start":{"line":1119,"column":2},"end":{"line":1119,"column":26}},"486":{"start":{"line":1121,"column":2},"end":{"line":1121,"column":35}},"487":{"start":{"line":1122,"column":2},"end":{"line":1122,"column":51}},"488":{"start":{"line":1123,"column":2},"end":{"line":1123,"column":22}},"489":{"start":{"line":1124,"column":2},"end":{"line":1124,"column":69}},"490":{"start":{"line":1126,"column":2},"end":{"line":1126,"column":56}},"491":{"start":{"line":1129,"column":0},"end":{"line":1133,"column":2}},"492":{"start":{"line":1130,"column":2},"end":{"line":1130,"column":59}},"493":{"start":{"line":1131,"column":2},"end":{"line":1131,"column":39}},"494":{"start":{"line":1132,"column":2},"end":{"line":1132,"column":35}},"495":{"start":{"line":1135,"column":0},"end":{"line":1141,"column":2}},"496":{"start":{"line":1136,"column":2},"end":{"line":1140,"column":3}},"497":{"start":{"line":1137,"column":4},"end":{"line":1137,"column":35}},"498":{"start":{"line":1139,"column":4},"end":{"line":1139,"column":63}},"499":{"start":{"line":1145,"column":0},"end":{"line":1151,"column":2}},"500":{"start":{"line":1146,"column":2},"end":{"line":1150,"column":3}},"501":{"start":{"line":1147,"column":4},"end":{"line":1147,"column":60}},"502":{"start":{"line":1149,"column":4},"end":{"line":1149,"column":61}},"503":{"start":{"line":1154,"column":0},"end":{"line":1160,"column":2}},"504":{"start":{"line":1155,"column":2},"end":{"line":1159,"column":3}},"505":{"start":{"line":1156,"column":4},"end":{"line":1156,"column":37}},"506":{"start":{"line":1157,"column":9},"end":{"line":1159,"column":3}},"507":{"start":{"line":1158,"column":4},"end":{"line":1158,"column":59}},"508":{"start":{"line":1162,"column":0},"end":{"line":1168,"column":2}},"509":{"start":{"line":1163,"column":2},"end":{"line":1167,"column":3}},"510":{"start":{"line":1164,"column":4},"end":{"line":1164,"column":58}},"511":{"start":{"line":1165,"column":9},"end":{"line":1167,"column":3}},"512":{"start":{"line":1166,"column":4},"end":{"line":1166,"column":80}},"513":{"start":{"line":1170,"column":0},"end":{"line":1176,"column":2}},"514":{"start":{"line":1171,"column":2},"end":{"line":1175,"column":3}},"515":{"start":{"line":1172,"column":4},"end":{"line":1172,"column":47}},"516":{"start":{"line":1173,"column":9},"end":{"line":1175,"column":3}},"517":{"start":{"line":1174,"column":4},"end":{"line":1174,"column":69}},"518":{"start":{"line":1179,"column":0},"end":{"line":1187,"column":2}},"519":{"start":{"line":1180,"column":2},"end":{"line":1186,"column":3}},"520":{"start":{"line":1181,"column":4},"end":{"line":1181,"column":25}},"521":{"start":{"line":1182,"column":9},"end":{"line":1186,"column":3}},"522":{"start":{"line":1183,"column":4},"end":{"line":1183,"column":32}},"523":{"start":{"line":1185,"column":4},"end":{"line":1185,"column":45}},"524":{"start":{"line":1190,"column":0},"end":{"line":1200,"column":2}},"525":{"start":{"line":1191,"column":2},"end":{"line":1191,"column":71}},"526":{"start":{"line":1193,"column":2},"end":{"line":1193,"column":53}},"527":{"start":{"line":1195,"column":2},"end":{"line":1199,"column":3}},"528":{"start":{"line":1196,"column":4},"end":{"line":1196,"column":31}},"529":{"start":{"line":1198,"column":4},"end":{"line":1198,"column":21}},"530":{"start":{"line":1205,"column":0},"end":{"line":1207,"column":1}},"531":{"start":{"line":1206,"column":2},"end":{"line":1206,"column":37}},"532":{"start":{"line":1208,"column":0},"end":{"line":1208,"column":116}},"533":{"start":{"line":1214,"column":0},"end":{"line":1230,"column":2}},"534":{"start":{"line":1222,"column":2},"end":{"line":1222,"column":86}},"535":{"start":{"line":1225,"column":2},"end":{"line":1225,"column":59}},"536":{"start":{"line":1228,"column":2},"end":{"line":1228,"column":89}},"537":{"start":{"line":1229,"column":2},"end":{"line":1229,"column":21}},"538":{"start":{"line":1235,"column":0},"end":{"line":1251,"column":1}},"539":{"start":{"line":1236,"column":2},"end":{"line":1236,"column":30}},"540":{"start":{"line":1237,"column":2},"end":{"line":1237,"column":22}},"541":{"start":{"line":1238,"column":2},"end":{"line":1238,"column":20}},"542":{"start":{"line":1239,"column":2},"end":{"line":1239,"column":36}},"543":{"start":{"line":1241,"column":2},"end":{"line":1241,"column":37}},"544":{"start":{"line":1243,"column":2},"end":{"line":1243,"column":34}},"545":{"start":{"line":1245,"column":2},"end":{"line":1245,"column":40}},"546":{"start":{"line":1247,"column":2},"end":{"line":1247,"column":60}},"547":{"start":{"line":1248,"column":2},"end":{"line":1248,"column":69}},"548":{"start":{"line":1250,"column":2},"end":{"line":1250,"column":56}},"549":{"start":{"line":1252,"column":0},"end":{"line":1252,"column":114}},"550":{"start":{"line":1254,"column":0},"end":{"line":1256,"column":2}},"551":{"start":{"line":1255,"column":2},"end":{"line":1255,"column":39}},"552":{"start":{"line":1258,"column":0},"end":{"line":1260,"column":2}},"553":{"start":{"line":1259,"column":2},"end":{"line":1259,"column":42}},"554":{"start":{"line":1262,"column":0},"end":{"line":1262,"column":76}}},"branchMap":{"1":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":256,"column":4}},{"start":{"line":256,"column":4},"end":{"line":256,"column":4}}]},"2":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":6},"end":{"line":257,"column":6}},{"start":{"line":257,"column":6},"end":{"line":257,"column":6}}]},"3":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":10},"end":{"line":257,"column":31}},{"start":{"line":257,"column":35},"end":{"line":257,"column":64}}]},"4":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":2},"end":{"line":279,"column":2}},{"start":{"line":279,"column":2},"end":{"line":279,"column":2}}]},"5":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":7},"end":{"line":279,"column":32}},{"start":{"line":279,"column":38},"end":{"line":279,"column":56}}]},"6":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":4},"end":{"line":295,"column":4}},{"start":{"line":295,"column":4},"end":{"line":295,"column":4}}]},"7":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":8},"end":{"line":295,"column":22}},{"start":{"line":295,"column":27},"end":{"line":295,"column":39}},{"start":{"line":295,"column":43},"end":{"line":295,"column":70}}]},"8":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":304,"column":4}},{"start":{"line":304,"column":4},"end":{"line":304,"column":4}}]},"9":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]},"10":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":2},"end":{"line":335,"column":2}},{"start":{"line":335,"column":2},"end":{"line":335,"column":2}}]},"11":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":2},"end":{"line":343,"column":2}},{"start":{"line":343,"column":2},"end":{"line":343,"column":2}}]},"12":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":4},"end":{"line":344,"column":4}},{"start":{"line":344,"column":4},"end":{"line":344,"column":4}}]},"13":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":6},"end":{"line":345,"column":6}},{"start":{"line":345,"column":6},"end":{"line":345,"column":6}}]},"14":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":2},"end":{"line":359,"column":2}},{"start":{"line":359,"column":2},"end":{"line":359,"column":2}}]},"15":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":363,"column":4}},{"start":{"line":363,"column":4},"end":{"line":363,"column":4}}]},"16":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":2},"end":{"line":371,"column":2}},{"start":{"line":371,"column":2},"end":{"line":371,"column":2}}]},"17":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":4},"end":{"line":408,"column":4}},{"start":{"line":408,"column":4},"end":{"line":408,"column":4}}]},"18":{"line":408,"type":"binary-expr","locations":[{"start":{"line":408,"column":8},"end":{"line":408,"column":15}},{"start":{"line":408,"column":19},"end":{"line":408,"column":36}}]},"19":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":15},"end":{"line":434,"column":26}},{"start":{"line":434,"column":30},"end":{"line":434,"column":43}}]},"20":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":2},"end":{"line":441,"column":2}},{"start":{"line":441,"column":2},"end":{"line":441,"column":2}}]},"21":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":7},"end":{"line":441,"column":18}},{"start":{"line":441,"column":22},"end":{"line":441,"column":34}},{"start":{"line":441,"column":39},"end":{"line":441,"column":50}}]},"22":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":22},"end":{"line":446,"column":37}},{"start":{"line":446,"column":41},"end":{"line":446,"column":53}}]},"23":{"line":452,"type":"binary-expr","locations":[{"start":{"line":452,"column":31},"end":{"line":452,"column":50}},{"start":{"line":452,"column":54},"end":{"line":452,"column":72}}]},"24":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":6},"end":{"line":455,"column":6}},{"start":{"line":455,"column":6},"end":{"line":455,"column":6}}]},"25":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":7},"end":{"line":468,"column":7}},{"start":{"line":468,"column":7},"end":{"line":468,"column":7}}]},"26":{"line":515,"type":"binary-expr","locations":[{"start":{"line":515,"column":27},"end":{"line":515,"column":46}},{"start":{"line":515,"column":50},"end":{"line":515,"column":68}}]},"27":{"line":533,"type":"cond-expr","locations":[{"start":{"line":533,"column":58},"end":{"line":533,"column":79}},{"start":{"line":533,"column":83},"end":{"line":533,"column":87}}]},"28":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":2},"end":{"line":546,"column":2}},{"start":{"line":546,"column":2},"end":{"line":546,"column":2}}]},"29":{"line":553,"type":"if","locations":[{"start":{"line":553,"column":4},"end":{"line":553,"column":4}},{"start":{"line":553,"column":4},"end":{"line":553,"column":4}}]},"30":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":4},"end":{"line":560,"column":4}},{"start":{"line":560,"column":4},"end":{"line":560,"column":4}}]},"31":{"line":571,"type":"if","locations":[{"start":{"line":571,"column":2},"end":{"line":571,"column":2}},{"start":{"line":571,"column":2},"end":{"line":571,"column":2}}]},"32":{"line":571,"type":"binary-expr","locations":[{"start":{"line":571,"column":7},"end":{"line":571,"column":26}},{"start":{"line":571,"column":32},"end":{"line":571,"column":51}}]},"33":{"line":572,"type":"binary-expr","locations":[{"start":{"line":572,"column":34},"end":{"line":572,"column":42}},{"start":{"line":572,"column":46},"end":{"line":572,"column":65}}]},"34":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":2},"end":{"line":580,"column":2}},{"start":{"line":580,"column":2},"end":{"line":580,"column":2}}]},"35":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":2},"end":{"line":590,"column":2}},{"start":{"line":590,"column":2},"end":{"line":590,"column":2}}]},"36":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":2},"end":{"line":595,"column":2}},{"start":{"line":595,"column":2},"end":{"line":595,"column":2}}]},"37":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":6},"end":{"line":595,"column":17}},{"start":{"line":595,"column":22},"end":{"line":595,"column":33}},{"start":{"line":595,"column":37},"end":{"line":595,"column":49}}]},"38":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":2},"end":{"line":602,"column":2}},{"start":{"line":602,"column":2},"end":{"line":602,"column":2}}]},"39":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":2},"end":{"line":610,"column":2}},{"start":{"line":610,"column":2},"end":{"line":610,"column":2}}]},"40":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":2},"end":{"line":613,"column":2}},{"start":{"line":613,"column":2},"end":{"line":613,"column":2}}]},"41":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":6},"end":{"line":613,"column":18}},{"start":{"line":613,"column":22},"end":{"line":613,"column":52}}]},"42":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":24},"end":{"line":613,"column":35}},{"start":{"line":613,"column":39},"end":{"line":613,"column":51}}]},"43":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":2},"end":{"line":620,"column":2}},{"start":{"line":620,"column":2},"end":{"line":620,"column":2}}]},"44":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":2},"end":{"line":674,"column":2}},{"start":{"line":674,"column":2},"end":{"line":674,"column":2}}]},"45":{"line":674,"type":"binary-expr","locations":[{"start":{"line":674,"column":6},"end":{"line":674,"column":18}},{"start":{"line":674,"column":22},"end":{"line":674,"column":34}},{"start":{"line":674,"column":38},"end":{"line":674,"column":48}},{"start":{"line":674,"column":52},"end":{"line":674,"column":61}}]},"46":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":2},"end":{"line":708,"column":2}},{"start":{"line":708,"column":2},"end":{"line":708,"column":2}}]},"47":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":2},"end":{"line":712,"column":2}},{"start":{"line":712,"column":2},"end":{"line":712,"column":2}}]},"48":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":2},"end":{"line":723,"column":2}},{"start":{"line":723,"column":2},"end":{"line":723,"column":2}}]},"49":{"line":723,"type":"binary-expr","locations":[{"start":{"line":723,"column":6},"end":{"line":723,"column":19}},{"start":{"line":723,"column":23},"end":{"line":723,"column":49}}]},"50":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":2},"end":{"line":736,"column":2}},{"start":{"line":736,"column":2},"end":{"line":736,"column":2}}]},"51":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":2},"end":{"line":761,"column":2}},{"start":{"line":761,"column":2},"end":{"line":761,"column":2}}]},"52":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":2},"end":{"line":765,"column":2}},{"start":{"line":765,"column":2},"end":{"line":765,"column":2}}]},"53":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":16},"end":{"line":770,"column":30}},{"start":{"line":770,"column":34},"end":{"line":770,"column":39}}]},"54":{"line":771,"type":"binary-expr","locations":[{"start":{"line":771,"column":16},"end":{"line":771,"column":32}},{"start":{"line":771,"column":36},"end":{"line":771,"column":65}},{"start":{"line":771,"column":70},"end":{"line":771,"column":101}}]},"55":{"line":772,"type":"binary-expr","locations":[{"start":{"line":772,"column":18},"end":{"line":772,"column":34}},{"start":{"line":772,"column":38},"end":{"line":772,"column":50}},{"start":{"line":772,"column":54},"end":{"line":772,"column":88}}]},"56":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":4},"end":{"line":786,"column":4}},{"start":{"line":786,"column":4},"end":{"line":786,"column":4}}]},"57":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":2},"end":{"line":795,"column":2}},{"start":{"line":795,"column":2},"end":{"line":795,"column":2}}]},"58":{"line":795,"type":"binary-expr","locations":[{"start":{"line":795,"column":6},"end":{"line":795,"column":18}},{"start":{"line":795,"column":23},"end":{"line":795,"column":42}}]},"59":{"line":796,"type":"binary-expr","locations":[{"start":{"line":796,"column":27},"end":{"line":796,"column":35}},{"start":{"line":796,"column":39},"end":{"line":796,"column":58}}]},"60":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":2},"end":{"line":812,"column":2}},{"start":{"line":812,"column":2},"end":{"line":812,"column":2}}]},"61":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":2},"end":{"line":816,"column":2}},{"start":{"line":816,"column":2},"end":{"line":816,"column":2}}]},"62":{"line":816,"type":"binary-expr","locations":[{"start":{"line":816,"column":6},"end":{"line":816,"column":22}},{"start":{"line":816,"column":26},"end":{"line":816,"column":54}}]},"63":{"line":819,"type":"if","locations":[{"start":{"line":819,"column":2},"end":{"line":819,"column":2}},{"start":{"line":819,"column":2},"end":{"line":819,"column":2}}]},"64":{"line":819,"type":"binary-expr","locations":[{"start":{"line":819,"column":6},"end":{"line":819,"column":19}},{"start":{"line":819,"column":23},"end":{"line":819,"column":67}}]},"65":{"line":828,"type":"if","locations":[{"start":{"line":828,"column":2},"end":{"line":828,"column":2}},{"start":{"line":828,"column":2},"end":{"line":828,"column":2}}]},"66":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":2},"end":{"line":832,"column":2}},{"start":{"line":832,"column":2},"end":{"line":832,"column":2}}]},"67":{"line":832,"type":"binary-expr","locations":[{"start":{"line":832,"column":6},"end":{"line":832,"column":22}},{"start":{"line":832,"column":26},"end":{"line":832,"column":55}}]},"68":{"line":835,"type":"if","locations":[{"start":{"line":835,"column":2},"end":{"line":835,"column":2}},{"start":{"line":835,"column":2},"end":{"line":835,"column":2}}]},"69":{"line":835,"type":"binary-expr","locations":[{"start":{"line":835,"column":6},"end":{"line":835,"column":19}},{"start":{"line":835,"column":23},"end":{"line":835,"column":67}}]},"70":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":2},"end":{"line":844,"column":2}},{"start":{"line":844,"column":2},"end":{"line":844,"column":2}}]},"71":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":2},"end":{"line":848,"column":2}},{"start":{"line":848,"column":2},"end":{"line":848,"column":2}}]},"72":{"line":848,"type":"binary-expr","locations":[{"start":{"line":848,"column":6},"end":{"line":848,"column":22}},{"start":{"line":848,"column":26},"end":{"line":848,"column":54}}]},"73":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":2},"end":{"line":851,"column":2}},{"start":{"line":851,"column":2},"end":{"line":851,"column":2}}]},"74":{"line":851,"type":"binary-expr","locations":[{"start":{"line":851,"column":6},"end":{"line":851,"column":19}},{"start":{"line":851,"column":23},"end":{"line":851,"column":63}}]},"75":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":2},"end":{"line":860,"column":2}},{"start":{"line":860,"column":2},"end":{"line":860,"column":2}}]},"76":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":2},"end":{"line":864,"column":2}},{"start":{"line":864,"column":2},"end":{"line":864,"column":2}}]},"77":{"line":864,"type":"binary-expr","locations":[{"start":{"line":864,"column":6},"end":{"line":864,"column":22}},{"start":{"line":864,"column":26},"end":{"line":864,"column":55}}]},"78":{"line":867,"type":"if","locations":[{"start":{"line":867,"column":2},"end":{"line":867,"column":2}},{"start":{"line":867,"column":2},"end":{"line":867,"column":2}}]},"79":{"line":867,"type":"binary-expr","locations":[{"start":{"line":867,"column":6},"end":{"line":867,"column":19}},{"start":{"line":867,"column":23},"end":{"line":867,"column":63}}]},"80":{"line":885,"type":"binary-expr","locations":[{"start":{"line":885,"column":15},"end":{"line":885,"column":26}},{"start":{"line":885,"column":30},"end":{"line":885,"column":43}}]},"81":{"line":902,"type":"if","locations":[{"start":{"line":902,"column":2},"end":{"line":902,"column":2}},{"start":{"line":902,"column":2},"end":{"line":902,"column":2}}]},"82":{"line":908,"type":"binary-expr","locations":[{"start":{"line":908,"column":20},"end":{"line":908,"column":34}},{"start":{"line":908,"column":38},"end":{"line":908,"column":43}}]},"83":{"line":909,"type":"binary-expr","locations":[{"start":{"line":909,"column":21},"end":{"line":909,"column":37}},{"start":{"line":909,"column":41},"end":{"line":909,"column":49}}]},"84":{"line":910,"type":"binary-expr","locations":[{"start":{"line":910,"column":17},"end":{"line":910,"column":33}},{"start":{"line":910,"column":37},"end":{"line":910,"column":49}},{"start":{"line":910,"column":53},"end":{"line":910,"column":64}}]},"85":{"line":911,"type":"binary-expr","locations":[{"start":{"line":911,"column":17},"end":{"line":911,"column":29}},{"start":{"line":911,"column":33},"end":{"line":911,"column":36}}]},"86":{"line":912,"type":"binary-expr","locations":[{"start":{"line":912,"column":17},"end":{"line":912,"column":29}},{"start":{"line":912,"column":33},"end":{"line":912,"column":36}}]},"87":{"line":914,"type":"if","locations":[{"start":{"line":914,"column":2},"end":{"line":914,"column":2}},{"start":{"line":914,"column":2},"end":{"line":914,"column":2}}]},"88":{"line":914,"type":"binary-expr","locations":[{"start":{"line":914,"column":6},"end":{"line":914,"column":20}},{"start":{"line":914,"column":24},"end":{"line":914,"column":52}}]},"89":{"line":921,"type":"if","locations":[{"start":{"line":921,"column":2},"end":{"line":921,"column":2}},{"start":{"line":921,"column":2},"end":{"line":921,"column":2}}]},"90":{"line":933,"type":"if","locations":[{"start":{"line":933,"column":2},"end":{"line":933,"column":2}},{"start":{"line":933,"column":2},"end":{"line":933,"column":2}}]},"91":{"line":939,"type":"if","locations":[{"start":{"line":939,"column":7},"end":{"line":939,"column":7}},{"start":{"line":939,"column":7},"end":{"line":939,"column":7}}]},"92":{"line":969,"type":"binary-expr","locations":[{"start":{"line":969,"column":22},"end":{"line":969,"column":37}},{"start":{"line":969,"column":41},"end":{"line":969,"column":53}}]},"93":{"line":970,"type":"if","locations":[{"start":{"line":970,"column":4},"end":{"line":970,"column":4}},{"start":{"line":970,"column":4},"end":{"line":970,"column":4}}]},"94":{"line":972,"type":"if","locations":[{"start":{"line":972,"column":11},"end":{"line":972,"column":11}},{"start":{"line":972,"column":11},"end":{"line":972,"column":11}}]},"95":{"line":984,"type":"binary-expr","locations":[{"start":{"line":984,"column":31},"end":{"line":984,"column":50}},{"start":{"line":984,"column":54},"end":{"line":984,"column":72}}]},"96":{"line":985,"type":"if","locations":[{"start":{"line":985,"column":6},"end":{"line":985,"column":6}},{"start":{"line":985,"column":6},"end":{"line":985,"column":6}}]},"97":{"line":994,"type":"binary-expr","locations":[{"start":{"line":994,"column":31},"end":{"line":994,"column":63}},{"start":{"line":994,"column":67},"end":{"line":994,"column":98}}]},"98":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":6},"end":{"line":995,"column":6}},{"start":{"line":995,"column":6},"end":{"line":995,"column":6}}]},"99":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":6},"end":{"line":1002,"column":6}},{"start":{"line":1002,"column":6},"end":{"line":1002,"column":6}}]},"100":{"line":1004,"type":"if","locations":[{"start":{"line":1004,"column":8},"end":{"line":1004,"column":8}},{"start":{"line":1004,"column":8},"end":{"line":1004,"column":8}}]},"101":{"line":1010,"type":"if","locations":[{"start":{"line":1010,"column":8},"end":{"line":1010,"column":8}},{"start":{"line":1010,"column":8},"end":{"line":1010,"column":8}}]},"102":{"line":1023,"type":"if","locations":[{"start":{"line":1023,"column":6},"end":{"line":1023,"column":6}},{"start":{"line":1023,"column":6},"end":{"line":1023,"column":6}}]},"103":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":2},"end":{"line":1041,"column":2}},{"start":{"line":1041,"column":2},"end":{"line":1041,"column":2}}]},"104":{"line":1061,"type":"binary-expr","locations":[{"start":{"line":1061,"column":9},"end":{"line":1061,"column":28}},{"start":{"line":1062,"column":4},"end":{"line":1062,"column":23}},{"start":{"line":1063,"column":4},"end":{"line":1063,"column":30}},{"start":{"line":1064,"column":4},"end":{"line":1064,"column":24}},{"start":{"line":1065,"column":4},"end":{"line":1065,"column":22}},{"start":{"line":1066,"column":4},"end":{"line":1066,"column":27}},{"start":{"line":1067,"column":4},"end":{"line":1067,"column":38}},{"start":{"line":1068,"column":4},"end":{"line":1068,"column":34}}]},"105":{"line":1106,"type":"if","locations":[{"start":{"line":1106,"column":2},"end":{"line":1106,"column":2}},{"start":{"line":1106,"column":2},"end":{"line":1106,"column":2}}]},"106":{"line":1117,"type":"binary-expr","locations":[{"start":{"line":1117,"column":29},"end":{"line":1117,"column":44}},{"start":{"line":1117,"column":48},"end":{"line":1117,"column":50}}]},"107":{"line":1136,"type":"if","locations":[{"start":{"line":1136,"column":2},"end":{"line":1136,"column":2}},{"start":{"line":1136,"column":2},"end":{"line":1136,"column":2}}]},"108":{"line":1146,"type":"if","locations":[{"start":{"line":1146,"column":2},"end":{"line":1146,"column":2}},{"start":{"line":1146,"column":2},"end":{"line":1146,"column":2}}]},"109":{"line":1146,"type":"binary-expr","locations":[{"start":{"line":1146,"column":6},"end":{"line":1146,"column":18}},{"start":{"line":1146,"column":23},"end":{"line":1146,"column":42}}]},"110":{"line":1147,"type":"binary-expr","locations":[{"start":{"line":1147,"column":27},"end":{"line":1147,"column":35}},{"start":{"line":1147,"column":39},"end":{"line":1147,"column":58}}]},"111":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":2},"end":{"line":1155,"column":2}},{"start":{"line":1155,"column":2},"end":{"line":1155,"column":2}}]},"112":{"line":1157,"type":"if","locations":[{"start":{"line":1157,"column":9},"end":{"line":1157,"column":9}},{"start":{"line":1157,"column":9},"end":{"line":1157,"column":9}}]},"113":{"line":1163,"type":"if","locations":[{"start":{"line":1163,"column":2},"end":{"line":1163,"column":2}},{"start":{"line":1163,"column":2},"end":{"line":1163,"column":2}}]},"114":{"line":1165,"type":"if","locations":[{"start":{"line":1165,"column":9},"end":{"line":1165,"column":9}},{"start":{"line":1165,"column":9},"end":{"line":1165,"column":9}}]},"115":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":2},"end":{"line":1171,"column":2}},{"start":{"line":1171,"column":2},"end":{"line":1171,"column":2}}]},"116":{"line":1173,"type":"if","locations":[{"start":{"line":1173,"column":9},"end":{"line":1173,"column":9}},{"start":{"line":1173,"column":9},"end":{"line":1173,"column":9}}]},"117":{"line":1180,"type":"if","locations":[{"start":{"line":1180,"column":2},"end":{"line":1180,"column":2}},{"start":{"line":1180,"column":2},"end":{"line":1180,"column":2}}]},"118":{"line":1182,"type":"if","locations":[{"start":{"line":1182,"column":9},"end":{"line":1182,"column":9}},{"start":{"line":1182,"column":9},"end":{"line":1182,"column":9}}]},"119":{"line":1195,"type":"if","locations":[{"start":{"line":1195,"column":2},"end":{"line":1195,"column":2}},{"start":{"line":1195,"column":2},"end":{"line":1195,"column":2}}]}},"code":["// Public API","// ==========","","// The main governing power behind the http2 API design is that it should look very similar to the","// existing node.js [HTTPS API][1] (which is, in turn, almost identical to the [HTTP API][2]). The","// additional features of HTTP/2 are exposed as extensions to this API. Furthermore, node-http2","// should fall back to using HTTP/1.1 if needed. Compatibility with undocumented or deprecated","// elements of the node.js HTTP/HTTPS API is a non-goal.","//","// Additional and modified API elements","// ------------------------------------","//","// - **Class: http2.Endpoint**: an API for using the raw HTTP/2 framing layer. For documentation","//   see [protocol/endpoint.js](protocol/endpoint.html).","//","// - **Class: http2.Server**","//   - **Event: 'connection' (socket, [endpoint])**: there's a second argument if the negotiation of","//     HTTP/2 was successful: the reference to the [Endpoint](protocol/endpoint.html) object tied to the","//     socket.","//","// - **http2.createServer(options, [requestListener])**: additional option:","//   - **log**: an optional [bunyan](https://github.com/trentm/node-bunyan) logger object","//","// - **Class: http2.ServerResponse**","//   - **response.push(options)**: initiates a server push. `options` describes the 'imaginary'","//     request to which the push stream is a response; the possible options are identical to the","//     ones accepted by `http2.request`. Returns a ServerResponse object that can be used to send","//     the response headers and content.","//","// - **Class: http2.Agent**","//   - **new Agent(options)**: additional option:","//     - **log**: an optional [bunyan](https://github.com/trentm/node-bunyan) logger object","//   - **agent.sockets**: only contains TCP sockets that corresponds to HTTP/1 requests.","//   - **agent.endpoints**: contains [Endpoint](protocol/endpoint.html) objects for HTTP/2 connections.","//","// - **http2.request(options, [callback])**:","//   - similar to http.request","//","// - **http2.get(options, [callback])**:","//   - similar to http.get","//","// - **Class: http2.ClientRequest**","//   - **Event: 'socket' (socket)**: in case of an HTTP/2 incoming message, `socket` is a reference","//     to the associated [HTTP/2 Stream](protocol/stream.html) object (and not to the TCP socket).","//   - **Event: 'push' (promise)**: signals the intention of a server push associated to this","//     request. `promise` is an IncomingPromise. If there's no listener for this event, the server","//     push is cancelled.","//   - **request.setPriority(priority)**: assign a priority to this request. `priority` is a number","//     between 0 (highest priority) and 2^31-1 (lowest priority). Default value is 2^30.","//","// - **Class: http2.IncomingMessage**","//   - has two subclasses for easier interface description: **IncomingRequest** and","//     **IncomingResponse**","//   - **message.socket**: in case of an HTTP/2 incoming message, it's a reference to the associated","//     [HTTP/2 Stream](protocol/stream.html) object (and not to the TCP socket).","//","// - **Class: http2.IncomingRequest (IncomingMessage)**","//   - **message.url**: in case of an HTTP/2 incoming request, the `url` field always contains the","//     path, and never a full url (it contains the path in most cases in the HTTPS api as well).","//   - **message.scheme**: additional field. Mandatory HTTP/2 request metadata.","//   - **message.host**: additional field. Mandatory HTTP/2 request metadata. Note that this","//     replaces the old Host header field, but node-http2 will add Host to the `message.headers` for","//     backwards compatibility.","//","// - **Class: http2.IncomingPromise (IncomingRequest)**","//   - contains the metadata of the 'imaginary' request to which the server push is an answer.","//   - **Event: 'response' (response)**: signals the arrival of the actual push stream. `response`","//     is an IncomingResponse.","//   - **Event: 'push' (promise)**: signals the intention of a server push associated to this","//     request. `promise` is an IncomingPromise. If there's no listener for this event, the server","//     push is cancelled.","//   - **promise.cancel()**: cancels the promised server push.","//   - **promise.setPriority(priority)**: assign a priority to this push stream. `priority` is a","//     number between 0 (highest priority) and 2^31-1 (lowest priority). Default value is 2^30.","//","// API elements not yet implemented","// --------------------------------","//","// - **Class: http2.Server**","//   - **server.maxHeadersCount**","//","// API elements that are not applicable to HTTP/2","// ----------------------------------------------","//","// The reason may be deprecation of certain HTTP/1.1 features, or that some API elements simply","// don't make sense when using HTTP/2. These will not be present when a request is done with HTTP/2,","// but will function normally when falling back to using HTTP/1.1.","//","// - **Class: http2.Server**","//   - **Event: 'checkContinue'**: not in the spec","//   - **Event: 'upgrade'**: upgrade is deprecated in HTTP/2","//   - **Event: 'timeout'**: HTTP/2 sockets won't timeout because of application level keepalive","//     (PING frames)","//   - **Event: 'connect'**: not yet supported","//   - **server.setTimeout(msecs, [callback])**","//   - **server.timeout**","//","// - **Class: http2.ServerResponse**","//   - **Event: 'close'**","//   - **Event: 'timeout'**","//   - **response.writeContinue()**","//   - **response.writeHead(statusCode, [reasonPhrase], [headers])**: reasonPhrase will always be","//     ignored since [it's not supported in HTTP/2][3]","//   - **response.setTimeout(timeout, [callback])**","//","// - **Class: http2.Agent**","//   - **agent.maxSockets**: only affects HTTP/1 connection pool. When using HTTP/2, there's always","//     one connection per host.","//","// - **Class: http2.ClientRequest**","//   - **Event: 'upgrade'**","//   - **Event: 'connect'**","//   - **Event: 'continue'**","//   - **request.setTimeout(timeout, [callback])**","//   - **request.setNoDelay([noDelay])**","//   - **request.setSocketKeepAlive([enable], [initialDelay])**","//","// - **Class: http2.IncomingMessage**","//   - **Event: 'close'**","//   - **message.setTimeout(timeout, [callback])**","//","// [1]: https://nodejs.org/api/https.html","// [2]: https://nodejs.org/api/http.html","// [3]: https://tools.ietf.org/html/rfc7540#section-8.1.2.4","","// Common server and client side code","// ==================================","","var net = require('net');","var url = require('url');","var util = require('util');","var EventEmitter = require('events').EventEmitter;","var PassThrough = require('stream').PassThrough;","var Readable = require('stream').Readable;","var Writable = require('stream').Writable;","var protocol = require('./protocol');","var Endpoint = protocol.Endpoint;","var http = require('http');","var https = require('https');","","exports.STATUS_CODES = http.STATUS_CODES;","exports.IncomingMessage = IncomingMessage;","exports.OutgoingMessage = OutgoingMessage;","exports.protocol = protocol;","","var deprecatedHeaders = [","  'connection',","  'host',","  'keep-alive',","  'proxy-connection',","  'transfer-encoding',","  'upgrade'","];","","// When doing NPN/ALPN negotiation, HTTP/1.1 is used as fallback","var supportedProtocols = [protocol.VERSION, 'http/1.1', 'http/1.0'];","","// Ciphersuite list based on the recommendations of https://wiki.mozilla.org/Security/Server_Side_TLS","// The only modification is that kEDH+AESGCM were placed after DHE and ECDHE suites","var cipherSuites = [","  'ECDHE-RSA-AES128-GCM-SHA256',","  'ECDHE-ECDSA-AES128-GCM-SHA256',","  'ECDHE-RSA-AES256-GCM-SHA384',","  'ECDHE-ECDSA-AES256-GCM-SHA384',","  'DHE-RSA-AES128-GCM-SHA256',","  'DHE-DSS-AES128-GCM-SHA256',","  'ECDHE-RSA-AES128-SHA256',","  'ECDHE-ECDSA-AES128-SHA256',","  'ECDHE-RSA-AES128-SHA',","  'ECDHE-ECDSA-AES128-SHA',","  'ECDHE-RSA-AES256-SHA384',","  'ECDHE-ECDSA-AES256-SHA384',","  'ECDHE-RSA-AES256-SHA',","  'ECDHE-ECDSA-AES256-SHA',","  'DHE-RSA-AES128-SHA256',","  'DHE-RSA-AES128-SHA',","  'DHE-DSS-AES128-SHA256',","  'DHE-RSA-AES256-SHA256',","  'DHE-DSS-AES256-SHA',","  'DHE-RSA-AES256-SHA',","  'kEDH+AESGCM',","  'AES128-GCM-SHA256',","  'AES256-GCM-SHA384',","  'ECDHE-RSA-RC4-SHA',","  'ECDHE-ECDSA-RC4-SHA',","  'AES128',","  'AES256',","  'RC4-SHA',","  'HIGH',","  '!aNULL',","  '!eNULL',","  '!EXPORT',","  '!DES',","  '!3DES',","  '!MD5',","  '!PSK'","].join(':');","","// Logging","// -------","","// Logger shim, used when no logger is provided by the user.","function noop() {}","var defaultLogger = {","  fatal: noop,","  error: noop,","  warn : noop,","  info : noop,","  debug: noop,","  trace: noop,","","  child: function() { return this; }","};","","// Bunyan serializers exported by submodules that are worth adding when creating a logger.","exports.serializers = protocol.serializers;","","// IncomingMessage class","// ---------------------","","function IncomingMessage(stream) {","  // * This is basically a read-only wrapper for the [Stream](protocol/stream.html) class.","  PassThrough.call(this);","  stream.pipe(this);","  this.socket = this.stream = stream;","","  this._log = stream._log.child({ component: 'http' });","","  // * HTTP/2.0 does not define a way to carry the version identifier that is included in the","  //   HTTP/1.1 request/status line. Version is always 2.0.","  this.httpVersion = '2.0';","  this.httpVersionMajor = 2;","  this.httpVersionMinor = 0;","","  // * `this.headers` will store the regular headers (and none of the special colon headers)","  this.headers = {};","  this.trailers = undefined;","  this._lastHeadersSeen = undefined;","","  // * Other metadata is filled in when the headers arrive.","  stream.once('headers', this._onHeaders.bind(this));","  stream.once('end', this._onEnd.bind(this));","}","IncomingMessage.prototype = Object.create(PassThrough.prototype, { constructor: { value: IncomingMessage } });","","// [Request Header Fields](https://tools.ietf.org/html/rfc7540#section-8.1.2.3)","// * `headers` argument: HTTP/2.0 request and response header fields carry information as a series","//   of key-value pairs. This includes the target URI for the request, the status code for the","//   response, as well as HTTP header fields.","IncomingMessage.prototype._onHeaders = function _onHeaders(headers) {","  // * Detects malformed headers","  this._validateHeaders(headers);","","  // * Store the _regular_ headers in `this.headers`","  for (var name in headers) {","    if (name[0] !== ':') {","      if (name === 'set-cookie' && !Array.isArray(headers[name])) {","        this.headers[name] = [headers[name]];","      } else {","        this.headers[name] = headers[name];","      }","    }","  }","","  // * The last header block, if it's not the first, will represent the trailers","  var self = this;","  this.stream.on('headers', function(headers) {","    self._lastHeadersSeen = headers;","  });","};","","IncomingMessage.prototype._onEnd = function _onEnd() {","  this.trailers = this._lastHeadersSeen;","};","","IncomingMessage.prototype.setTimeout = noop;","","IncomingMessage.prototype._checkSpecialHeader = function _checkSpecialHeader(key, value) {","  if ((typeof value !== 'string') || (value.length === 0)) {","    this._log.error({ key: key, value: value }, 'Invalid or missing special header field');","    this.stream.reset('PROTOCOL_ERROR');","  }","","  return value;","};","","IncomingMessage.prototype._validateHeaders = function _validateHeaders(headers) {","  // * An HTTP/2.0 request or response MUST NOT include any of the following header fields:","  //   Connection, Host, Keep-Alive, Proxy-Connection, Transfer-Encoding, and Upgrade. A server","  //   MUST treat the presence of any of these header fields as a stream error of type","  //   PROTOCOL_ERROR.","  //  If the TE header is present, it's only valid value is 'trailers'","  for (var i = 0; i < deprecatedHeaders.length; i++) {","    var key = deprecatedHeaders[i];","    if (key in headers || (key === 'te' && headers[key] !== 'trailers')) {","      this._log.error({ key: key, value: headers[key] }, 'Deprecated header found');","      this.stream.reset('PROTOCOL_ERROR');","      return;","    }","  }","","  for (var headerName in headers) {","    // * Empty header name field is malformed","    if (headerName.length <= 1) {","      this.stream.reset('PROTOCOL_ERROR');","      return;","    }","    // * A request or response containing uppercase header name field names MUST be","    //   treated as malformed (Section 8.1.3.5). Implementations that detect malformed","    //   requests or responses need to ensure that the stream ends.","    if(/[A-Z]/.test(headerName)) {","      this.stream.reset('PROTOCOL_ERROR');","      return;","    }","  }","};","","// OutgoingMessage class","// ---------------------","","function OutgoingMessage() {","  // * This is basically a read-only wrapper for the [Stream](protocol/stream.html) class.","  Writable.call(this);","","  this._headers = {};","  this._trailers = undefined;","  this.headersSent = false;","  this.finished = false;","","  this.on('finish', this._finish);","}","OutgoingMessage.prototype = Object.create(Writable.prototype, { constructor: { value: OutgoingMessage } });","","OutgoingMessage.prototype._write = function _write(chunk, encoding, callback) {","  if (this.stream) {","    this.stream.write(chunk, encoding, callback);","  } else {","    this.once('socket', this._write.bind(this, chunk, encoding, callback));","  }","};","","OutgoingMessage.prototype._finish = function _finish() {","  if (this.stream) {","    if (this._trailers) {","      if (this.request) {","        this.request.addTrailers(this._trailers);","      } else {","        this.stream.headers(this._trailers);","      }","    }","    this.finished = true;","    this.stream.end();","  } else {","    this.once('socket', this._finish.bind(this));","  }","};","","OutgoingMessage.prototype.setHeader = function setHeader(name, value) {","  if (this.headersSent) {","    return this.emit('error', new Error('Can\\'t set headers after they are sent.'));","  } else {","    name = name.toLowerCase();","    if (deprecatedHeaders.indexOf(name) !== -1) {","      return this.emit('error', new Error('Cannot set deprecated header: ' + name));","    }","    this._headers[name] = value;","  }","};","","OutgoingMessage.prototype.removeHeader = function removeHeader(name) {","  if (this.headersSent) {","    return this.emit('error', new Error('Can\\'t remove headers after they are sent.'));","  } else {","    delete this._headers[name.toLowerCase()];","  }","};","","OutgoingMessage.prototype.getHeader = function getHeader(name) {","  return this._headers[name.toLowerCase()];","};","","OutgoingMessage.prototype.addTrailers = function addTrailers(trailers) {","  this._trailers = trailers;","};","","OutgoingMessage.prototype.setTimeout = noop;","","OutgoingMessage.prototype._checkSpecialHeader = IncomingMessage.prototype._checkSpecialHeader;","","// Server side","// ===========","","exports.Server = Server;","exports.IncomingRequest = IncomingRequest;","exports.OutgoingResponse = OutgoingResponse;","exports.ServerResponse = OutgoingResponse; // for API compatibility","","// Forward events `event` on `source` to all listeners on `target`.","//","// Note: The calling context is `source`.","function forwardEvent(event, source, target) {","  function forward() {","    var listeners = target.listeners(event);","","    var n = listeners.length;","","    // Special case for `error` event with no listeners.","    if (n === 0 && event === 'error') {","      var args = [event];","      args.push.apply(args, arguments);","","      target.emit.apply(target, args);","      return;","    }","","    for (var i = 0; i < n; ++i) {","      listeners[i].apply(source, arguments);","    }","  }","","  source.on(event, forward);","","  // A reference to the function is necessary to be able to stop","  // forwarding.","  return forward;","}","","// Server class","// ------------","","function Server(options) {","  options = util._extend({}, options);","","  this._log = (options.log || defaultLogger).child({ component: 'http' });","  this._settings = options.settings;","","  var start = this._start.bind(this);","  var fallback = this._fallback.bind(this);","","  // HTTP2 over TLS (using NPN or ALPN)","  if ((options.key && options.cert) || options.pfx) {","    this._log.info('Creating HTTP/2 server over TLS');","    this._mode = 'tls';","    options.ALPNProtocols = supportedProtocols;","    options.NPNProtocols = supportedProtocols;","    options.ciphers = options.ciphers || cipherSuites;","    options.honorCipherOrder = (options.honorCipherOrder != false);","    this._server = https.createServer(options);","    this._originalSocketListeners = this._server.listeners('secureConnection');","    this._server.removeAllListeners('secureConnection');","    this._server.on('secureConnection', function(socket) {","      var negotiatedProtocol = socket.alpnProtocol || socket.npnProtocol;","      // It's true that the client MUST use SNI, but if it doesn't, we don't care, don't fall back to HTTP/1,","      // since if the ALPN negotiation is otherwise successful, the client thinks we speak HTTP/2 but we don't.","      if (negotiatedProtocol === protocol.VERSION) {","        start(socket);","      } else {","        fallback(socket);","      }","    });","    this._server.on('request', this.emit.bind(this, 'request'));","","    forwardEvent('error', this._server, this);","    forwardEvent('listening', this._server, this);","  }","","  // HTTP2 over plain TCP","  else if (options.plain) {","    this._log.info('Creating HTTP/2 server over plain TCP');","    this._mode = 'plain';","    this._server = net.createServer(start);","  }","","  // HTTP/2 with HTTP/1.1 upgrade","  else {","    this._log.error('Trying to create HTTP/2 server with Upgrade from HTTP/1.1');","    throw new Error('HTTP1.1 -> HTTP2 upgrade is not yet supported. Please provide TLS keys.');","  }","","  this._server.on('close', this.emit.bind(this, 'close'));","}","Server.prototype = Object.create(EventEmitter.prototype, { constructor: { value: Server } });","","// Starting HTTP/2","Server.prototype._start = function _start(socket) {","  var endpoint = new Endpoint(this._log, 'SERVER', this._settings);","","  this._log.info({ e: endpoint,","                   client: socket.remoteAddress + ':' + socket.remotePort,","                   SNI: socket.servername","                 }, 'New incoming HTTP/2 connection');","","  endpoint.pipe(socket).pipe(endpoint);","","  var self = this;","  endpoint.on('stream', function _onStream(stream) {","    var response = new OutgoingResponse(stream);","    var request = new IncomingRequest(stream);","","    // Some conformance to Node.js Https specs allows to distinguish clients:","    request.remoteAddress = socket.remoteAddress;","    request.remotePort = socket.remotePort;","    request.connection = request.socket = response.socket = socket;","","    request.once('ready', self.emit.bind(self, 'request', request, response));","  });","","  endpoint.on('error', this.emit.bind(this, 'clientError'));","  socket.on('error', this.emit.bind(this, 'clientError'));","","  this.emit('connection', socket, endpoint);","};","","Server.prototype._fallback = function _fallback(socket) {","  var negotiatedProtocol = socket.alpnProtocol || socket.npnProtocol;","","  this._log.info({ client: socket.remoteAddress + ':' + socket.remotePort,","                   protocol: negotiatedProtocol,","                   SNI: socket.servername","                 }, 'Falling back to simple HTTPS');","","  for (var i = 0; i < this._originalSocketListeners.length; i++) {","    this._originalSocketListeners[i].call(this._server, socket);","  }","","  this.emit('connection', socket);","};","","// There are [3 possible signatures][1] of the `listen` function. Every arguments is forwarded to","// the backing TCP or HTTPS server.","// [1]: https://nodejs.org/api/http.html#http_server_listen_port_hostname_backlog_callback","Server.prototype.listen = function listen(port, hostname) {","  this._log.info({ on: ((typeof hostname === 'string') ? (hostname + ':' + port) : port) },","                 'Listening for incoming connections');","  this._server.listen.apply(this._server, arguments);","","  return this._server;","};","","Server.prototype.close = function close(callback) {","  this._log.info('Closing server');","  this._server.close(callback);","};","","Server.prototype.setTimeout = function setTimeout(timeout, callback) {","  if (this._mode === 'tls') {","    this._server.setTimeout(timeout, callback);","  }","};","","Object.defineProperty(Server.prototype, 'timeout', {","  get: function getTimeout() {","    if (this._mode === 'tls') {","      return this._server.timeout;","    } else {","      return undefined;","    }","  },","  set: function setTimeout(timeout) {","    if (this._mode === 'tls') {","      this._server.timeout = timeout;","    }","  }","});","","// Overriding `EventEmitter`'s `on(event, listener)` method to forward certain subscriptions to","// `server`.There are events on the `http.Server` class where it makes difference whether someone is","// listening on the event or not. In these cases, we can not simply forward the events from the","// `server` to `this` since that means a listener. Instead, we forward the subscriptions.","Server.prototype.on = function on(event, listener) {","  if ((event === 'upgrade') || (event === 'timeout')) {","    return this._server.on(event, listener && listener.bind(this));","  } else {","    return EventEmitter.prototype.on.call(this, event, listener);","  }","};","","// `addContext` is used to add Server Name Indication contexts","Server.prototype.addContext = function addContext(hostname, credentials) {","  if (this._mode === 'tls') {","    this._server.addContext(hostname, credentials);","  }","};","","Server.prototype.address = function address() {","  return this._server.address()","};","","function createServerRaw(options, requestListener) {","  if (typeof options === 'function') {","    requestListener = options;","    options = {};","  }","","  if (options.pfx || (options.key && options.cert)) {","    throw new Error('options.pfx, options.key, and options.cert are nonsensical!');","  }","","  options.plain = true;","  var server = new Server(options);","","  if (requestListener) {","    server.on('request', requestListener);","  }","","  return server;","}","","function createServerTLS(options, requestListener) {","  if (typeof options === 'function') {","    throw new Error('options are required!');","  }","  if (!options.pfx && !(options.key && options.cert)) {","    throw new Error('options.pfx or options.key and options.cert are required!');","  }","  options.plain = false;","","  var server = new Server(options);","","  if (requestListener) {","    server.on('request', requestListener);","  }","","  return server;","}","","// Exposed main interfaces for HTTPS connections (the default)","exports.https = {};","exports.createServer = exports.https.createServer = createServerTLS;","exports.request = exports.https.request = requestTLS;","exports.get = exports.https.get = getTLS;","","// Exposed main interfaces for raw TCP connections (not recommended)","exports.raw = {};","exports.raw.createServer = createServerRaw;","exports.raw.request = requestRaw;","exports.raw.get = getRaw;","","// Exposed main interfaces for HTTP plaintext upgrade connections (not implemented)","function notImplemented() {","    throw new Error('HTTP UPGRADE is not implemented!');","}","","exports.http = {};","exports.http.createServer = exports.http.request = exports.http.get = notImplemented;","","// IncomingRequest class","// ---------------------","","function IncomingRequest(stream) {","  IncomingMessage.call(this, stream);","}","IncomingRequest.prototype = Object.create(IncomingMessage.prototype, { constructor: { value: IncomingRequest } });","","// [Request Header Fields](https://tools.ietf.org/html/rfc7540#section-8.1.2.3)","// * `headers` argument: HTTP/2.0 request and response header fields carry information as a series","//   of key-value pairs. This includes the target URI for the request, the status code for the","//   response, as well as HTTP header fields.","IncomingRequest.prototype._onHeaders = function _onHeaders(headers) {","  // * The \":method\" header field includes the HTTP method","  // * The \":scheme\" header field includes the scheme portion of the target URI","  // * The \":authority\" header field includes the authority portion of the target URI","  // * The \":path\" header field includes the path and query parts of the target URI.","  //   This field MUST NOT be empty; URIs that do not contain a path component MUST include a value","  //   of '/', unless the request is an OPTIONS request for '*', in which case the \":path\" header","  //   field MUST include '*'.","  // * All HTTP/2.0 requests MUST include exactly one valid value for all of these header fields. A","  //   server MUST treat the absence of any of these header fields, presence of multiple values, or","  //   an invalid value as a stream error of type PROTOCOL_ERROR.","  this.method = this._checkSpecialHeader(':method'   , headers[':method']);","  this.scheme = this._checkSpecialHeader(':scheme'   , headers[':scheme']);","  this.host   = this._checkSpecialHeader(':authority', headers[':authority']  );","  this.url    = this._checkSpecialHeader(':path'     , headers[':path']  );","  if (!this.method || !this.scheme || !this.host || !this.url) {","    // This is invalid, and we've sent a RST_STREAM, so don't continue processing","    return;","  }","","  // * Host header is included in the headers object for backwards compatibility.","  this.headers.host = this.host;","","  // * Handling regular headers.","  IncomingMessage.prototype._onHeaders.call(this, headers);","","  // * Signaling that the headers arrived.","  this._log.info({ method: this.method, scheme: this.scheme, host: this.host,","                   path: this.url, headers: this.headers }, 'Incoming request');","  this.emit('ready');","};","","// OutgoingResponse class","// ----------------------","","function OutgoingResponse(stream) {","  OutgoingMessage.call(this);","","  this._log = stream._log.child({ component: 'http' });","","  this.stream = stream;","  this.statusCode = 200;","  this.sendDate = true;","","  this.stream.once('headers', this._onRequestHeaders.bind(this));","}","OutgoingResponse.prototype = Object.create(OutgoingMessage.prototype, { constructor: { value: OutgoingResponse } });","","OutgoingResponse.prototype.writeHead = function writeHead(statusCode, reasonPhrase, headers) {","  if (this.headersSent) {","    return;","  }","","  if (typeof reasonPhrase === 'string') {","    this._log.warn('Reason phrase argument was present but ignored by the writeHead method');","  } else {","    headers = reasonPhrase;","  }","","  for (var name in headers) {","    this.setHeader(name, headers[name]);","  }","  headers = this._headers;","","  if (this.sendDate && !('date' in this._headers)) {","    headers.date = (new Date()).toUTCString();","  }","","  this._log.info({ status: statusCode, headers: this._headers }, 'Sending server response');","","  headers[':status'] = this.statusCode = statusCode;","","  this.stream.headers(headers);","  this.headersSent = true;","};","","OutgoingResponse.prototype._implicitHeaders = function _implicitHeaders() {","  if (!this.headersSent) {","    this.writeHead(this.statusCode);","  }","};","","OutgoingResponse.prototype._implicitHeader = function() {","  this._implicitHeaders();","};","","OutgoingResponse.prototype.write = function write() {","  this._implicitHeaders();","  return OutgoingMessage.prototype.write.apply(this, arguments);","};","","OutgoingResponse.prototype.end = function end() {","  this.finshed = true;","  this._implicitHeaders();","  return OutgoingMessage.prototype.end.apply(this, arguments);","};","","OutgoingResponse.prototype._onRequestHeaders = function _onRequestHeaders(headers) {","  this._requestHeaders = headers;","};","","OutgoingResponse.prototype.push = function push(options) {","  if (typeof options === 'string') {","    options = url.parse(options);","  }","","  if (!options.path) {","    throw new Error('`path` option is mandatory.');","  }","","  var promise = util._extend({","    ':method': (options.method || 'GET').toUpperCase(),","    ':scheme': (options.protocol && options.protocol.slice(0, -1)) || this._requestHeaders[':scheme'],","    ':authority': options.hostname || options.host || this._requestHeaders[':authority'],","    ':path': options.path","  }, options.headers);","","  this._log.info({ method: promise[':method'], scheme: promise[':scheme'],","                   authority: promise[':authority'], path: promise[':path'],","                   headers: options.headers }, 'Promising push stream');","","  var pushStream = this.stream.promise(promise);","","  return new OutgoingResponse(pushStream);","};","","OutgoingResponse.prototype.altsvc = function altsvc(host, port, protocolID, maxAge, origin) {","    if (origin === undefined) {","        origin = \"\";","    }","    this.stream.altsvc(host, port, protocolID, maxAge, origin);","};","","// Overriding `EventEmitter`'s `on(event, listener)` method to forward certain subscriptions to","// `request`. See `Server.prototype.on` for explanation.","OutgoingResponse.prototype.on = function on(event, listener) {","  if (this.request && (event === 'timeout')) {","    this.request.on(event, listener && listener.bind(this));","  } else {","    OutgoingMessage.prototype.on.call(this, event, listener);","  }","};","","// Client side","// ===========","","exports.ClientRequest = OutgoingRequest; // for API compatibility","exports.OutgoingRequest = OutgoingRequest;","exports.IncomingResponse = IncomingResponse;","exports.Agent = Agent;","exports.globalAgent = undefined;","","function requestRaw(options, callback) {","  if (typeof options === \"string\") {","    options = url.parse(options);","  }","  options.plain = true;","  if (options.protocol && options.protocol !== \"http:\") {","    throw new Error('This interface only supports http-schemed URLs');","  }","  if (options.agent && typeof(options.agent.request) === 'function') {","    var agentOptions = util._extend({}, options);","    delete agentOptions.agent;","    return options.agent.request(agentOptions, callback);","  }","  return exports.globalAgent.request(options, callback);","}","","function requestTLS(options, callback) {","  if (typeof options === \"string\") {","    options = url.parse(options);","  }","  options.plain = false;","  if (options.protocol && options.protocol !== \"https:\") {","    throw new Error('This interface only supports https-schemed URLs');","  }","  if (options.agent && typeof(options.agent.request) === 'function') {","    var agentOptions = util._extend({}, options);","    delete agentOptions.agent;","    return options.agent.request(agentOptions, callback);","  }","  return exports.globalAgent.request(options, callback);","}","","function getRaw(options, callback) {","  if (typeof options === \"string\") {","    options = url.parse(options);","  }","  options.plain = true;","  if (options.protocol && options.protocol !== \"http:\") {","    throw new Error('This interface only supports http-schemed URLs');","  }","  if (options.agent && typeof(options.agent.get) === 'function') {","    var agentOptions = util._extend({}, options);","    delete agentOptions.agent;","    return options.agent.get(agentOptions, callback);","  }","  return exports.globalAgent.get(options, callback);","}","","function getTLS(options, callback) {","  if (typeof options === \"string\") {","    options = url.parse(options);","  }","  options.plain = false;","  if (options.protocol && options.protocol !== \"https:\") {","    throw new Error('This interface only supports https-schemed URLs');","  }","  if (options.agent && typeof(options.agent.get) === 'function') {","    var agentOptions = util._extend({}, options);","    delete agentOptions.agent;","    return options.agent.get(agentOptions, callback);","  }","  return exports.globalAgent.get(options, callback);","}","","// Agent class","// -----------","","function Agent(options) {","  EventEmitter.call(this);","  this.setMaxListeners(0);","","  options = util._extend({}, options);","","  this._settings = options.settings;","  this._log = (options.log || defaultLogger).child({ component: 'http' });","  this.endpoints = {};","","  // * Using an own HTTPS agent, because the global agent does not look at `NPN/ALPNProtocols` when","  //   generating the key identifying the connection, so we may get useless non-negotiated TLS","  //   channels even if we ask for a negotiated one. This agent will contain only negotiated","  //   channels.","  options.ALPNProtocols = supportedProtocols;","  options.NPNProtocols = supportedProtocols;","  this._httpsAgent = new https.Agent(options);","","  this.sockets = this._httpsAgent.sockets;","  this.requests = this._httpsAgent.requests;","}","Agent.prototype = Object.create(EventEmitter.prototype, { constructor: { value: Agent } });","","Agent.prototype.request = function request(options, callback) {","  if (typeof options === 'string') {","    options = url.parse(options);","  } else {","    options = util._extend({}, options);","  }","","  options.method = (options.method || 'GET').toUpperCase();","  options.protocol = options.protocol || 'https:';","  options.host = options.hostname || options.host || 'localhost';","  options.port = options.port || 443;","  options.path = options.path || '/';","","  if (!options.plain && options.protocol === 'http:') {","    this._log.error('Trying to negotiate client request with Upgrade from HTTP/1.1');","    this.emit('error', new Error('HTTP1.1 -> HTTP2 upgrade is not yet supported.'));","  }","","  var request = new OutgoingRequest(this._log);","","  if (callback) {","    request.on('response', callback);","  }","","  var key = [","    !!options.plain,","    options.host,","    options.port","  ].join(':');","  var self = this;","","  // * There's an existing HTTP/2 connection to this host","  if (key in this.endpoints) {","    var endpoint = this.endpoints[key];","    request._start(endpoint.createStream(), options);","  }","","  // * HTTP/2 over plain TCP","  else if (options.plain) {","    endpoint = new Endpoint(this._log, 'CLIENT', this._settings);","    endpoint.socket = net.connect({","      host: options.host,","      port: options.port,","      localAddress: options.localAddress","    });","","    endpoint.socket.on('error', function (error) {","      self._log.error('Socket error: ' + error.toString());","      request.emit('error', error);","    });","","    endpoint.on('error', function(error){","      self._log.error('Connection error: ' + error.toString());","      request.emit('error', error);","    });","","    this.endpoints[key] = endpoint;","    endpoint.pipe(endpoint.socket).pipe(endpoint);","    request._start(endpoint.createStream(), options);","  }","","  // * HTTP/2 over TLS negotiated using NPN or ALPN, or fallback to HTTPS1","  else {","    var started = false;","    var createAgent = hasAgentOptions(options);","    options.ALPNProtocols = supportedProtocols;","    options.NPNProtocols = supportedProtocols;","    options.servername = options.host; // Server Name Indication","    options.ciphers = options.ciphers || cipherSuites;","    if (createAgent) {","      options.agent = new https.Agent(options);","    } else if (options.agent == null) {","      options.agent = this._httpsAgent;","    }","    var httpsRequest = https.request(options);","","    httpsRequest.on('error', function (error) {","      self._log.error('Socket error: ' + error.toString());","      self.removeAllListeners(key);","      request.emit('error', error);","    });","","    httpsRequest.on('socket', function(socket) {","      var negotiatedProtocol = socket.alpnProtocol || socket.npnProtocol;","      if (negotiatedProtocol != null) { // null in >=0.11.0, undefined in <0.11.0","        negotiated();","      } else {","        socket.on('secureConnect', negotiated);","      }","    });","","    function negotiated() {","      var endpoint;","      var negotiatedProtocol = httpsRequest.socket.alpnProtocol || httpsRequest.socket.npnProtocol;","      if (negotiatedProtocol === protocol.VERSION) {","        httpsRequest.socket.emit('agentRemove');","        unbundleSocket(httpsRequest.socket);","        endpoint = new Endpoint(self._log, 'CLIENT', self._settings);","        endpoint.socket = httpsRequest.socket;","        endpoint.pipe(endpoint.socket).pipe(endpoint);","      }","      if (started) {","        // ** In the meantime, an other connection was made to the same host...","        if (endpoint) {","          // *** and it turned out to be HTTP2 and the request was multiplexed on that one, so we should close this one","          endpoint.close();","        }","        // *** otherwise, the fallback to HTTPS1 is already done.","      } else {","        if (endpoint) {","          self._log.info({ e: endpoint, server: options.host + ':' + options.port },","                         'New outgoing HTTP/2 connection');","          self.endpoints[key] = endpoint;","          self.emit(key, endpoint);","        } else {","          self.emit(key, undefined);","        }","      }","    }","","    this.once(key, function(endpoint) {","      started = true;","      if (endpoint) {","        request._start(endpoint.createStream(), options);","      } else {","        request._fallback(httpsRequest);","      }","    });","  }","","  return request;","};","","Agent.prototype.get = function get(options, callback) {","  var request = this.request(options, callback);","  request.end();","  return request;","};","","Agent.prototype.destroy = function(error) {","  if (this._httpsAgent) {","    this._httpsAgent.destroy();","  }","  for (var key in this.endpoints) {","    this.endpoints[key].close(error);","  }","};","","function unbundleSocket(socket) {","  socket.removeAllListeners('data');","  socket.removeAllListeners('end');","  socket.removeAllListeners('readable');","  socket.removeAllListeners('close');","  socket.removeAllListeners('error');","  socket.unpipe();","  delete socket.ondata;","  delete socket.onend;","}","","function hasAgentOptions(options) {","  return options.pfx != null ||","    options.key != null ||","    options.passphrase != null ||","    options.cert != null ||","    options.ca != null ||","    options.ciphers != null ||","    options.rejectUnauthorized != null ||","    options.secureProtocol != null;","}","","Object.defineProperty(Agent.prototype, 'maxSockets', {","  get: function getMaxSockets() {","    return this._httpsAgent.maxSockets;","  },","  set: function setMaxSockets(value) {","    this._httpsAgent.maxSockets = value;","  }","});","","exports.globalAgent = new Agent();","","// OutgoingRequest class","// ---------------------","","function OutgoingRequest() {","  OutgoingMessage.call(this);","","  this._log = undefined;","","  this.stream = undefined;","}","OutgoingRequest.prototype = Object.create(OutgoingMessage.prototype, { constructor: { value: OutgoingRequest } });","","OutgoingRequest.prototype._start = function _start(stream, options) {","  this.stream = stream;","  this.options = options;","","  this._log = stream._log.child({ component: 'http' });","","  for (var key in options.headers) {","    this.setHeader(key, options.headers[key]);","  }","  var headers = this._headers;","  delete headers.host;","","  if (options.auth) {","    headers.authorization = 'Basic ' + new Buffer(options.auth).toString('base64');","  }","","  headers[':scheme'] = options.protocol.slice(0, -1);","  headers[':method'] = options.method;","  headers[':authority'] = options.host;","  headers[':path'] = options.path;","","  this._log.info({ scheme: headers[':scheme'], method: headers[':method'],","                   authority: headers[':authority'], path: headers[':path'],","                   headers: (options.headers || {}) }, 'Sending request');","  this.stream.headers(headers);","  this.headersSent = true;","","  this.emit('socket', this.stream);","  var response = new IncomingResponse(this.stream);","  response.req = this;","  response.once('ready', this.emit.bind(this, 'response', response));","","  this.stream.on('promise', this._onPromise.bind(this));","};","","OutgoingRequest.prototype._fallback = function _fallback(request) {","  request.on('response', this.emit.bind(this, 'response'));","  this.stream = this.request = request;","  this.emit('socket', this.socket);","};","","OutgoingRequest.prototype.setPriority = function setPriority(priority) {","  if (this.stream) {","    this.stream.priority(priority);","  } else {","    this.once('socket', this.setPriority.bind(this, priority));","  }","};","","// Overriding `EventEmitter`'s `on(event, listener)` method to forward certain subscriptions to","// `request`. See `Server.prototype.on` for explanation.","OutgoingRequest.prototype.on = function on(event, listener) {","  if (this.request && (event === 'upgrade')) {","    this.request.on(event, listener && listener.bind(this));","  } else {","    OutgoingMessage.prototype.on.call(this, event, listener);","  }","};","","// Methods only in fallback mode","OutgoingRequest.prototype.setNoDelay = function setNoDelay(noDelay) {","  if (this.request) {","    this.request.setNoDelay(noDelay);","  } else if (!this.stream) {","    this.on('socket', this.setNoDelay.bind(this, noDelay));","  }","};","","OutgoingRequest.prototype.setSocketKeepAlive = function setSocketKeepAlive(enable, initialDelay) {","  if (this.request) {","    this.request.setSocketKeepAlive(enable, initialDelay);","  } else if (!this.stream) {","    this.on('socket', this.setSocketKeepAlive.bind(this, enable, initialDelay));","  }","};","","OutgoingRequest.prototype.setTimeout = function setTimeout(timeout, callback) {","  if (this.request) {","    this.request.setTimeout(timeout, callback);","  } else if (!this.stream) {","    this.on('socket', this.setTimeout.bind(this, timeout, callback));","  }","};","","// Aborting the request","OutgoingRequest.prototype.abort = function abort() {","  if (this.request) {","    this.request.abort();","  } else if (this.stream) {","    this.stream.reset('CANCEL');","  } else {","    this.on('socket', this.abort.bind(this));","  }","};","","// Receiving push promises","OutgoingRequest.prototype._onPromise = function _onPromise(stream, headers) {","  this._log.info({ push_stream: stream.id }, 'Receiving push promise');","","  var promise = new IncomingPromise(stream, headers);","","  if (this.listeners('push').length > 0) {","    this.emit('push', promise);","  } else {","    promise.cancel();","  }","};","","// IncomingResponse class","// ----------------------","","function IncomingResponse(stream) {","  IncomingMessage.call(this, stream);","}","IncomingResponse.prototype = Object.create(IncomingMessage.prototype, { constructor: { value: IncomingResponse } });","","// [Response Header Fields](https://tools.ietf.org/html/rfc7540#section-8.1.2.4)","// * `headers` argument: HTTP/2.0 request and response header fields carry information as a series","//   of key-value pairs. This includes the target URI for the request, the status code for the","//   response, as well as HTTP header fields.","IncomingResponse.prototype._onHeaders = function _onHeaders(headers) {","  // * A single \":status\" header field is defined that carries the HTTP status code field. This","  //   header field MUST be included in all responses.","  // * A client MUST treat the absence of the \":status\" header field, the presence of multiple","  //   values, or an invalid value as a stream error of type PROTOCOL_ERROR.","  //   Note: currently, we do not enforce it strictly: we accept any format, and parse it as int","  // * HTTP/2.0 does not define a way to carry the reason phrase that is included in an HTTP/1.1","  //   status line.","  this.statusCode = parseInt(this._checkSpecialHeader(':status', headers[':status']));","","  // * Handling regular headers.","  IncomingMessage.prototype._onHeaders.call(this, headers);","","  // * Signaling that the headers arrived.","  this._log.info({ status: this.statusCode, headers: this.headers}, 'Incoming response');","  this.emit('ready');","};","","// IncomingPromise class","// -------------------------","","function IncomingPromise(responseStream, promiseHeaders) {","  var stream = new Readable();","  stream._read = noop;","  stream.push(null);","  stream._log = responseStream._log;","","  IncomingRequest.call(this, stream);","","  this._onHeaders(promiseHeaders);","","  this._responseStream = responseStream;","","  var response = new IncomingResponse(this._responseStream);","  response.once('ready', this.emit.bind(this, 'response', response));","","  this.stream.on('promise', this._onPromise.bind(this));","}","IncomingPromise.prototype = Object.create(IncomingRequest.prototype, { constructor: { value: IncomingPromise } });","","IncomingPromise.prototype.cancel = function cancel() {","  this._responseStream.reset('CANCEL');","};","","IncomingPromise.prototype.setPriority = function setPriority(priority) {","  this._responseStream.priority(priority);","};","","IncomingPromise.prototype._onPromise = OutgoingRequest.prototype._onPromise;",""],"l":{"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"141":1,"142":1,"143":1,"144":1,"146":1,"156":1,"160":1,"203":1,"204":1,"212":1,"216":1,"221":1,"223":0,"224":0,"225":0,"227":0,"231":0,"232":0,"233":0,"236":0,"237":0,"238":0,"241":0,"242":0,"244":1,"250":1,"252":0,"255":0,"256":0,"257":0,"258":0,"260":0,"266":0,"267":0,"268":0,"272":1,"273":0,"276":1,"278":1,"279":0,"280":0,"281":0,"284":0,"287":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"302":0,"304":0,"305":0,"306":0,"311":0,"312":0,"313":0,"321":1,"323":0,"325":0,"326":0,"327":0,"328":0,"330":0,"332":1,"334":1,"335":0,"336":0,"338":0,"342":1,"343":0,"344":0,"345":0,"346":0,"348":0,"351":0,"352":0,"354":0,"358":1,"359":0,"360":0,"362":0,"363":0,"364":0,"366":0,"370":1,"371":0,"372":0,"374":0,"378":1,"379":0,"382":1,"383":0,"386":1,"388":1,"393":1,"394":1,"395":1,"396":1,"401":1,"402":1,"403":0,"405":0,"408":0,"409":0,"410":0,"412":0,"413":0,"416":0,"417":0,"421":0,"425":0,"431":1,"432":0,"434":0,"435":0,"437":0,"438":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"455":0,"456":0,"458":0,"461":0,"463":0,"464":0,"468":0,"469":0,"470":0,"471":0,"476":0,"477":0,"480":0,"482":1,"485":1,"486":0,"488":0,"493":0,"495":0,"496":0,"497":0,"498":0,"501":0,"502":0,"503":0,"505":0,"508":0,"509":0,"511":0,"514":1,"515":0,"517":0,"522":0,"523":0,"526":0,"532":1,"533":0,"535":0,"537":0,"540":1,"541":0,"542":0,"545":1,"546":0,"547":0,"551":1,"553":0,"554":0,"556":0,"560":0,"561":0,"570":1,"571":0,"572":0,"574":0,"579":1,"580":0,"581":0,"585":1,"586":0,"589":1,"590":0,"591":0,"592":0,"595":0,"596":0,"599":0,"600":0,"602":0,"603":0,"606":0,"609":1,"610":0,"611":0,"613":0,"614":0,"616":0,"618":0,"620":0,"621":0,"624":0,"628":1,"629":1,"630":1,"631":1,"634":1,"635":1,"636":1,"637":1,"640":1,"641":0,"644":1,"645":1,"650":1,"651":0,"653":1,"659":1,"670":0,"671":0,"672":0,"673":0,"674":0,"676":0,"680":0,"683":0,"686":0,"688":0,"694":1,"695":0,"697":0,"699":0,"700":0,"701":0,"703":0,"705":1,"707":1,"708":0,"709":0,"712":0,"713":0,"715":0,"718":0,"719":0,"721":0,"723":0,"724":0,"727":0,"729":0,"731":0,"732":0,"735":1,"736":0,"737":0,"741":1,"742":0,"745":1,"746":0,"747":0,"750":1,"751":0,"752":0,"753":0,"756":1,"757":0,"760":1,"761":0,"762":0,"765":0,"766":0,"769":0,"776":0,"780":0,"782":0,"785":1,"786":0,"787":0,"789":0,"794":1,"795":0,"796":0,"798":0,"805":1,"806":1,"807":1,"808":1,"809":1,"811":1,"812":0,"813":0,"815":0,"816":0,"817":0,"819":0,"820":0,"821":0,"822":0,"824":0,"827":1,"828":0,"829":0,"831":0,"832":0,"833":0,"835":0,"836":0,"837":0,"838":0,"840":0,"843":1,"844":0,"845":0,"847":0,"848":0,"849":0,"851":0,"852":0,"853":0,"854":0,"856":0,"859":1,"860":0,"861":0,"863":0,"864":0,"865":0,"867":0,"868":0,"869":0,"870":0,"872":0,"878":1,"879":1,"880":1,"882":1,"884":1,"885":1,"886":1,"892":1,"893":1,"894":1,"896":1,"897":1,"899":1,"901":1,"902":0,"903":0,"905":0,"908":0,"909":0,"910":0,"911":0,"912":0,"914":0,"915":0,"916":0,"919":0,"921":0,"922":0,"925":0,"930":0,"933":0,"934":0,"935":0,"939":0,"940":0,"941":0,"947":0,"948":0,"949":0,"952":0,"953":0,"954":0,"957":0,"958":0,"959":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"975":0,"977":0,"978":0,"979":0,"980":0,"983":0,"984":0,"985":0,"986":0,"988":0,"992":1,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1002":0,"1004":0,"1006":0,"1010":0,"1011":0,"1013":0,"1014":0,"1016":0,"1021":0,"1022":0,"1023":0,"1024":0,"1026":0,"1031":0,"1034":1,"1035":0,"1036":0,"1037":0,"1040":1,"1041":0,"1042":0,"1044":0,"1045":0,"1049":1,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1060":1,"1061":0,"1071":1,"1073":0,"1076":0,"1080":1,"1085":1,"1086":0,"1088":0,"1090":0,"1092":1,"1094":1,"1095":0,"1096":0,"1098":0,"1100":0,"1101":0,"1103":0,"1104":0,"1106":0,"1107":0,"1110":0,"1111":0,"1112":0,"1113":0,"1115":0,"1118":0,"1119":0,"1121":0,"1122":0,"1123":0,"1124":0,"1126":0,"1129":1,"1130":0,"1131":0,"1132":0,"1135":1,"1136":0,"1137":0,"1139":0,"1145":1,"1146":0,"1147":0,"1149":0,"1154":1,"1155":0,"1156":0,"1157":0,"1158":0,"1162":1,"1163":0,"1164":0,"1165":0,"1166":0,"1170":1,"1171":0,"1172":0,"1173":0,"1174":0,"1179":1,"1180":0,"1181":0,"1182":0,"1183":0,"1185":0,"1190":1,"1191":0,"1193":0,"1195":0,"1196":0,"1198":0,"1205":1,"1206":0,"1208":1,"1214":1,"1222":0,"1225":0,"1228":0,"1229":0,"1235":1,"1236":0,"1237":0,"1238":0,"1239":0,"1241":0,"1243":0,"1245":0,"1247":0,"1248":0,"1250":0,"1252":1,"1254":1,"1255":0,"1258":1,"1259":0,"1262":1}},"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":6,"7":4},"b":{},"f":{"1":6},"fnMap":{"1":{"name":"(anonymous_1)","line":46,"loc":{"start":{"line":46,"column":29},"end":{"line":46,"column":46}}}},"statementMap":{"1":{"start":{"line":39,"column":0},"end":{"line":39,"column":23}},"2":{"start":{"line":41,"column":0},"end":{"line":41,"column":50}},"3":{"start":{"line":44,"column":0},"end":{"line":44,"column":25}},"4":{"start":{"line":45,"column":0},"end":{"line":45,"column":95}},"5":{"start":{"line":46,"column":0},"end":{"line":50,"column":3}},"6":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"7":{"start":{"line":48,"column":4},"end":{"line":48,"column":57}}},"branchMap":{},"code":["// This is an implementation of the [HTTP/2][http2]","// framing layer for [node.js][node].","//","// The main building blocks are [node.js streams][node-stream] that are connected through pipes.","//","// The main components are:","//","// * [Endpoint](endpoint.html): represents an HTTP/2 endpoint (client or server). It's","//   responsible for the the first part of the handshake process (sending/receiving the","//   [connection header][http2-connheader]) and manages other components (framer, compressor,","//   connection, streams) that make up a client or server.","//","// * [Connection](connection.html): multiplexes the active HTTP/2 streams, manages connection","//   lifecycle and settings, and responsible for enforcing the connection level limits (flow","//   control, initiated stream limit)","//","// * [Stream](stream.html): implementation of the [HTTP/2 stream concept][http2-stream].","//   Implements the [stream state machine][http2-streamstate] defined by the standard, provides","//   management methods and events for using the stream (sending/receiving headers, data, etc.),","//   and enforces stream level constraints (flow control, sending only legal frames).","//","// * [Flow](flow.html): implements flow control for Connection and Stream as parent class.","//","// * [Compressor and Decompressor](compressor.html): compression and decompression of HEADER and","//   PUSH_PROMISE frames","//","// * [Serializer and Deserializer](framer.html): the lowest layer in the stack that transforms","//   between the binary and the JavaScript object representation of HTTP/2 frames","//","// [http2]:               https://tools.ietf.org/html/rfc7540","// [http2-connheader]:    https://tools.ietf.org/html/rfc7540#section-3.5","// [http2-stream]:        https://tools.ietf.org/html/rfc7540#section-5","// [http2-streamstate]:   https://tools.ietf.org/html/rfc7540#section-5.1","// [node]:                https://nodejs.org/","// [node-stream]:         https://nodejs.org/api/stream.html","// [node-https]:          https://nodejs.org/api/https.html","// [node-http]:           https://nodejs.org/api/http.html","","exports.VERSION = 'h2';","","exports.Endpoint = require('./endpoint').Endpoint;","","/* Bunyan serializers exported by submodules that are worth adding when creating a logger. */","exports.serializers = {};","var modules = ['./framer', './compressor', './flow', './connection', './stream', './endpoint'];","modules.map(require).forEach(function(module) {","  for (var name in module.serializers) {","    exports.serializers[name] = module.serializers[name];","  }","});","","/*","              Stream API            Endpoint API","              Stream data","","             |            ^        |            ^","             |            |        |            |","             |            |        |            |"," +-----------|------------|---------------------------------------+"," |           |            |   Endpoint                            |"," |           |            |                                       |"," |   +-------|------------|-----------------------------------+   |"," |   |       |            |  Connection                       |   |"," |   |       v            |                                   |   |"," |   |  +-----------------------+  +--------------------      |   |"," |   |  |        Stream         |  |         Stream      ...  |   |"," |   |  +-----------------------+  +--------------------      |   |"," |   |       |            ^              |            ^       |   |"," |   |       v            |              v            |       |   |"," |   |       +------------+--+--------+--+------------+- ...  |   |"," |   |                       |        ^                       |   |"," |   |                       |        |                       |   |"," |   +-----------------------|--------|-----------------------+   |"," |                           |        |                           |"," |                           v        |                           |"," |   +--------------------------+  +--------------------------+   |"," |   |        Compressor        |  |       Decompressor       |   |"," |   +--------------------------+  +--------------------------+   |"," |                           |        ^                           |"," |                           v        |                           |"," |   +--------------------------+  +--------------------------+   |"," |   |        Serializer        |  |       Deserializer       |   |"," |   +--------------------------+  +--------------------------+   |"," |                           |        ^                           |"," +---------------------------|--------|---------------------------+","                             |        |","                             v        |","","                              Raw data","","*/",""],"l":{"39":1,"41":1,"44":1,"45":1,"46":1,"47":6,"48":4}},"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/endpoint.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/endpoint.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":1,"82":0,"83":1,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":1,"97":0,"98":1,"99":1,"100":1,"101":0,"102":0,"103":0,"104":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"Endpoint","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":48}}},"2":{"name":"_writePrelude","line":84,"loc":{"start":{"line":84,"column":35},"end":{"line":84,"column":60}}},"3":{"name":"_readPrelude","line":90,"loc":{"start":{"line":90,"column":34},"end":{"line":90,"column":58}}},"4":{"name":"_temporalWrite","line":95,"loc":{"start":{"line":95,"column":16},"end":{"line":95,"column":63}}},"5":{"name":"createTransformStream","line":153,"loc":{"start":{"line":153,"column":0},"end":{"line":153,"column":39}}},"6":{"name":"(anonymous_6)","line":156,"loc":{"start":{"line":156,"column":25},"end":{"line":156,"column":57}}},"7":{"name":"pipeAndFilter","line":162,"loc":{"start":{"line":162,"column":0},"end":{"line":162,"column":49}}},"8":{"name":"_initializeDataFlow","line":170,"loc":{"start":{"line":170,"column":41},"end":{"line":170,"column":95}}},"9":{"name":"_read","line":200,"loc":{"start":{"line":200,"column":27},"end":{"line":200,"column":44}}},"10":{"name":"_write","line":212,"loc":{"start":{"line":212,"column":28},"end":{"line":212,"column":67}}},"11":{"name":"_initializeManagement","line":219,"loc":{"start":{"line":219,"column":43},"end":{"line":219,"column":76}}},"12":{"name":"createStream","line":223,"loc":{"start":{"line":223,"column":34},"end":{"line":223,"column":58}}},"13":{"name":"_initializeErrorHandling","line":230,"loc":{"start":{"line":230,"column":46},"end":{"line":230,"column":82}}},"14":{"name":"_error","line":240,"loc":{"start":{"line":240,"column":28},"end":{"line":240,"column":62}}},"15":{"name":"close","line":246,"loc":{"start":{"line":246,"column":27},"end":{"line":246,"column":49}}},"16":{"name":"(anonymous_16)","line":256,"loc":{"start":{"line":256,"column":24},"end":{"line":256,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":54}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":56}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":54}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"10":{"start":{"line":50,"column":0},"end":{"line":75,"column":1}},"11":{"start":{"line":51,"column":2},"end":{"line":51,"column":20}},"12":{"start":{"line":54,"column":2},"end":{"line":54,"column":60}},"13":{"start":{"line":58,"column":2},"end":{"line":58,"column":51}},"14":{"start":{"line":59,"column":2},"end":{"line":63,"column":3}},"15":{"start":{"line":60,"column":4},"end":{"line":60,"column":25}},"16":{"start":{"line":62,"column":4},"end":{"line":62,"column":24}},"17":{"start":{"line":68,"column":2},"end":{"line":68,"column":58}},"18":{"start":{"line":71,"column":2},"end":{"line":71,"column":31}},"19":{"start":{"line":74,"column":2},"end":{"line":74,"column":34}},"20":{"start":{"line":76,"column":0},"end":{"line":76,"column":91}},"21":{"start":{"line":81,"column":0},"end":{"line":81,"column":68}},"22":{"start":{"line":84,"column":0},"end":{"line":87,"column":2}},"23":{"start":{"line":85,"column":2},"end":{"line":85,"column":67}},"24":{"start":{"line":86,"column":2},"end":{"line":86,"column":28}},"25":{"start":{"line":90,"column":0},"end":{"line":118,"column":2}},"26":{"start":{"line":92,"column":2},"end":{"line":92,"column":17}},"27":{"start":{"line":95,"column":2},"end":{"line":117,"column":4}},"28":{"start":{"line":98,"column":4},"end":{"line":98,"column":24}},"29":{"start":{"line":99,"column":4},"end":{"line":107,"column":5}},"30":{"start":{"line":100,"column":6},"end":{"line":105,"column":7}},"31":{"start":{"line":101,"column":8},"end":{"line":102,"column":76}},"32":{"start":{"line":103,"column":8},"end":{"line":103,"column":51}},"33":{"start":{"line":104,"column":8},"end":{"line":104,"column":15}},"34":{"start":{"line":106,"column":6},"end":{"line":106,"column":18}},"35":{"start":{"line":111,"column":4},"end":{"line":116,"column":5}},"36":{"start":{"line":112,"column":6},"end":{"line":112,"column":85}},"37":{"start":{"line":113,"column":6},"end":{"line":113,"column":25}},"38":{"start":{"line":114,"column":6},"end":{"line":114,"column":43}},"39":{"start":{"line":115,"column":6},"end":{"line":115,"column":41}},"40":{"start":{"line":153,"column":0},"end":{"line":160,"column":1}},"41":{"start":{"line":154,"column":2},"end":{"line":154,"column":54}},"42":{"start":{"line":155,"column":2},"end":{"line":155,"column":44}},"43":{"start":{"line":156,"column":2},"end":{"line":158,"column":4}},"44":{"start":{"line":157,"column":4},"end":{"line":157,"column":30}},"45":{"start":{"line":159,"column":2},"end":{"line":159,"column":19}},"46":{"start":{"line":162,"column":0},"end":{"line":168,"column":1}},"47":{"start":{"line":163,"column":2},"end":{"line":167,"column":3}},"48":{"start":{"line":164,"column":4},"end":{"line":164,"column":62}},"49":{"start":{"line":166,"column":4},"end":{"line":166,"column":26}},"50":{"start":{"line":170,"column":0},"end":{"line":197,"column":2}},"51":{"start":{"line":171,"column":2},"end":{"line":171,"column":54}},"52":{"start":{"line":172,"column":2},"end":{"line":180,"column":3}},"53":{"start":{"line":173,"column":4},"end":{"line":173,"column":22}},"54":{"start":{"line":174,"column":4},"end":{"line":174,"column":31}},"55":{"start":{"line":175,"column":4},"end":{"line":175,"column":34}},"56":{"start":{"line":177,"column":4},"end":{"line":177,"column":22}},"57":{"start":{"line":178,"column":4},"end":{"line":178,"column":32}},"58":{"start":{"line":179,"column":4},"end":{"line":179,"column":33}},"59":{"start":{"line":182,"column":2},"end":{"line":182,"column":49}},"60":{"start":{"line":183,"column":2},"end":{"line":183,"column":51}},"61":{"start":{"line":184,"column":2},"end":{"line":184,"column":65}},"62":{"start":{"line":185,"column":2},"end":{"line":185,"column":69}},"63":{"start":{"line":186,"column":2},"end":{"line":186,"column":74}},"64":{"start":{"line":188,"column":2},"end":{"line":188,"column":79}},"65":{"start":{"line":189,"column":2},"end":{"line":189,"column":81}},"66":{"start":{"line":190,"column":2},"end":{"line":190,"column":86}},"67":{"start":{"line":191,"column":2},"end":{"line":191,"column":82}},"68":{"start":{"line":193,"column":2},"end":{"line":194,"column":85}},"69":{"start":{"line":195,"column":2},"end":{"line":196,"column":81}},"70":{"start":{"line":199,"column":0},"end":{"line":199,"column":16}},"71":{"start":{"line":200,"column":0},"end":{"line":210,"column":2}},"72":{"start":{"line":201,"column":2},"end":{"line":201,"column":34}},"73":{"start":{"line":202,"column":2},"end":{"line":202,"column":33}},"74":{"start":{"line":203,"column":2},"end":{"line":205,"column":3}},"75":{"start":{"line":204,"column":4},"end":{"line":204,"column":34}},"76":{"start":{"line":206,"column":2},"end":{"line":208,"column":3}},"77":{"start":{"line":207,"column":4},"end":{"line":207,"column":61}},"78":{"start":{"line":209,"column":2},"end":{"line":209,"column":35}},"79":{"start":{"line":212,"column":0},"end":{"line":214,"column":2}},"80":{"start":{"line":213,"column":2},"end":{"line":213,"column":50}},"81":{"start":{"line":219,"column":0},"end":{"line":221,"column":2}},"82":{"start":{"line":220,"column":2},"end":{"line":220,"column":64}},"83":{"start":{"line":223,"column":0},"end":{"line":225,"column":2}},"84":{"start":{"line":224,"column":2},"end":{"line":224,"column":41}},"85":{"start":{"line":230,"column":0},"end":{"line":238,"column":2}},"86":{"start":{"line":231,"column":2},"end":{"line":231,"column":69}},"87":{"start":{"line":232,"column":2},"end":{"line":232,"column":73}},"88":{"start":{"line":233,"column":2},"end":{"line":233,"column":69}},"89":{"start":{"line":234,"column":2},"end":{"line":234,"column":73}},"90":{"start":{"line":235,"column":2},"end":{"line":235,"column":69}},"91":{"start":{"line":237,"column":2},"end":{"line":237,"column":70}},"92":{"start":{"line":240,"column":0},"end":{"line":244,"column":2}},"93":{"start":{"line":241,"column":2},"end":{"line":241,"column":92}},"94":{"start":{"line":242,"column":2},"end":{"line":242,"column":20}},"95":{"start":{"line":243,"column":2},"end":{"line":243,"column":53}},"96":{"start":{"line":246,"column":0},"end":{"line":248,"column":2}},"97":{"start":{"line":247,"column":2},"end":{"line":247,"column":32}},"98":{"start":{"line":253,"column":0},"end":{"line":253,"column":25}},"99":{"start":{"line":255,"column":0},"end":{"line":255,"column":15}},"100":{"start":{"line":256,"column":0},"end":{"line":262,"column":2}},"101":{"start":{"line":257,"column":2},"end":{"line":260,"column":3}},"102":{"start":{"line":258,"column":4},"end":{"line":258,"column":25}},"103":{"start":{"line":259,"column":4},"end":{"line":259,"column":16}},"104":{"start":{"line":261,"column":2},"end":{"line":261,"column":21}}},"branchMap":{"1":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":10},"end":{"line":58,"column":27}},{"start":{"line":58,"column":32},"end":{"line":58,"column":49}}]},"2":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"3":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":43},"end":{"line":68,"column":50}},{"start":{"line":68,"column":54},"end":{"line":68,"column":56}}]},"4":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":10},"end":{"line":99,"column":40}},{"start":{"line":99,"column":44},"end":{"line":99,"column":76}}]},"5":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"6":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"7":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"8":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"9":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":9},"end":{"line":203,"column":19}},{"start":{"line":203,"column":24},"end":{"line":203,"column":55}}]},"10":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"11":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]}},"code":["var assert = require('assert');","","var Serializer   = require('./framer').Serializer;","var Deserializer = require('./framer').Deserializer;","var Compressor   = require('./compressor').Compressor;","var Decompressor = require('./compressor').Decompressor;","var Connection   = require('./connection').Connection;","var Duplex       = require('stream').Duplex;","var Transform    = require('stream').Transform;","","exports.Endpoint = Endpoint;","","// The Endpoint class","// ==================","","// Public API","// ----------","","// - **new Endpoint(log, role, settings, filters)**: create a new Endpoint.","//","//   - `log`: bunyan logger of the parent","//   - `role`: 'CLIENT' or 'SERVER'","//   - `settings`: initial HTTP/2 settings","//   - `filters`: a map of functions that filter the traffic between components (for debugging or","//     intentional failure injection).","//","//     Filter functions get three arguments:","//     1. `frame`: the current frame","//     2. `forward(frame)`: function that can be used to forward a frame to the next component","//     3. `done()`: callback to signal the end of the filter process","//","//     Valid filter names and their position in the stack:","//     - `beforeSerialization`: after compression, before serialization","//     - `beforeCompression`: after multiplexing, before compression","//     - `afterDeserialization`: after deserialization, before decompression","//     - `afterDecompression`: after decompression, before multiplexing","//","// * **Event: 'stream' (Stream)**: 'stream' event forwarded from the underlying Connection","//","// * **Event: 'error' (type)**: signals an error","//","// * **createStream(): Stream**: initiate a new stream (forwarded to the underlying Connection)","//","// * **close([error])**: close the connection with an error code","","// Constructor","// -----------","","// The process of initialization:","function Endpoint(log, role, settings, filters) {","  Duplex.call(this);","","  // * Initializing logging infrastructure","  this._log = log.child({ component: 'endpoint', e: this });","","  // * First part of the handshake process: sending and receiving the client connection header","  //   prelude.","  assert((role === 'CLIENT') || role === 'SERVER');","  if (role === 'CLIENT') {","    this._writePrelude();","  } else {","    this._readPrelude();","  }","","  // * Initialization of component. This includes the second part of the handshake process:","  //   sending the first SETTINGS frame. This is done by the connection class right after","  //   initialization.","  this._initializeDataFlow(role, settings, filters || {});","","  // * Initialization of management code.","  this._initializeManagement();","","  // * Initializing error handling.","  this._initializeErrorHandling();","}","Endpoint.prototype = Object.create(Duplex.prototype, { constructor: { value: Endpoint } });","","// Handshake","// ---------","","var CLIENT_PRELUDE = new Buffer('PRI * HTTP/2.0\\r\\n\\r\\nSM\\r\\n\\r\\n');","","// Writing the client header is simple and synchronous.","Endpoint.prototype._writePrelude = function _writePrelude() {","  this._log.debug('Sending the client connection header prelude.');","  this.push(CLIENT_PRELUDE);","};","","// The asynchronous process of reading the client header:","Endpoint.prototype._readPrelude = function _readPrelude() {","  // * progress in the header is tracker using a `cursor`","  var cursor = 0;","","  // * `_write` is temporarily replaced by the comparator function","  this._write = function _temporalWrite(chunk, encoding, done) {","    // * which compares the stored header with the current `chunk` byte by byte and emits the","    //   'error' event if there's a byte that doesn't match","    var offset = cursor;","    while(cursor < CLIENT_PRELUDE.length && (cursor - offset) < chunk.length) {","      if (CLIENT_PRELUDE[cursor] !== chunk[cursor - offset]) {","        this._log.fatal({ cursor: cursor, offset: offset, chunk: chunk },","                        'Client connection header prelude does not match.');","        this._error('handshake', 'PROTOCOL_ERROR');","        return;","      }","      cursor += 1;","    }","","    // * if the whole header is over, and there were no error then restore the original `_write`","    //   and call it with the remaining part of the current chunk","    if (cursor === CLIENT_PRELUDE.length) {","      this._log.debug('Successfully received the client connection header prelude.');","      delete this._write;","      chunk = chunk.slice(cursor - offset);","      this._write(chunk, encoding, done);","    }","  };","};","","// Data flow","// ---------","","//     +---------------------------------------------+","//     |                                             |","//     |   +-------------------------------------+   |","//     |   | +---------+ +---------+ +---------+ |   |","//     |   | | stream1 | | stream2 | |   ...   | |   |","//     |   | +---------+ +---------+ +---------+ |   |","//     |   |             connection              |   |","//     |   +-------------------------------------+   |","//     |             |                 ^             |","//     |        pipe |                 | pipe        |","//     |             v                 |             |","//     |   +------------------+------------------+   |","//     |   |    compressor    |   decompressor   |   |","//     |   +------------------+------------------+   |","//     |             |                 ^             |","//     |        pipe |                 | pipe        |","//     |             v                 |             |","//     |   +------------------+------------------+   |","//     |   |    serializer    |   deserializer   |   |","//     |   +------------------+------------------+   |","//     |             |                 ^             |","//     |     _read() |                 | _write()    |","//     |             v                 |             |","//     |      +------------+     +-----------+       |","//     |      |output queue|     |input queue|       |","//     +------+------------+-----+-----------+-------+","//                   |                 ^","//            read() |                 | write()","//                   v                 |","","function createTransformStream(filter) {","  var transform = new Transform({ objectMode: true });","  var push = transform.push.bind(transform);","  transform._transform = function(frame, encoding, done) {","    filter(frame, push, done);","  };","  return transform;","}","","function pipeAndFilter(stream1, stream2, filter) {","  if (filter) {","    stream1.pipe(createTransformStream(filter)).pipe(stream2);","  } else {","    stream1.pipe(stream2);","  }","}","","Endpoint.prototype._initializeDataFlow = function _initializeDataFlow(role, settings, filters) {","  var firstStreamId, compressorRole, decompressorRole;","  if (role === 'CLIENT') {","    firstStreamId = 1;","    compressorRole = 'REQUEST';","    decompressorRole = 'RESPONSE';","  } else {","    firstStreamId = 2;","    compressorRole = 'RESPONSE';","    decompressorRole = 'REQUEST';","  }","","  this._serializer   = new Serializer(this._log);","  this._deserializer = new Deserializer(this._log);","  this._compressor   = new Compressor(this._log, compressorRole);","  this._decompressor = new Decompressor(this._log, decompressorRole);","  this._connection   = new Connection(this._log, firstStreamId, settings);","","  pipeAndFilter(this._connection, this._compressor, filters.beforeCompression);","  pipeAndFilter(this._compressor, this._serializer, filters.beforeSerialization);","  pipeAndFilter(this._deserializer, this._decompressor, filters.afterDeserialization);","  pipeAndFilter(this._decompressor, this._connection, filters.afterDecompression);","","  this._connection.on('ACKNOWLEDGED_SETTINGS_HEADER_TABLE_SIZE',","                      this._decompressor.setTableSizeLimit.bind(this._decompressor));","  this._connection.on('RECEIVING_SETTINGS_HEADER_TABLE_SIZE',","                      this._compressor.setTableSizeLimit.bind(this._compressor));","};","","var noread = {};","Endpoint.prototype._read = function _read() {","  this._readableState.sync = true;","  var moreNeeded = noread, chunk;","  while (moreNeeded && (chunk = this._serializer.read())) {","    moreNeeded = this.push(chunk);","  }","  if (moreNeeded === noread) {","    this._serializer.once('readable', this._read.bind(this));","  }","  this._readableState.sync = false;","};","","Endpoint.prototype._write = function _write(chunk, encoding, done) {","  this._deserializer.write(chunk, encoding, done);","};","","// Management","// --------------","","Endpoint.prototype._initializeManagement = function _initializeManagement() {","  this._connection.on('stream', this.emit.bind(this, 'stream'));","};","","Endpoint.prototype.createStream = function createStream() {","  return this._connection.createStream();","};","","// Error handling","// --------------","","Endpoint.prototype._initializeErrorHandling = function _initializeErrorHandling() {","  this._serializer.on('error', this._error.bind(this, 'serializer'));","  this._deserializer.on('error', this._error.bind(this, 'deserializer'));","  this._compressor.on('error', this._error.bind(this, 'compressor'));","  this._decompressor.on('error', this._error.bind(this, 'decompressor'));","  this._connection.on('error', this._error.bind(this, 'connection'));","","  this._connection.on('peerError', this.emit.bind(this, 'peerError'));","};","","Endpoint.prototype._error = function _error(component, error) {","  this._log.fatal({ source: component, message: error }, 'Fatal error, closing connection');","  this.close(error);","  setImmediate(this.emit.bind(this, 'error', error));","};","","Endpoint.prototype.close = function close(error) {","  this._connection.close(error);","};","","// Bunyan serializers","// ------------------","","exports.serializers = {};","","var nextId = 0;","exports.serializers.e = function(endpoint) {","  if (!('id' in endpoint)) {","    endpoint.id = nextId;","    nextId += 1;","  }","  return endpoint.id;","};",""],"l":{"1":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"50":1,"51":0,"54":0,"58":0,"59":0,"60":0,"62":0,"68":0,"71":0,"74":0,"76":1,"81":1,"84":1,"85":0,"86":0,"90":1,"92":0,"95":0,"98":0,"99":0,"100":0,"101":0,"103":0,"104":0,"106":0,"111":0,"112":0,"113":0,"114":0,"115":0,"153":1,"154":0,"155":0,"156":0,"157":0,"159":0,"162":1,"163":0,"164":0,"166":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"177":0,"178":0,"179":0,"182":0,"183":0,"184":0,"185":0,"186":0,"188":0,"189":0,"190":0,"191":0,"193":0,"195":0,"199":1,"200":1,"201":0,"202":0,"203":0,"204":0,"206":0,"207":0,"209":0,"212":1,"213":0,"219":1,"220":0,"223":1,"224":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":0,"237":0,"240":1,"241":0,"242":0,"243":0,"246":1,"247":0,"253":1,"255":1,"256":1,"257":0,"258":0,"259":0,"261":0}},"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/framer.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/framer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":1,"105":1,"106":1,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":1,"123":1,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":1,"163":1,"164":1,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":1,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":1,"185":1,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":1,"199":1,"200":1,"201":1,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":1,"262":1,"263":1,"264":1,"265":0,"266":1,"267":0,"268":0,"269":0,"270":1,"271":1,"272":1,"273":1,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":1,"290":1,"291":1,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":0,"302":0,"303":0,"304":1,"305":1,"306":1,"307":1,"308":0,"309":1,"310":0,"311":1,"312":1,"313":1,"314":1,"315":0,"316":1,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":1,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":1,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":1,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":1,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":1,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":1,"399":0,"400":1,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":1,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":1,"441":1,"442":1,"443":1,"444":1,"445":1,"446":1,"447":1,"448":1,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":1,"470":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},"fnMap":{"1":{"name":"Serializer","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}}},"2":{"name":"_transform","line":37,"loc":{"start":{"line":37,"column":34},"end":{"line":37,"column":77}}},"3":{"name":"Deserializer","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":33}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":31},"end":{"line":82,"column":46}}},"5":{"name":"_transform","line":93,"loc":{"start":{"line":93,"column":36},"end":{"line":93,"column":79}}},"6":{"name":"writeCommonHeader","line":206,"loc":{"start":{"line":206,"column":26},"end":{"line":206,"column":69}}},"7":{"name":"readCommonHeader","line":237,"loc":{"start":{"line":237,"column":28},"end":{"line":237,"column":69}}},"8":{"name":"writeData","line":296,"loc":{"start":{"line":296,"column":18},"end":{"line":296,"column":53}}},"9":{"name":"readData","line":300,"loc":{"start":{"line":300,"column":20},"end":{"line":300,"column":53}}},"10":{"name":"writeHeadersPriority","line":364,"loc":{"start":{"line":364,"column":21},"end":{"line":364,"column":67}}},"11":{"name":"readHeadersPriority","line":379,"loc":{"start":{"line":379,"column":23},"end":{"line":379,"column":67}}},"12":{"name":"writePriority","line":444,"loc":{"start":{"line":444,"column":22},"end":{"line":444,"column":61}}},"13":{"name":"readPriority","line":457,"loc":{"start":{"line":457,"column":24},"end":{"line":457,"column":61}}},"14":{"name":"writeRstStream","line":492,"loc":{"start":{"line":492,"column":24},"end":{"line":492,"column":64}}},"15":{"name":"readRstStream","line":500,"loc":{"start":{"line":500,"column":26},"end":{"line":500,"column":64}}},"16":{"name":"writeSettings","line":547,"loc":{"start":{"line":547,"column":22},"end":{"line":547,"column":61}}},"17":{"name":"(anonymous_17)","line":549,"loc":{"start":{"line":549,"column":26},"end":{"line":549,"column":48}}},"18":{"name":"readSettings","line":567,"loc":{"start":{"line":567,"column":24},"end":{"line":567,"column":67}}},"19":{"name":"writePushPromise","line":653,"loc":{"start":{"line":653,"column":26},"end":{"line":653,"column":68}}},"20":{"name":"readPushPromise","line":664,"loc":{"start":{"line":664,"column":28},"end":{"line":664,"column":68}}},"21":{"name":"writePing","line":708,"loc":{"start":{"line":708,"column":18},"end":{"line":708,"column":53}}},"22":{"name":"readPing","line":712,"loc":{"start":{"line":712,"column":20},"end":{"line":712,"column":53}}},"23":{"name":"writeGoaway","line":747,"loc":{"start":{"line":747,"column":20},"end":{"line":747,"column":57}}},"24":{"name":"readGoaway","line":761,"loc":{"start":{"line":761,"column":22},"end":{"line":761,"column":57}}},"25":{"name":"writeWindowUpdate","line":792,"loc":{"start":{"line":792,"column":27},"end":{"line":792,"column":70}}},"26":{"name":"readWindowUpdate","line":802,"loc":{"start":{"line":802,"column":29},"end":{"line":802,"column":70}}},"27":{"name":"writeContinuation","line":829,"loc":{"start":{"line":829,"column":26},"end":{"line":829,"column":69}}},"28":{"name":"readContinuation","line":833,"loc":{"start":{"line":833,"column":28},"end":{"line":833,"column":69}}},"29":{"name":"istchar","line":874,"loc":{"start":{"line":874,"column":0},"end":{"line":874,"column":20}}},"30":{"name":"hexencode","line":878,"loc":{"start":{"line":878,"column":0},"end":{"line":878,"column":22}}},"31":{"name":"writeAltSvc","line":891,"loc":{"start":{"line":891,"column":20},"end":{"line":891,"column":57}}},"32":{"name":"stripquotes","line":905,"loc":{"start":{"line":905,"column":0},"end":{"line":905,"column":24}}},"33":{"name":"splitNameValue","line":920,"loc":{"start":{"line":920,"column":0},"end":{"line":920,"column":32}}},"34":{"name":"splitHeaderParameters","line":947,"loc":{"start":{"line":947,"column":0},"end":{"line":947,"column":35}}},"35":{"name":"parseHeaderValue","line":951,"loc":{"start":{"line":951,"column":0},"end":{"line":951,"column":51}}},"36":{"name":"rsplit","line":984,"loc":{"start":{"line":984,"column":0},"end":{"line":984,"column":33}}},"37":{"name":"ishex","line":1005,"loc":{"start":{"line":1005,"column":0},"end":{"line":1005,"column":18}}},"38":{"name":"unescape","line":1009,"loc":{"start":{"line":1009,"column":0},"end":{"line":1009,"column":21}}},"39":{"name":"readAltSvc","line":1037,"loc":{"start":{"line":1037,"column":22},"end":{"line":1037,"column":57}}},"40":{"name":"writeBlocked","line":1086,"loc":{"start":{"line":1086,"column":21},"end":{"line":1086,"column":59}}},"41":{"name":"readBlocked","line":1089,"loc":{"start":{"line":1089,"column":23},"end":{"line":1089,"column":59}}},"42":{"name":"(anonymous_42)","line":1122,"loc":{"start":{"line":1122,"column":28},"end":{"line":1122,"column":44}}},"43":{"name":"(anonymous_43)","line":1135,"loc":{"start":{"line":1135,"column":71},"end":{"line":1135,"column":86}}},"44":{"name":"(anonymous_44)","line":1155,"loc":{"start":{"line":1155,"column":57},"end":{"line":1155,"column":72}}},"45":{"name":"(anonymous_45)","line":1163,"loc":{"start":{"line":1163,"column":27},"end":{"line":1163,"column":42}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},"8":{"start":{"line":28,"column":0},"end":{"line":31,"column":1}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":53}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":45}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":98}},"12":{"start":{"line":37,"column":0},"end":{"line":56,"column":2}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":54}},"14":{"start":{"line":40,"column":2},"end":{"line":40,"column":72}},"15":{"start":{"line":42,"column":2},"end":{"line":42,"column":19}},"16":{"start":{"line":43,"column":2},"end":{"line":43,"column":41}},"17":{"start":{"line":44,"column":2},"end":{"line":44,"column":55}},"18":{"start":{"line":46,"column":2},"end":{"line":46,"column":57}},"19":{"start":{"line":48,"column":2},"end":{"line":53,"column":3}},"20":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"21":{"start":{"line":50,"column":6},"end":{"line":50,"column":61}},"22":{"start":{"line":52,"column":4},"end":{"line":52,"column":26}},"23":{"start":{"line":55,"column":2},"end":{"line":55,"column":9}},"24":{"start":{"line":69,"column":0},"end":{"line":74,"column":1}},"25":{"start":{"line":70,"column":2},"end":{"line":70,"column":20}},"26":{"start":{"line":71,"column":2},"end":{"line":71,"column":55}},"27":{"start":{"line":72,"column":2},"end":{"line":72,"column":45}},"28":{"start":{"line":73,"column":2},"end":{"line":73,"column":33}},"29":{"start":{"line":75,"column":0},"end":{"line":75,"column":102}},"30":{"start":{"line":82,"column":0},"end":{"line":89,"column":2}},"31":{"start":{"line":83,"column":2},"end":{"line":83,"column":19}},"32":{"start":{"line":84,"column":2},"end":{"line":84,"column":34}},"33":{"start":{"line":85,"column":2},"end":{"line":85,"column":51}},"34":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"35":{"start":{"line":87,"column":4},"end":{"line":87,"column":21}},"36":{"start":{"line":93,"column":0},"end":{"line":147,"column":2}},"37":{"start":{"line":94,"column":2},"end":{"line":94,"column":17}},"38":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"39":{"start":{"line":97,"column":4},"end":{"line":97,"column":54}},"40":{"start":{"line":100,"column":2},"end":{"line":144,"column":3}},"41":{"start":{"line":103,"column":4},"end":{"line":103,"column":85}},"42":{"start":{"line":104,"column":4},"end":{"line":104,"column":68}},"43":{"start":{"line":105,"column":4},"end":{"line":105,"column":27}},"44":{"start":{"line":106,"column":4},"end":{"line":106,"column":21}},"45":{"start":{"line":113,"column":4},"end":{"line":121,"column":5}},"46":{"start":{"line":114,"column":6},"end":{"line":114,"column":77}},"47":{"start":{"line":115,"column":6},"end":{"line":120,"column":7}},"48":{"start":{"line":116,"column":8},"end":{"line":116,"column":32}},"49":{"start":{"line":118,"column":8},"end":{"line":118,"column":47}},"50":{"start":{"line":119,"column":8},"end":{"line":119,"column":15}},"51":{"start":{"line":128,"column":4},"end":{"line":143,"column":5}},"52":{"start":{"line":129,"column":6},"end":{"line":141,"column":7}},"53":{"start":{"line":130,"column":8},"end":{"line":130,"column":90}},"54":{"start":{"line":131,"column":8},"end":{"line":137,"column":9}},"55":{"start":{"line":132,"column":10},"end":{"line":132,"column":68}},"56":{"start":{"line":133,"column":10},"end":{"line":133,"column":36}},"57":{"start":{"line":135,"column":10},"end":{"line":135,"column":68}},"58":{"start":{"line":136,"column":10},"end":{"line":136,"column":33}},"59":{"start":{"line":139,"column":8},"end":{"line":139,"column":55}},"60":{"start":{"line":142,"column":6},"end":{"line":142,"column":37}},"61":{"start":{"line":146,"column":2},"end":{"line":146,"column":9}},"62":{"start":{"line":196,"column":0},"end":{"line":196,"column":27}},"63":{"start":{"line":198,"column":0},"end":{"line":198,"column":20}},"64":{"start":{"line":200,"column":0},"end":{"line":200,"column":20}},"65":{"start":{"line":202,"column":0},"end":{"line":202,"column":52}},"66":{"start":{"line":204,"column":0},"end":{"line":204,"column":32}},"67":{"start":{"line":206,"column":0},"end":{"line":235,"column":2}},"68":{"start":{"line":207,"column":2},"end":{"line":207,"column":52}},"69":{"start":{"line":209,"column":2},"end":{"line":209,"column":15}},"70":{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},"71":{"start":{"line":211,"column":4},"end":{"line":211,"column":30}},"72":{"start":{"line":213,"column":2},"end":{"line":213,"column":32}},"73":{"start":{"line":214,"column":2},"end":{"line":214,"column":38}},"74":{"start":{"line":216,"column":2},"end":{"line":216,"column":46}},"75":{"start":{"line":217,"column":2},"end":{"line":217,"column":37}},"76":{"start":{"line":219,"column":2},"end":{"line":219,"column":19}},"77":{"start":{"line":220,"column":2},"end":{"line":226,"column":3}},"78":{"start":{"line":221,"column":4},"end":{"line":221,"column":56}},"79":{"start":{"line":222,"column":4},"end":{"line":222,"column":87}},"80":{"start":{"line":223,"column":4},"end":{"line":225,"column":5}},"81":{"start":{"line":224,"column":6},"end":{"line":224,"column":34}},"82":{"start":{"line":227,"column":2},"end":{"line":227,"column":39}},"83":{"start":{"line":229,"column":2},"end":{"line":229,"column":75}},"84":{"start":{"line":230,"column":2},"end":{"line":230,"column":51}},"85":{"start":{"line":232,"column":2},"end":{"line":232,"column":32}},"86":{"start":{"line":234,"column":2},"end":{"line":234,"column":14}},"87":{"start":{"line":237,"column":0},"end":{"line":264,"column":2}},"88":{"start":{"line":238,"column":2},"end":{"line":240,"column":3}},"89":{"start":{"line":239,"column":4},"end":{"line":239,"column":30}},"90":{"start":{"line":242,"column":2},"end":{"line":242,"column":46}},"91":{"start":{"line":243,"column":2},"end":{"line":243,"column":38}},"92":{"start":{"line":246,"column":2},"end":{"line":246,"column":36}},"93":{"start":{"line":248,"column":2},"end":{"line":248,"column":47}},"94":{"start":{"line":249,"column":2},"end":{"line":252,"column":3}},"95":{"start":{"line":251,"column":4},"end":{"line":251,"column":18}},"96":{"start":{"line":254,"column":2},"end":{"line":254,"column":19}},"97":{"start":{"line":255,"column":2},"end":{"line":255,"column":37}},"98":{"start":{"line":256,"column":2},"end":{"line":256,"column":44}},"99":{"start":{"line":257,"column":2},"end":{"line":259,"column":3}},"100":{"start":{"line":258,"column":4},"end":{"line":258,"column":64}},"101":{"start":{"line":261,"column":2},"end":{"line":261,"column":53}},"102":{"start":{"line":263,"column":2},"end":{"line":263,"column":16}},"103":{"start":{"line":290,"column":0},"end":{"line":290,"column":25}},"104":{"start":{"line":292,"column":0},"end":{"line":292,"column":69}},"105":{"start":{"line":294,"column":0},"end":{"line":294,"column":39}},"106":{"start":{"line":296,"column":0},"end":{"line":298,"column":2}},"107":{"start":{"line":297,"column":2},"end":{"line":297,"column":27}},"108":{"start":{"line":300,"column":0},"end":{"line":321,"column":2}},"109":{"start":{"line":301,"column":2},"end":{"line":301,"column":21}},"110":{"start":{"line":302,"column":2},"end":{"line":302,"column":24}},"111":{"start":{"line":303,"column":2},"end":{"line":310,"column":3}},"112":{"start":{"line":304,"column":4},"end":{"line":307,"column":5}},"113":{"start":{"line":306,"column":6},"end":{"line":306,"column":32}},"114":{"start":{"line":308,"column":4},"end":{"line":308,"column":58}},"115":{"start":{"line":309,"column":4},"end":{"line":309,"column":19}},"116":{"start":{"line":312,"column":2},"end":{"line":320,"column":3}},"117":{"start":{"line":313,"column":4},"end":{"line":316,"column":5}},"118":{"start":{"line":315,"column":6},"end":{"line":315,"column":32}},"119":{"start":{"line":317,"column":4},"end":{"line":317,"column":62}},"120":{"start":{"line":319,"column":4},"end":{"line":319,"column":42}},"121":{"start":{"line":342,"column":0},"end":{"line":342,"column":28}},"122":{"start":{"line":344,"column":0},"end":{"line":344,"column":99}},"123":{"start":{"line":346,"column":0},"end":{"line":346,"column":116}},"124":{"start":{"line":364,"column":0},"end":{"line":377,"column":2}},"125":{"start":{"line":365,"column":2},"end":{"line":375,"column":3}},"126":{"start":{"line":366,"column":4},"end":{"line":366,"column":31}},"127":{"start":{"line":367,"column":4},"end":{"line":367,"column":114}},"128":{"start":{"line":368,"column":4},"end":{"line":368,"column":54}},"129":{"start":{"line":369,"column":4},"end":{"line":371,"column":5}},"130":{"start":{"line":370,"column":6},"end":{"line":370,"column":24}},"131":{"start":{"line":372,"column":4},"end":{"line":372,"column":96}},"132":{"start":{"line":373,"column":4},"end":{"line":373,"column":47}},"133":{"start":{"line":374,"column":4},"end":{"line":374,"column":25}},"134":{"start":{"line":376,"column":2},"end":{"line":376,"column":27}},"135":{"start":{"line":379,"column":0},"end":{"line":419,"column":2}},"136":{"start":{"line":380,"column":2},"end":{"line":380,"column":25}},"137":{"start":{"line":381,"column":2},"end":{"line":383,"column":3}},"138":{"start":{"line":382,"column":4},"end":{"line":382,"column":24}},"139":{"start":{"line":384,"column":2},"end":{"line":386,"column":3}},"140":{"start":{"line":385,"column":4},"end":{"line":385,"column":24}},"141":{"start":{"line":387,"column":2},"end":{"line":390,"column":3}},"142":{"start":{"line":389,"column":4},"end":{"line":389,"column":30}},"143":{"start":{"line":392,"column":2},"end":{"line":392,"column":21}},"144":{"start":{"line":393,"column":2},"end":{"line":393,"column":24}},"145":{"start":{"line":394,"column":2},"end":{"line":397,"column":3}},"146":{"start":{"line":395,"column":4},"end":{"line":395,"column":58}},"147":{"start":{"line":396,"column":4},"end":{"line":396,"column":19}},"148":{"start":{"line":399,"column":2},"end":{"line":408,"column":3}},"149":{"start":{"line":400,"column":4},"end":{"line":400,"column":39}},"150":{"start":{"line":401,"column":4},"end":{"line":401,"column":63}},"151":{"start":{"line":402,"column":4},"end":{"line":402,"column":20}},"152":{"start":{"line":403,"column":4},"end":{"line":403,"column":61}},"153":{"start":{"line":404,"column":4},"end":{"line":404,"column":30}},"154":{"start":{"line":405,"column":4},"end":{"line":405,"column":62}},"155":{"start":{"line":406,"column":4},"end":{"line":406,"column":56}},"156":{"start":{"line":407,"column":4},"end":{"line":407,"column":20}},"157":{"start":{"line":410,"column":2},"end":{"line":418,"column":3}},"158":{"start":{"line":411,"column":4},"end":{"line":414,"column":5}},"159":{"start":{"line":413,"column":6},"end":{"line":413,"column":32}},"160":{"start":{"line":415,"column":4},"end":{"line":415,"column":62}},"161":{"start":{"line":417,"column":4},"end":{"line":417,"column":42}},"162":{"start":{"line":428,"column":0},"end":{"line":428,"column":29}},"163":{"start":{"line":430,"column":0},"end":{"line":430,"column":25}},"164":{"start":{"line":432,"column":0},"end":{"line":432,"column":98}},"165":{"start":{"line":444,"column":0},"end":{"line":455,"column":2}},"166":{"start":{"line":445,"column":2},"end":{"line":445,"column":29}},"167":{"start":{"line":446,"column":2},"end":{"line":446,"column":112}},"168":{"start":{"line":447,"column":2},"end":{"line":447,"column":52}},"169":{"start":{"line":448,"column":2},"end":{"line":450,"column":3}},"170":{"start":{"line":449,"column":4},"end":{"line":449,"column":22}},"171":{"start":{"line":451,"column":2},"end":{"line":451,"column":94}},"172":{"start":{"line":452,"column":2},"end":{"line":452,"column":45}},"173":{"start":{"line":454,"column":2},"end":{"line":454,"column":23}},"174":{"start":{"line":457,"column":0},"end":{"line":468,"column":2}},"175":{"start":{"line":458,"column":2},"end":{"line":461,"column":3}},"176":{"start":{"line":460,"column":4},"end":{"line":460,"column":30}},"177":{"start":{"line":462,"column":2},"end":{"line":462,"column":37}},"178":{"start":{"line":463,"column":2},"end":{"line":463,"column":39}},"179":{"start":{"line":464,"column":2},"end":{"line":464,"column":59}},"180":{"start":{"line":465,"column":2},"end":{"line":465,"column":28}},"181":{"start":{"line":466,"column":2},"end":{"line":466,"column":60}},"182":{"start":{"line":467,"column":2},"end":{"line":467,"column":45}},"183":{"start":{"line":477,"column":0},"end":{"line":477,"column":31}},"184":{"start":{"line":479,"column":0},"end":{"line":479,"column":27}},"185":{"start":{"line":481,"column":0},"end":{"line":481,"column":46}},"186":{"start":{"line":492,"column":0},"end":{"line":498,"column":2}},"187":{"start":{"line":493,"column":2},"end":{"line":493,"column":29}},"188":{"start":{"line":494,"column":2},"end":{"line":494,"column":45}},"189":{"start":{"line":495,"column":2},"end":{"line":495,"column":52}},"190":{"start":{"line":496,"column":2},"end":{"line":496,"column":32}},"191":{"start":{"line":497,"column":2},"end":{"line":497,"column":23}},"192":{"start":{"line":500,"column":0},"end":{"line":510,"column":2}},"193":{"start":{"line":501,"column":2},"end":{"line":504,"column":3}},"194":{"start":{"line":503,"column":4},"end":{"line":503,"column":30}},"195":{"start":{"line":505,"column":2},"end":{"line":505,"column":51}},"196":{"start":{"line":506,"column":2},"end":{"line":509,"column":3}},"197":{"start":{"line":508,"column":4},"end":{"line":508,"column":35}},"198":{"start":{"line":523,"column":0},"end":{"line":523,"column":29}},"199":{"start":{"line":525,"column":0},"end":{"line":525,"column":30}},"200":{"start":{"line":527,"column":0},"end":{"line":527,"column":47}},"201":{"start":{"line":547,"column":0},"end":{"line":565,"column":2}},"202":{"start":{"line":548,"column":2},"end":{"line":548,"column":64}},"203":{"start":{"line":549,"column":2},"end":{"line":555,"column":5}},"204":{"start":{"line":550,"column":4},"end":{"line":554,"column":5}},"205":{"start":{"line":551,"column":6},"end":{"line":551,"column":65}},"206":{"start":{"line":552,"column":6},"end":{"line":552,"column":47}},"207":{"start":{"line":553,"column":6},"end":{"line":553,"column":78}},"208":{"start":{"line":556,"column":2},"end":{"line":556,"column":84}},"209":{"start":{"line":558,"column":2},"end":{"line":558,"column":47}},"210":{"start":{"line":559,"column":2},"end":{"line":562,"column":3}},"211":{"start":{"line":560,"column":4},"end":{"line":560,"column":55}},"212":{"start":{"line":561,"column":4},"end":{"line":561,"column":53}},"213":{"start":{"line":564,"column":2},"end":{"line":564,"column":23}},"214":{"start":{"line":567,"column":0},"end":{"line":591,"column":2}},"215":{"start":{"line":568,"column":2},"end":{"line":568,"column":22}},"216":{"start":{"line":573,"column":2},"end":{"line":575,"column":3}},"217":{"start":{"line":574,"column":4},"end":{"line":574,"column":30}},"218":{"start":{"line":577,"column":2},"end":{"line":579,"column":3}},"219":{"start":{"line":578,"column":4},"end":{"line":578,"column":28}},"220":{"start":{"line":580,"column":2},"end":{"line":590,"column":3}},"221":{"start":{"line":581,"column":4},"end":{"line":581,"column":47}},"222":{"start":{"line":582,"column":4},"end":{"line":582,"column":38}},"223":{"start":{"line":583,"column":4},"end":{"line":589,"column":5}},"224":{"start":{"line":584,"column":6},"end":{"line":586,"column":7}},"225":{"start":{"line":585,"column":8},"end":{"line":585,"column":67}},"226":{"start":{"line":587,"column":6},"end":{"line":587,"column":47}},"227":{"start":{"line":588,"column":6},"end":{"line":588,"column":81}},"228":{"start":{"line":594,"column":0},"end":{"line":594,"column":25}},"229":{"start":{"line":599,"column":0},"end":{"line":599,"column":73}},"230":{"start":{"line":605,"column":0},"end":{"line":605,"column":66}},"231":{"start":{"line":609,"column":0},"end":{"line":609,"column":78}},"232":{"start":{"line":613,"column":0},"end":{"line":613,"column":75}},"233":{"start":{"line":617,"column":0},"end":{"line":617,"column":70}},"234":{"start":{"line":631,"column":0},"end":{"line":631,"column":33}},"235":{"start":{"line":633,"column":0},"end":{"line":633,"column":83}},"236":{"start":{"line":635,"column":0},"end":{"line":635,"column":77}},"237":{"start":{"line":653,"column":0},"end":{"line":662,"column":2}},"238":{"start":{"line":654,"column":2},"end":{"line":654,"column":29}},"239":{"start":{"line":656,"column":2},"end":{"line":656,"column":46}},"240":{"start":{"line":657,"column":2},"end":{"line":657,"column":85}},"241":{"start":{"line":658,"column":2},"end":{"line":658,"column":43}},"242":{"start":{"line":660,"column":2},"end":{"line":660,"column":23}},"243":{"start":{"line":661,"column":2},"end":{"line":661,"column":27}},"244":{"start":{"line":664,"column":0},"end":{"line":687,"column":2}},"245":{"start":{"line":665,"column":2},"end":{"line":667,"column":3}},"246":{"start":{"line":666,"column":4},"end":{"line":666,"column":30}},"247":{"start":{"line":668,"column":2},"end":{"line":668,"column":21}},"248":{"start":{"line":669,"column":2},"end":{"line":669,"column":24}},"249":{"start":{"line":670,"column":2},"end":{"line":676,"column":3}},"250":{"start":{"line":671,"column":4},"end":{"line":673,"column":5}},"251":{"start":{"line":672,"column":6},"end":{"line":672,"column":32}},"252":{"start":{"line":674,"column":4},"end":{"line":674,"column":58}},"253":{"start":{"line":675,"column":4},"end":{"line":675,"column":19}},"254":{"start":{"line":677,"column":2},"end":{"line":677,"column":71}},"255":{"start":{"line":678,"column":2},"end":{"line":678,"column":18}},"256":{"start":{"line":679,"column":2},"end":{"line":686,"column":3}},"257":{"start":{"line":680,"column":4},"end":{"line":682,"column":5}},"258":{"start":{"line":681,"column":6},"end":{"line":681,"column":32}},"259":{"start":{"line":683,"column":4},"end":{"line":683,"column":62}},"260":{"start":{"line":685,"column":4},"end":{"line":685,"column":42}},"261":{"start":{"line":700,"column":0},"end":{"line":700,"column":25}},"262":{"start":{"line":702,"column":0},"end":{"line":702,"column":26}},"263":{"start":{"line":704,"column":0},"end":{"line":704,"column":39}},"264":{"start":{"line":708,"column":0},"end":{"line":710,"column":2}},"265":{"start":{"line":709,"column":2},"end":{"line":709,"column":27}},"266":{"start":{"line":712,"column":0},"end":{"line":717,"column":2}},"267":{"start":{"line":713,"column":2},"end":{"line":715,"column":3}},"268":{"start":{"line":714,"column":4},"end":{"line":714,"column":30}},"269":{"start":{"line":716,"column":2},"end":{"line":716,"column":22}},"270":{"start":{"line":726,"column":0},"end":{"line":726,"column":27}},"271":{"start":{"line":728,"column":0},"end":{"line":728,"column":23}},"272":{"start":{"line":730,"column":0},"end":{"line":730,"column":57}},"273":{"start":{"line":747,"column":0},"end":{"line":759,"column":2}},"274":{"start":{"line":748,"column":2},"end":{"line":748,"column":29}},"275":{"start":{"line":750,"column":2},"end":{"line":750,"column":38}},"276":{"start":{"line":751,"column":2},"end":{"line":751,"column":73}},"277":{"start":{"line":752,"column":2},"end":{"line":752,"column":39}},"278":{"start":{"line":754,"column":2},"end":{"line":754,"column":45}},"279":{"start":{"line":755,"column":2},"end":{"line":755,"column":52}},"280":{"start":{"line":756,"column":2},"end":{"line":756,"column":32}},"281":{"start":{"line":758,"column":2},"end":{"line":758,"column":23}},"282":{"start":{"line":761,"column":0},"end":{"line":772,"column":2}},"283":{"start":{"line":762,"column":2},"end":{"line":765,"column":3}},"284":{"start":{"line":764,"column":4},"end":{"line":764,"column":30}},"285":{"start":{"line":766,"column":2},"end":{"line":766,"column":58}},"286":{"start":{"line":767,"column":2},"end":{"line":767,"column":51}},"287":{"start":{"line":768,"column":2},"end":{"line":771,"column":3}},"288":{"start":{"line":770,"column":4},"end":{"line":770,"column":35}},"289":{"start":{"line":781,"column":0},"end":{"line":781,"column":34}},"290":{"start":{"line":783,"column":0},"end":{"line":783,"column":30}},"291":{"start":{"line":785,"column":0},"end":{"line":785,"column":55}},"292":{"start":{"line":792,"column":0},"end":{"line":800,"column":2}},"293":{"start":{"line":793,"column":2},"end":{"line":793,"column":29}},"294":{"start":{"line":795,"column":2},"end":{"line":795,"column":38}},"295":{"start":{"line":796,"column":2},"end":{"line":796,"column":72}},"296":{"start":{"line":797,"column":2},"end":{"line":797,"column":39}},"297":{"start":{"line":799,"column":2},"end":{"line":799,"column":23}},"298":{"start":{"line":802,"column":0},"end":{"line":810,"column":2}},"299":{"start":{"line":803,"column":2},"end":{"line":805,"column":3}},"300":{"start":{"line":804,"column":4},"end":{"line":804,"column":30}},"301":{"start":{"line":806,"column":2},"end":{"line":806,"column":58}},"302":{"start":{"line":807,"column":2},"end":{"line":809,"column":3}},"303":{"start":{"line":808,"column":4},"end":{"line":808,"column":28}},"304":{"start":{"line":823,"column":0},"end":{"line":823,"column":33}},"305":{"start":{"line":825,"column":0},"end":{"line":825,"column":68}},"306":{"start":{"line":827,"column":0},"end":{"line":827,"column":58}},"307":{"start":{"line":829,"column":0},"end":{"line":831,"column":2}},"308":{"start":{"line":830,"column":2},"end":{"line":830,"column":27}},"309":{"start":{"line":833,"column":0},"end":{"line":835,"column":2}},"310":{"start":{"line":834,"column":2},"end":{"line":834,"column":22}},"311":{"start":{"line":844,"column":0},"end":{"line":844,"column":27}},"312":{"start":{"line":846,"column":0},"end":{"line":846,"column":23}},"313":{"start":{"line":871,"column":0},"end":{"line":872,"column":43}},"314":{"start":{"line":874,"column":0},"end":{"line":876,"column":1}},"315":{"start":{"line":875,"column":2},"end":{"line":875,"column":107}},"316":{"start":{"line":878,"column":0},"end":{"line":889,"column":1}},"317":{"start":{"line":879,"column":2},"end":{"line":879,"column":13}},"318":{"start":{"line":880,"column":2},"end":{"line":887,"column":3}},"319":{"start":{"line":881,"column":4},"end":{"line":886,"column":5}},"320":{"start":{"line":882,"column":6},"end":{"line":882,"column":15}},"321":{"start":{"line":883,"column":6},"end":{"line":883,"column":44}},"322":{"start":{"line":885,"column":6},"end":{"line":885,"column":16}},"323":{"start":{"line":888,"column":2},"end":{"line":888,"column":11}},"324":{"start":{"line":891,"column":0},"end":{"line":903,"column":2}},"325":{"start":{"line":892,"column":2},"end":{"line":892,"column":29}},"326":{"start":{"line":893,"column":2},"end":{"line":893,"column":47}},"327":{"start":{"line":894,"column":2},"end":{"line":894,"column":23}},"328":{"start":{"line":895,"column":2},"end":{"line":895,"column":50}},"329":{"start":{"line":897,"column":2},"end":{"line":897,"column":92}},"330":{"start":{"line":898,"column":2},"end":{"line":900,"column":3}},"331":{"start":{"line":899,"column":4},"end":{"line":899,"column":41}},"332":{"start":{"line":902,"column":2},"end":{"line":902,"column":48}},"333":{"start":{"line":905,"column":0},"end":{"line":918,"column":1}},"334":{"start":{"line":906,"column":2},"end":{"line":906,"column":16}},"335":{"start":{"line":907,"column":2},"end":{"line":907,"column":21}},"336":{"start":{"line":908,"column":2},"end":{"line":910,"column":3}},"337":{"start":{"line":909,"column":4},"end":{"line":909,"column":12}},"338":{"start":{"line":911,"column":2},"end":{"line":913,"column":3}},"339":{"start":{"line":912,"column":4},"end":{"line":912,"column":10}},"340":{"start":{"line":914,"column":2},"end":{"line":916,"column":3}},"341":{"start":{"line":915,"column":4},"end":{"line":915,"column":14}},"342":{"start":{"line":917,"column":2},"end":{"line":917,"column":33}},"343":{"start":{"line":920,"column":0},"end":{"line":945,"column":1}},"344":{"start":{"line":921,"column":2},"end":{"line":921,"column":14}},"345":{"start":{"line":922,"column":2},"end":{"line":922,"column":23}},"346":{"start":{"line":924,"column":2},"end":{"line":936,"column":3}},"347":{"start":{"line":925,"column":4},"end":{"line":928,"column":5}},"348":{"start":{"line":926,"column":6},"end":{"line":926,"column":27}},"349":{"start":{"line":927,"column":6},"end":{"line":927,"column":15}},"350":{"start":{"line":929,"column":4},"end":{"line":931,"column":5}},"351":{"start":{"line":930,"column":6},"end":{"line":930,"column":15}},"352":{"start":{"line":932,"column":4},"end":{"line":935,"column":5}},"353":{"start":{"line":933,"column":6},"end":{"line":933,"column":13}},"354":{"start":{"line":934,"column":6},"end":{"line":934,"column":12}},"355":{"start":{"line":938,"column":2},"end":{"line":940,"column":3}},"356":{"start":{"line":939,"column":4},"end":{"line":939,"column":43}},"357":{"start":{"line":942,"column":2},"end":{"line":942,"column":57}},"358":{"start":{"line":943,"column":2},"end":{"line":943,"column":59}},"359":{"start":{"line":944,"column":2},"end":{"line":944,"column":40}},"360":{"start":{"line":947,"column":0},"end":{"line":949,"column":1}},"361":{"start":{"line":948,"column":2},"end":{"line":948,"column":51}},"362":{"start":{"line":951,"column":0},"end":{"line":982,"column":1}},"363":{"start":{"line":952,"column":2},"end":{"line":952,"column":16}},"364":{"start":{"line":953,"column":2},"end":{"line":953,"column":23}},"365":{"start":{"line":954,"column":2},"end":{"line":954,"column":18}},"366":{"start":{"line":956,"column":2},"end":{"line":973,"column":3}},"367":{"start":{"line":957,"column":4},"end":{"line":960,"column":5}},"368":{"start":{"line":958,"column":6},"end":{"line":958,"column":27}},"369":{"start":{"line":959,"column":6},"end":{"line":959,"column":15}},"370":{"start":{"line":961,"column":4},"end":{"line":964,"column":5}},"371":{"start":{"line":963,"column":6},"end":{"line":963,"column":15}},"372":{"start":{"line":965,"column":4},"end":{"line":972,"column":5}},"373":{"start":{"line":966,"column":6},"end":{"line":966,"column":51}},"374":{"start":{"line":967,"column":6},"end":{"line":970,"column":7}},"375":{"start":{"line":968,"column":8},"end":{"line":968,"column":38}},"376":{"start":{"line":969,"column":8},"end":{"line":969,"column":30}},"377":{"start":{"line":971,"column":6},"end":{"line":971,"column":20}},"378":{"start":{"line":975,"column":2},"end":{"line":975,"column":44}},"379":{"start":{"line":976,"column":2},"end":{"line":979,"column":3}},"380":{"start":{"line":977,"column":4},"end":{"line":977,"column":34}},"381":{"start":{"line":978,"column":4},"end":{"line":978,"column":26}},"382":{"start":{"line":981,"column":2},"end":{"line":981,"column":16}},"383":{"start":{"line":984,"column":0},"end":{"line":1003,"column":1}},"384":{"start":{"line":985,"column":2},"end":{"line":985,"column":18}},"385":{"start":{"line":986,"column":2},"end":{"line":986,"column":21}},"386":{"start":{"line":987,"column":2},"end":{"line":987,"column":16}},"387":{"start":{"line":988,"column":2},"end":{"line":998,"column":3}},"388":{"start":{"line":989,"column":4},"end":{"line":997,"column":5}},"389":{"start":{"line":990,"column":6},"end":{"line":990,"column":38}},"390":{"start":{"line":991,"column":6},"end":{"line":991,"column":14}},"391":{"start":{"line":992,"column":6},"end":{"line":992,"column":22}},"392":{"start":{"line":993,"column":6},"end":{"line":993,"column":16}},"393":{"start":{"line":994,"column":6},"end":{"line":996,"column":7}},"394":{"start":{"line":995,"column":8},"end":{"line":995,"column":14}},"395":{"start":{"line":999,"column":2},"end":{"line":1001,"column":3}},"396":{"start":{"line":1000,"column":4},"end":{"line":1000,"column":38}},"397":{"start":{"line":1002,"column":2},"end":{"line":1002,"column":14}},"398":{"start":{"line":1005,"column":0},"end":{"line":1007,"column":1}},"399":{"start":{"line":1006,"column":2},"end":{"line":1006,"column":52}},"400":{"start":{"line":1009,"column":0},"end":{"line":1035,"column":1}},"401":{"start":{"line":1010,"column":2},"end":{"line":1010,"column":12}},"402":{"start":{"line":1011,"column":2},"end":{"line":1011,"column":13}},"403":{"start":{"line":1012,"column":2},"end":{"line":1033,"column":3}},"404":{"start":{"line":1013,"column":4},"end":{"line":1030,"column":5}},"405":{"start":{"line":1014,"column":6},"end":{"line":1014,"column":16}},"406":{"start":{"line":1016,"column":6},"end":{"line":1016,"column":10}},"407":{"start":{"line":1017,"column":6},"end":{"line":1017,"column":24}},"408":{"start":{"line":1018,"column":6},"end":{"line":1021,"column":7}},"409":{"start":{"line":1019,"column":8},"end":{"line":1019,"column":25}},"410":{"start":{"line":1020,"column":8},"end":{"line":1020,"column":12}},"411":{"start":{"line":1022,"column":6},"end":{"line":1024,"column":7}},"412":{"start":{"line":1023,"column":8},"end":{"line":1023,"column":25}},"413":{"start":{"line":1025,"column":6},"end":{"line":1029,"column":7}},"414":{"start":{"line":1026,"column":8},"end":{"line":1026,"column":52}},"415":{"start":{"line":1028,"column":8},"end":{"line":1028,"column":17}},"416":{"start":{"line":1032,"column":4},"end":{"line":1032,"column":8}},"417":{"start":{"line":1034,"column":2},"end":{"line":1034,"column":11}},"418":{"start":{"line":1037,"column":0},"end":{"line":1070,"column":2}},"419":{"start":{"line":1038,"column":2},"end":{"line":1040,"column":3}},"420":{"start":{"line":1039,"column":4},"end":{"line":1039,"column":30}},"421":{"start":{"line":1041,"column":2},"end":{"line":1041,"column":44}},"422":{"start":{"line":1042,"column":2},"end":{"line":1044,"column":3}},"423":{"start":{"line":1043,"column":4},"end":{"line":1043,"column":30}},"424":{"start":{"line":1045,"column":2},"end":{"line":1045,"column":63}},"425":{"start":{"line":1046,"column":2},"end":{"line":1046,"column":62}},"426":{"start":{"line":1047,"column":2},"end":{"line":1047,"column":72}},"427":{"start":{"line":1048,"column":2},"end":{"line":1050,"column":3}},"428":{"start":{"line":1051,"column":2},"end":{"line":1054,"column":3}},"429":{"start":{"line":1053,"column":4},"end":{"line":1053,"column":11}},"430":{"start":{"line":1056,"column":2},"end":{"line":1056,"column":31}},"431":{"start":{"line":1057,"column":2},"end":{"line":1057,"column":23}},"432":{"start":{"line":1058,"column":2},"end":{"line":1069,"column":3}},"433":{"start":{"line":1059,"column":4},"end":{"line":1067,"column":5}},"434":{"start":{"line":1061,"column":6},"end":{"line":1061,"column":56}},"435":{"start":{"line":1062,"column":6},"end":{"line":1062,"column":59}},"436":{"start":{"line":1063,"column":6},"end":{"line":1063,"column":31}},"437":{"start":{"line":1064,"column":6},"end":{"line":1064,"column":45}},"438":{"start":{"line":1065,"column":11},"end":{"line":1067,"column":5}},"439":{"start":{"line":1066,"column":6},"end":{"line":1066,"column":57}},"440":{"start":{"line":1080,"column":0},"end":{"line":1080,"column":28}},"441":{"start":{"line":1082,"column":0},"end":{"line":1082,"column":24}},"442":{"start":{"line":1084,"column":0},"end":{"line":1084,"column":36}},"443":{"start":{"line":1086,"column":0},"end":{"line":1087,"column":2}},"444":{"start":{"line":1089,"column":0},"end":{"line":1090,"column":2}},"445":{"start":{"line":1095,"column":0},"end":{"line":1110,"column":2}},"446":{"start":{"line":1117,"column":0},"end":{"line":1117,"column":25}},"447":{"start":{"line":1121,"column":0},"end":{"line":1121,"column":21}},"448":{"start":{"line":1122,"column":0},"end":{"line":1160,"column":2}},"449":{"start":{"line":1123,"column":2},"end":{"line":1125,"column":3}},"450":{"start":{"line":1124,"column":4},"end":{"line":1124,"column":16}},"451":{"start":{"line":1127,"column":2},"end":{"line":1129,"column":3}},"452":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":20}},"453":{"start":{"line":1131,"column":2},"end":{"line":1131,"column":26}},"454":{"start":{"line":1132,"column":2},"end":{"line":1132,"column":20}},"455":{"start":{"line":1134,"column":2},"end":{"line":1134,"column":34}},"456":{"start":{"line":1135,"column":2},"end":{"line":1137,"column":5}},"457":{"start":{"line":1136,"column":4},"end":{"line":1136,"column":33}},"458":{"start":{"line":1139,"column":2},"end":{"line":1149,"column":3}},"459":{"start":{"line":1140,"column":4},"end":{"line":1144,"column":5}},"460":{"start":{"line":1141,"column":6},"end":{"line":1141,"column":70}},"461":{"start":{"line":1143,"column":6},"end":{"line":1143,"column":49}},"462":{"start":{"line":1146,"column":4},"end":{"line":1148,"column":5}},"463":{"start":{"line":1147,"column":6},"end":{"line":1147,"column":42}},"464":{"start":{"line":1151,"column":2},"end":{"line":1153,"column":3}},"465":{"start":{"line":1152,"column":4},"end":{"line":1152,"column":68}},"466":{"start":{"line":1155,"column":2},"end":{"line":1157,"column":5}},"467":{"start":{"line":1156,"column":4},"end":{"line":1156,"column":38}},"468":{"start":{"line":1159,"column":2},"end":{"line":1159,"column":18}},"469":{"start":{"line":1163,"column":0},"end":{"line":1165,"column":2}},"470":{"start":{"line":1164,"column":2},"end":{"line":1164,"column":30}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"2":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"3":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"4":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"5":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":9},"end":{"line":113,"column":45}},{"start":{"line":113,"column":50},"end":{"line":113,"column":72}}]},"6":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"7":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"8":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":9},"end":{"line":128,"column":45}},{"start":{"line":128,"column":50},"end":{"line":128,"column":73}}]},"9":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":6}},{"start":{"line":129,"column":6},"end":{"line":129,"column":6}}]},"10":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":8}},{"start":{"line":131,"column":8},"end":{"line":131,"column":8}}]},"11":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"12":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":10},"end":{"line":229,"column":27}},{"start":{"line":229,"column":33},"end":{"line":229,"column":58}}]},"13":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":29},"end":{"line":230,"column":41}},{"start":{"line":230,"column":45},"end":{"line":230,"column":46}}]},"14":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":2},"end":{"line":238,"column":2}},{"start":{"line":238,"column":2},"end":{"line":238,"column":2}}]},"15":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"16":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":2},"end":{"line":303,"column":2}},{"start":{"line":303,"column":2},"end":{"line":303,"column":2}}]},"17":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":304,"column":4}},{"start":{"line":304,"column":4},"end":{"line":304,"column":4}}]},"18":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"19":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":313,"column":4}},{"start":{"line":313,"column":4},"end":{"line":313,"column":4}}]},"20":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":2},"end":{"line":365,"column":2}},{"start":{"line":365,"column":2},"end":{"line":365,"column":2}}]},"21":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":12},"end":{"line":367,"column":41}},{"start":{"line":367,"column":47},"end":{"line":367,"column":85}}]},"22":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":4},"end":{"line":369,"column":4}},{"start":{"line":369,"column":4},"end":{"line":369,"column":4}}]},"23":{"line":372,"type":"binary-expr","locations":[{"start":{"line":372,"column":12},"end":{"line":372,"column":37}},{"start":{"line":372,"column":43},"end":{"line":372,"column":71}}]},"24":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":2},"end":{"line":381,"column":2}},{"start":{"line":381,"column":2},"end":{"line":381,"column":2}}]},"25":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":2},"end":{"line":384,"column":2}},{"start":{"line":384,"column":2},"end":{"line":384,"column":2}}]},"26":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":2},"end":{"line":387,"column":2}},{"start":{"line":387,"column":2},"end":{"line":387,"column":2}}]},"27":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":2},"end":{"line":394,"column":2}},{"start":{"line":394,"column":2},"end":{"line":394,"column":2}}]},"28":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":2},"end":{"line":399,"column":2}},{"start":{"line":399,"column":2},"end":{"line":399,"column":2}}]},"29":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":2},"end":{"line":410,"column":2}},{"start":{"line":410,"column":2},"end":{"line":410,"column":2}}]},"30":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":4}},{"start":{"line":411,"column":4},"end":{"line":411,"column":4}}]},"31":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":10},"end":{"line":446,"column":39}},{"start":{"line":446,"column":45},"end":{"line":446,"column":83}}]},"32":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":2},"end":{"line":448,"column":2}},{"start":{"line":448,"column":2},"end":{"line":448,"column":2}}]},"33":{"line":451,"type":"binary-expr","locations":[{"start":{"line":451,"column":10},"end":{"line":451,"column":35}},{"start":{"line":451,"column":41},"end":{"line":451,"column":69}}]},"34":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":2},"end":{"line":458,"column":2}},{"start":{"line":458,"column":2},"end":{"line":458,"column":2}}]},"35":{"line":495,"type":"binary-expr","locations":[{"start":{"line":495,"column":10},"end":{"line":495,"column":19}},{"start":{"line":495,"column":25},"end":{"line":495,"column":43}}]},"36":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":2},"end":{"line":501,"column":2}},{"start":{"line":501,"column":2},"end":{"line":501,"column":2}}]},"37":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":2},"end":{"line":506,"column":2}},{"start":{"line":506,"column":2},"end":{"line":506,"column":2}}]},"38":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":4},"end":{"line":550,"column":4}},{"start":{"line":550,"column":4},"end":{"line":550,"column":4}}]},"39":{"line":553,"type":"cond-expr","locations":[{"start":{"line":553,"column":52},"end":{"line":553,"column":66}},{"start":{"line":553,"column":69},"end":{"line":553,"column":74}}]},"40":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":2},"end":{"line":573,"column":2}},{"start":{"line":573,"column":2},"end":{"line":573,"column":2}}]},"41":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":5},"end":{"line":573,"column":20}},{"start":{"line":573,"column":24},"end":{"line":573,"column":42}}]},"42":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":2},"end":{"line":577,"column":2}},{"start":{"line":577,"column":2},"end":{"line":577,"column":2}}]},"43":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":4},"end":{"line":583,"column":4}},{"start":{"line":583,"column":4},"end":{"line":583,"column":4}}]},"44":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":6},"end":{"line":584,"column":6}},{"start":{"line":584,"column":6},"end":{"line":584,"column":6}}]},"45":{"line":584,"type":"binary-expr","locations":[{"start":{"line":584,"column":10},"end":{"line":584,"column":26}},{"start":{"line":584,"column":30},"end":{"line":584,"column":68}}]},"46":{"line":588,"type":"cond-expr","locations":[{"start":{"line":588,"column":52},"end":{"line":588,"column":72}},{"start":{"line":588,"column":75},"end":{"line":588,"column":80}}]},"47":{"line":657,"type":"binary-expr","locations":[{"start":{"line":657,"column":10},"end":{"line":657,"column":30}},{"start":{"line":657,"column":36},"end":{"line":657,"column":65}}]},"48":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":2},"end":{"line":665,"column":2}},{"start":{"line":665,"column":2},"end":{"line":665,"column":2}}]},"49":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":2},"end":{"line":670,"column":2}},{"start":{"line":670,"column":2},"end":{"line":670,"column":2}}]},"50":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":4},"end":{"line":671,"column":4}},{"start":{"line":671,"column":4},"end":{"line":671,"column":4}}]},"51":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":2},"end":{"line":679,"column":2}},{"start":{"line":679,"column":2},"end":{"line":679,"column":2}}]},"52":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":4},"end":{"line":680,"column":4}},{"start":{"line":680,"column":4},"end":{"line":680,"column":4}}]},"53":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":2},"end":{"line":713,"column":2}},{"start":{"line":713,"column":2},"end":{"line":713,"column":2}}]},"54":{"line":751,"type":"binary-expr","locations":[{"start":{"line":751,"column":10},"end":{"line":751,"column":26}},{"start":{"line":751,"column":32},"end":{"line":751,"column":57}}]},"55":{"line":755,"type":"binary-expr","locations":[{"start":{"line":755,"column":10},"end":{"line":755,"column":19}},{"start":{"line":755,"column":25},"end":{"line":755,"column":43}}]},"56":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":2},"end":{"line":762,"column":2}},{"start":{"line":762,"column":2},"end":{"line":762,"column":2}}]},"57":{"line":768,"type":"if","locations":[{"start":{"line":768,"column":2},"end":{"line":768,"column":2}},{"start":{"line":768,"column":2},"end":{"line":768,"column":2}}]},"58":{"line":796,"type":"binary-expr","locations":[{"start":{"line":796,"column":10},"end":{"line":796,"column":25}},{"start":{"line":796,"column":31},"end":{"line":796,"column":56}}]},"59":{"line":803,"type":"if","locations":[{"start":{"line":803,"column":2},"end":{"line":803,"column":2}},{"start":{"line":803,"column":2},"end":{"line":803,"column":2}}]},"60":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":2},"end":{"line":807,"column":2}},{"start":{"line":807,"column":2},"end":{"line":807,"column":2}}]},"61":{"line":881,"type":"if","locations":[{"start":{"line":881,"column":4},"end":{"line":881,"column":4}},{"start":{"line":881,"column":4},"end":{"line":881,"column":4}}]},"62":{"line":898,"type":"if","locations":[{"start":{"line":898,"column":2},"end":{"line":898,"column":2}},{"start":{"line":898,"column":2},"end":{"line":898,"column":2}}]},"63":{"line":908,"type":"binary-expr","locations":[{"start":{"line":908,"column":10},"end":{"line":908,"column":21}},{"start":{"line":908,"column":27},"end":{"line":908,"column":43}}]},"64":{"line":911,"type":"binary-expr","locations":[{"start":{"line":911,"column":10},"end":{"line":911,"column":21}},{"start":{"line":911,"column":27},"end":{"line":911,"column":45}}]},"65":{"line":914,"type":"if","locations":[{"start":{"line":914,"column":2},"end":{"line":914,"column":2}},{"start":{"line":914,"column":2},"end":{"line":914,"column":2}}]},"66":{"line":925,"type":"if","locations":[{"start":{"line":925,"column":4},"end":{"line":925,"column":4}},{"start":{"line":925,"column":4},"end":{"line":925,"column":4}}]},"67":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":4},"end":{"line":929,"column":4}},{"start":{"line":929,"column":4},"end":{"line":929,"column":4}}]},"68":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":4},"end":{"line":932,"column":4}},{"start":{"line":932,"column":4},"end":{"line":932,"column":4}}]},"69":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":2},"end":{"line":938,"column":2}},{"start":{"line":938,"column":2},"end":{"line":938,"column":2}}]},"70":{"line":957,"type":"if","locations":[{"start":{"line":957,"column":4},"end":{"line":957,"column":4}},{"start":{"line":957,"column":4},"end":{"line":957,"column":4}}]},"71":{"line":961,"type":"if","locations":[{"start":{"line":961,"column":4},"end":{"line":961,"column":4}},{"start":{"line":961,"column":4},"end":{"line":961,"column":4}}]},"72":{"line":965,"type":"if","locations":[{"start":{"line":965,"column":4},"end":{"line":965,"column":4}},{"start":{"line":965,"column":4},"end":{"line":965,"column":4}}]},"73":{"line":967,"type":"if","locations":[{"start":{"line":967,"column":6},"end":{"line":967,"column":6}},{"start":{"line":967,"column":6},"end":{"line":967,"column":6}}]},"74":{"line":976,"type":"if","locations":[{"start":{"line":976,"column":2},"end":{"line":976,"column":2}},{"start":{"line":976,"column":2},"end":{"line":976,"column":2}}]},"75":{"line":989,"type":"if","locations":[{"start":{"line":989,"column":4},"end":{"line":989,"column":4}},{"start":{"line":989,"column":4},"end":{"line":989,"column":4}}]},"76":{"line":994,"type":"if","locations":[{"start":{"line":994,"column":6},"end":{"line":994,"column":6}},{"start":{"line":994,"column":6},"end":{"line":994,"column":6}}]},"77":{"line":999,"type":"if","locations":[{"start":{"line":999,"column":2},"end":{"line":999,"column":2}},{"start":{"line":999,"column":2},"end":{"line":999,"column":2}}]},"78":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":4},"end":{"line":1013,"column":4}},{"start":{"line":1013,"column":4},"end":{"line":1013,"column":4}}]},"79":{"line":1013,"type":"binary-expr","locations":[{"start":{"line":1013,"column":8},"end":{"line":1013,"column":19}},{"start":{"line":1013,"column":23},"end":{"line":1013,"column":39}},{"start":{"line":1013,"column":43},"end":{"line":1013,"column":59}}]},"80":{"line":1018,"type":"if","locations":[{"start":{"line":1018,"column":6},"end":{"line":1018,"column":6}},{"start":{"line":1018,"column":6},"end":{"line":1018,"column":6}}]},"81":{"line":1022,"type":"if","locations":[{"start":{"line":1022,"column":6},"end":{"line":1022,"column":6}},{"start":{"line":1022,"column":6},"end":{"line":1022,"column":6}}]},"82":{"line":1025,"type":"if","locations":[{"start":{"line":1025,"column":6},"end":{"line":1025,"column":6}},{"start":{"line":1025,"column":6},"end":{"line":1025,"column":6}}]},"83":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":2},"end":{"line":1038,"column":2}},{"start":{"line":1038,"column":2},"end":{"line":1038,"column":2}}]},"84":{"line":1042,"type":"if","locations":[{"start":{"line":1042,"column":2},"end":{"line":1042,"column":2}},{"start":{"line":1042,"column":2},"end":{"line":1042,"column":2}}]},"85":{"line":1048,"type":"if","locations":[{"start":{"line":1048,"column":2},"end":{"line":1048,"column":2}},{"start":{"line":1048,"column":2},"end":{"line":1048,"column":2}}]},"86":{"line":1051,"type":"if","locations":[{"start":{"line":1051,"column":2},"end":{"line":1051,"column":2}},{"start":{"line":1051,"column":2},"end":{"line":1051,"column":2}}]},"87":{"line":1059,"type":"if","locations":[{"start":{"line":1059,"column":4},"end":{"line":1059,"column":4}},{"start":{"line":1059,"column":4},"end":{"line":1059,"column":4}}]},"88":{"line":1065,"type":"if","locations":[{"start":{"line":1065,"column":11},"end":{"line":1065,"column":11}},{"start":{"line":1065,"column":11},"end":{"line":1065,"column":11}}]},"89":{"line":1123,"type":"if","locations":[{"start":{"line":1123,"column":2},"end":{"line":1123,"column":2}},{"start":{"line":1123,"column":2},"end":{"line":1123,"column":2}}]},"90":{"line":1127,"type":"if","locations":[{"start":{"line":1127,"column":2},"end":{"line":1127,"column":2}},{"start":{"line":1127,"column":2},"end":{"line":1127,"column":2}}]},"91":{"line":1139,"type":"if","locations":[{"start":{"line":1139,"column":2},"end":{"line":1139,"column":2}},{"start":{"line":1139,"column":2},"end":{"line":1139,"column":2}}]},"92":{"line":1140,"type":"if","locations":[{"start":{"line":1140,"column":4},"end":{"line":1140,"column":4}},{"start":{"line":1140,"column":4},"end":{"line":1140,"column":4}}]},"93":{"line":1146,"type":"if","locations":[{"start":{"line":1146,"column":4},"end":{"line":1146,"column":4}},{"start":{"line":1146,"column":4},"end":{"line":1146,"column":4}}]},"94":{"line":1151,"type":"if","locations":[{"start":{"line":1151,"column":2},"end":{"line":1151,"column":2}},{"start":{"line":1151,"column":2},"end":{"line":1151,"column":2}}]},"95":{"line":1155,"type":"binary-expr","locations":[{"start":{"line":1155,"column":31},"end":{"line":1155,"column":42}},{"start":{"line":1155,"column":46},"end":{"line":1155,"column":48}}]}},"code":["// The framer consists of two [Transform Stream][1] subclasses that operate in [object mode][2]:","// the Serializer and the Deserializer","// [1]: https://nodejs.org/api/stream.html#stream_class_stream_transform","// [2]: https://nodejs.org/api/stream.html#stream_new_stream_readable_options","var assert = require('assert');","","var Transform = require('stream').Transform;","","exports.Serializer = Serializer;","exports.Deserializer = Deserializer;","","var logData = Boolean(process.env.HTTP2_LOG_DATA);","","var MAX_PAYLOAD_SIZE = 16384;","var WINDOW_UPDATE_PAYLOAD_SIZE = 4;","","// Serializer","// ----------","//","//     Frame Objects","//     * * * * * * * --+---------------------------","//                     |                          |","//                     v                          v           Buffers","//      [] -----> Payload Ser. --[buffers]--> Header Ser. --> * * * *","//     empty      adds payload                adds header","//     array        buffers                     buffer","","function Serializer(log) {","  this._log = log.child({ component: 'serializer' });","  Transform.call(this, { objectMode: true });","}","Serializer.prototype = Object.create(Transform.prototype, { constructor: { value: Serializer } });","","// When there's an incoming frame object, it first generates the frame type specific part of the","// frame (payload), and then then adds the header part which holds fields that are common to all","// frame types (like the length of the payload).","Serializer.prototype._transform = function _transform(frame, encoding, done) {","  this._log.trace({ frame: frame }, 'Outgoing frame');","","  assert(frame.type in Serializer, 'Unknown frame type: ' + frame.type);","","  var buffers = [];","  Serializer[frame.type](frame, buffers);","  var length = Serializer.commonHeader(frame, buffers);","","  assert(length <= MAX_PAYLOAD_SIZE, 'Frame too large!');","","  for (var i = 0; i < buffers.length; i++) {","    if (logData) {","      this._log.trace({ data: buffers[i] }, 'Outgoing data');","    }","    this.push(buffers[i]);","  }","","  done();","};","","// Deserializer","// ------------","//","//     Buffers","//     * * * * --------+-------------------------","//                     |                        |","//                     v                        v           Frame Objects","//      {} -----> Header Des. --{frame}--> Payload Des. --> * * * * * * *","//     empty      adds parsed              adds parsed","//     object  header properties        payload properties","","function Deserializer(log, role) {","  this._role = role;","  this._log = log.child({ component: 'deserializer' });","  Transform.call(this, { objectMode: true });","  this._next(COMMON_HEADER_SIZE);","}","Deserializer.prototype = Object.create(Transform.prototype, { constructor: { value: Deserializer } });","","// The Deserializer is stateful, and it's two main alternating states are: *waiting for header* and","// *waiting for payload*. The state is stored in the boolean property `_waitingForHeader`.","//","// When entering a new state, a `_buffer` is created that will hold the accumulated data (header or","// payload). The `_cursor` is used to track the progress.","Deserializer.prototype._next = function(size) {","  this._cursor = 0;","  this._buffer = new Buffer(size);","  this._waitingForHeader = !this._waitingForHeader;","  if (this._waitingForHeader) {","    this._frame = {};","  }","};","","// Parsing an incoming buffer is an iterative process because it can hold multiple frames if it's","// large enough. A `cursor` is used to track the progress in parsing the incoming `chunk`.","Deserializer.prototype._transform = function _transform(chunk, encoding, done) {","  var cursor = 0;","","  if (logData) {","    this._log.trace({ data: chunk }, 'Incoming data');","  }","","  while(cursor < chunk.length) {","    // The content of an incoming buffer is first copied to `_buffer`. If it can't hold the full","    // chunk, then only a part of it is copied.","    var toCopy = Math.min(chunk.length - cursor, this._buffer.length - this._cursor);","    chunk.copy(this._buffer, this._cursor, cursor, cursor + toCopy);","    this._cursor += toCopy;","    cursor += toCopy;","","    // When `_buffer` is full, it's content gets parsed either as header or payload depending on","    // the actual state.","","    // If it's header then the parsed data is stored in a temporary variable and then the","    // deserializer waits for the specified length payload.","    if ((this._cursor === this._buffer.length) && this._waitingForHeader) {","      var payloadSize = Deserializer.commonHeader(this._buffer, this._frame);","      if (payloadSize <= MAX_PAYLOAD_SIZE) {","        this._next(payloadSize);","      } else {","        this.emit('error', 'FRAME_SIZE_ERROR');","        return;","      }","    }","","    // If it's payload then the the frame object is finalized and then gets pushed out.","    // Unknown frame types are ignored.","    //","    // Note: If we just finished the parsing of a header and the payload length is 0, this branch","    // will also run.","    if ((this._cursor === this._buffer.length) && !this._waitingForHeader) {","      if (this._frame.type) {","        var error = Deserializer[this._frame.type](this._buffer, this._frame, this._role);","        if (error) {","          this._log.error('Incoming frame parsing error: ' + error);","          this.emit('error', error);","        } else {","          this._log.trace({ frame: this._frame }, 'Incoming frame');","          this.push(this._frame);","        }","      } else {","        this._log.error('Unknown type incoming frame');","        // Ignore it other than logging","      }","      this._next(COMMON_HEADER_SIZE);","    }","  }","","  done();","};","","// [Frame Header](https://tools.ietf.org/html/rfc7540#section-4.1)","// --------------------------------------------------------------","//","// HTTP/2 frames share a common base format consisting of a 9-byte header followed by 0 to 2^24 - 1","// bytes of data.","//","// Additional size limits can be set by specific application uses. HTTP limits the frame size to","// 16,384 octets by default, though this can be increased by a receiver.","//","//      0                   1                   2                   3","//      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1","//     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","//     |                 Length (24)                   |","//     +---------------+---------------+---------------+","//     |   Type (8)    |   Flags (8)   |","//     +-+-----------------------------+---------------+---------------+","//     |R|                 Stream Identifier (31)                      |","//     +-+-------------------------------------------------------------+","//     |                     Frame Data (0...)                       ...","//     +---------------------------------------------------------------+","//","// The fields of the frame header are defined as:","//","// * Length:","//   The length of the frame data expressed as an unsigned 24-bit integer. The 9 bytes of the frame","//   header are not included in this value.","//","// * Type:","//   The 8-bit type of the frame. The frame type determines how the remainder of the frame header","//   and data are interpreted. Implementations MUST ignore unsupported and unrecognized frame types.","//","// * Flags:","//   An 8-bit field reserved for frame-type specific boolean flags.","//","//   Flags are assigned semantics specific to the indicated frame type. Flags that have no defined","//   semantics for a particular frame type MUST be ignored, and MUST be left unset (0) when sending.","//","// * R:","//   A reserved 1-bit field. The semantics of this bit are undefined and the bit MUST remain unset","//   (0) when sending and MUST be ignored when receiving.","//","// * Stream Identifier:","//   A 31-bit stream identifier. The value 0 is reserved for frames that are associated with the","//   connection as a whole as opposed to an individual stream.","//","// The structure and content of the remaining frame data is dependent entirely on the frame type.","","var COMMON_HEADER_SIZE = 9;","","var frameTypes = [];","","var frameFlags = {};","","var genericAttributes = ['type', 'flags', 'stream'];","","var typeSpecificAttributes = {};","","Serializer.commonHeader = function writeCommonHeader(frame, buffers) {","  var headerBuffer = new Buffer(COMMON_HEADER_SIZE);","","  var size = 0;","  for (var i = 0; i < buffers.length; i++) {","    size += buffers[i].length;","  }","  headerBuffer.writeUInt8(0, 0);","  headerBuffer.writeUInt16BE(size, 1);","","  var typeId = frameTypes.indexOf(frame.type);  // If we are here then the type is valid for sure","  headerBuffer.writeUInt8(typeId, 3);","","  var flagByte = 0;","  for (var flag in frame.flags) {","    var position = frameFlags[frame.type].indexOf(flag);","    assert(position !== -1, 'Unknown flag for frame type ' + frame.type + ': ' + flag);","    if (frame.flags[flag]) {","      flagByte |= (1 << position);","    }","  }","  headerBuffer.writeUInt8(flagByte, 4);","","  assert((0 <= frame.stream) && (frame.stream < 0x7fffffff), frame.stream);","  headerBuffer.writeUInt32BE(frame.stream || 0, 5);","","  buffers.unshift(headerBuffer);","","  return size;","};","","Deserializer.commonHeader = function readCommonHeader(buffer, frame) {","  if (buffer.length < 9) {","    return 'FRAME_SIZE_ERROR';","  }","","  var totallyWastedByte = buffer.readUInt8(0);","  var length = buffer.readUInt16BE(1);","  // We do this just for sanity checking later on, to make sure no one sent us a","  // frame that's super large.","  length += totallyWastedByte << 16;","","  frame.type = frameTypes[buffer.readUInt8(3)];","  if (!frame.type) {","    // We are required to ignore unknown frame types","    return length;","  }","","  frame.flags = {};","  var flagByte = buffer.readUInt8(4);","  var definedFlags = frameFlags[frame.type];","  for (var i = 0; i < definedFlags.length; i++) {","    frame.flags[definedFlags[i]] = Boolean(flagByte & (1 << i));","  }","","  frame.stream = buffer.readUInt32BE(5) & 0x7fffffff;","","  return length;","};","","// Frame types","// ===========","","// Every frame type is registered in the following places:","//","// * `frameTypes`: a register of frame type codes (used by `commonHeader()`)","// * `frameFlags`: a register of valid flags for frame types (used by `commonHeader()`)","// * `typeSpecificAttributes`: a register of frame specific frame object attributes (used by","//   logging code and also serves as documentation for frame objects)","","// [DATA Frames](https://tools.ietf.org/html/rfc7540#section-6.1)","// ------------------------------------------------------------","//","// DATA frames (type=0x0) convey arbitrary, variable-length sequences of octets associated with a","// stream.","//","// The DATA frame defines the following flags:","//","// * END_STREAM (0x1):","//   Bit 1 being set indicates that this frame is the last that the endpoint will send for the","//   identified stream.","// * PADDED (0x08):","//   Bit 4 being set indicates that the Pad Length field is present.","","frameTypes[0x0] = 'DATA';","","frameFlags.DATA = ['END_STREAM', 'RESERVED2', 'RESERVED4', 'PADDED'];","","typeSpecificAttributes.DATA = ['data'];","","Serializer.DATA = function writeData(frame, buffers) {","  buffers.push(frame.data);","};","","Deserializer.DATA = function readData(buffer, frame) {","  var dataOffset = 0;","  var paddingLength = 0;","  if (frame.flags.PADDED) {","    if (buffer.length < 1) {","      // We must have at least one byte for padding control, but we don't. Bad peer!","      return 'FRAME_SIZE_ERROR';","    }","    paddingLength = (buffer.readUInt8(dataOffset) & 0xff);","    dataOffset = 1;","  }","","  if (paddingLength) {","    if (paddingLength >= (buffer.length - 1)) {","      // We don't have enough room for the padding advertised - bad peer!","      return 'FRAME_SIZE_ERROR';","    }","    frame.data = buffer.slice(dataOffset, -1 * paddingLength);","  } else {","    frame.data = buffer.slice(dataOffset);","  }","};","","// [HEADERS](https://tools.ietf.org/html/rfc7540#section-6.2)","// --------------------------------------------------------------","//","// The HEADERS frame (type=0x1) allows the sender to create a stream.","//","// The HEADERS frame defines the following flags:","//","// * END_STREAM (0x1):","//   Bit 1 being set indicates that this frame is the last that the endpoint will send for the","//   identified stream.","// * END_HEADERS (0x4):","//   The END_HEADERS bit indicates that this frame contains the entire payload necessary to provide","//   a complete set of headers.","// * PADDED (0x08):","//   Bit 4 being set indicates that the Pad Length field is present.","// * PRIORITY (0x20):","//   Bit 6 being set indicates that the Exlusive Flag (E), Stream Dependency, and Weight fields are","//   present.","","frameTypes[0x1] = 'HEADERS';","","frameFlags.HEADERS = ['END_STREAM', 'RESERVED2', 'END_HEADERS', 'PADDED', 'RESERVED5', 'PRIORITY'];","","typeSpecificAttributes.HEADERS = ['priorityDependency', 'priorityWeight', 'exclusiveDependency', 'headers', 'data'];","","//      0                   1                   2                   3","//      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1","//     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","//     |Pad Length? (8)|","//     +-+-------------+---------------+-------------------------------+","//     |E|                 Stream Dependency? (31)                     |","//     +-+-------------+-----------------------------------------------+","//     |  Weight? (8)  |","//     +-+-------------+-----------------------------------------------+","//     |                   Header Block Fragment (*)                 ...","//     +---------------------------------------------------------------+","//     |                           Padding (*)                       ...","//     +---------------------------------------------------------------+","//","// The payload of a HEADERS frame contains a Headers Block","","Serializer.HEADERS = function writeHeadersPriority(frame, buffers) {","  if (frame.flags.PRIORITY) {","    var buffer = new Buffer(5);","    assert((0 <= frame.priorityDependency) && (frame.priorityDependency <= 0x7fffffff), frame.priorityDependency);","    buffer.writeUInt32BE(frame.priorityDependency, 0);","    if (frame.exclusiveDependency) {","      buffer[0] |= 0x80;","    }","    assert((0 <= frame.priorityWeight) && (frame.priorityWeight <= 0xff), frame.priorityWeight);","    buffer.writeUInt8(frame.priorityWeight, 4);","    buffers.push(buffer);","  }","  buffers.push(frame.data);","};","","Deserializer.HEADERS = function readHeadersPriority(buffer, frame) {","  var minFrameLength = 0;","  if (frame.flags.PADDED) {","    minFrameLength += 1;","  }","  if (frame.flags.PRIORITY) {","    minFrameLength += 5;","  }","  if (buffer.length < minFrameLength) {","    // Peer didn't send enough data - bad peer!","    return 'FRAME_SIZE_ERROR';","  }","","  var dataOffset = 0;","  var paddingLength = 0;","  if (frame.flags.PADDED) {","    paddingLength = (buffer.readUInt8(dataOffset) & 0xff);","    dataOffset = 1;","  }","","  if (frame.flags.PRIORITY) {","    var dependencyData = new Buffer(4);","    buffer.copy(dependencyData, 0, dataOffset, dataOffset + 4);","    dataOffset += 4;","    frame.exclusiveDependency = !!(dependencyData[0] & 0x80);","    dependencyData[0] &= 0x7f;","    frame.priorityDependency = dependencyData.readUInt32BE(0);","    frame.priorityWeight = buffer.readUInt8(dataOffset);","    dataOffset += 1;","  }","","  if (paddingLength) {","    if ((buffer.length - dataOffset) < paddingLength) {","      // Not enough data left to satisfy the advertised padding - bad peer!","      return 'FRAME_SIZE_ERROR';","    }","    frame.data = buffer.slice(dataOffset, -1 * paddingLength);","  } else {","    frame.data = buffer.slice(dataOffset);","  }","};","","// [PRIORITY](https://tools.ietf.org/html/rfc7540#section-6.3)","// -------------------------------------------------------","//","// The PRIORITY frame (type=0x2) specifies the sender-advised priority of a stream.","//","// The PRIORITY frame does not define any flags.","","frameTypes[0x2] = 'PRIORITY';","","frameFlags.PRIORITY = [];","","typeSpecificAttributes.PRIORITY = ['priorityDependency', 'priorityWeight', 'exclusiveDependency'];","","//      0                   1                   2                   3","//      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1","//     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","//     |E|                 Stream Dependency? (31)                     |","//     +-+-------------+-----------------------------------------------+","//     |  Weight? (8)  |","//     +-+-------------+","//","// The payload of a PRIORITY frame contains an exclusive bit, a 31-bit dependency, and an 8-bit weight","","Serializer.PRIORITY = function writePriority(frame, buffers) {","  var buffer = new Buffer(5);","  assert((0 <= frame.priorityDependency) && (frame.priorityDependency <= 0x7fffffff), frame.priorityDependency);","  buffer.writeUInt32BE(frame.priorityDependency, 0);","  if (frame.exclusiveDependency) {","    buffer[0] |= 0x80;","  }","  assert((0 <= frame.priorityWeight) && (frame.priorityWeight <= 0xff), frame.priorityWeight);","  buffer.writeUInt8(frame.priorityWeight, 4);","","  buffers.push(buffer);","};","","Deserializer.PRIORITY = function readPriority(buffer, frame) {","  if (buffer.length < 5) {","    // PRIORITY frames are 5 bytes long. Bad peer!","    return 'FRAME_SIZE_ERROR';","  }","  var dependencyData = new Buffer(4);","  buffer.copy(dependencyData, 0, 0, 4);","  frame.exclusiveDependency = !!(dependencyData[0] & 0x80);","  dependencyData[0] &= 0x7f;","  frame.priorityDependency = dependencyData.readUInt32BE(0);","  frame.priorityWeight = buffer.readUInt8(4);","};","","// [RST_STREAM](https://tools.ietf.org/html/rfc7540#section-6.4)","// -----------------------------------------------------------","//","// The RST_STREAM frame (type=0x3) allows for abnormal termination of a stream.","//","// No type-flags are defined.","","frameTypes[0x3] = 'RST_STREAM';","","frameFlags.RST_STREAM = [];","","typeSpecificAttributes.RST_STREAM = ['error'];","","//      0                   1                   2                   3","//      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1","//     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","//     |                         Error Code (32)                       |","//     +---------------------------------------------------------------+","//","// The RST_STREAM frame contains a single unsigned, 32-bit integer identifying the error","// code (see Error Codes). The error code indicates why the stream is being terminated.","","Serializer.RST_STREAM = function writeRstStream(frame, buffers) {","  var buffer = new Buffer(4);","  var code = errorCodes.indexOf(frame.error);","  assert((0 <= code) && (code <= 0xffffffff), code);","  buffer.writeUInt32BE(code, 0);","  buffers.push(buffer);","};","","Deserializer.RST_STREAM = function readRstStream(buffer, frame) {","  if (buffer.length < 4) {","    // RST_STREAM is 4 bytes long. Bad peer!","    return 'FRAME_SIZE_ERROR';","  }","  frame.error = errorCodes[buffer.readUInt32BE(0)];","  if (!frame.error) {","    // Unknown error codes are considered equivalent to INTERNAL_ERROR","    frame.error = 'INTERNAL_ERROR';","  }","};","","// [SETTINGS](https://tools.ietf.org/html/rfc7540#section-6.5)","// -------------------------------------------------------","//","// The SETTINGS frame (type=0x4) conveys configuration parameters that affect how endpoints","// communicate.","//","// The SETTINGS frame defines the following flag:","","// * ACK (0x1):","//   Bit 1 being set indicates that this frame acknowledges receipt and application of the peer's","//   SETTINGS frame.","frameTypes[0x4] = 'SETTINGS';","","frameFlags.SETTINGS = ['ACK'];","","typeSpecificAttributes.SETTINGS = ['settings'];","","// The payload of a SETTINGS frame consists of zero or more settings. Each setting consists of a","// 16-bit identifier, and an unsigned 32-bit value.","//","//      0                   1                   2                   3","//      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1","//     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","//     |         Identifier(16)          |        Value (32)           |","//     +-----------------+---------------------------------------------+","//     ...Value                          |","//     +---------------------------------+","//","// Each setting in a SETTINGS frame replaces the existing value for that setting.  Settings are","// processed in the order in which they appear, and a receiver of a SETTINGS frame does not need to","// maintain any state other than the current value of settings.  Therefore, the value of a setting","// is the last value that is seen by a receiver. This permits the inclusion of the same settings","// multiple times in the same SETTINGS frame, though doing so does nothing other than waste","// connection capacity.","","Serializer.SETTINGS = function writeSettings(frame, buffers) {","  var settings = [], settingsLeft = Object.keys(frame.settings);","  definedSettings.forEach(function(setting, id) {","    if (setting.name in frame.settings) {","      settingsLeft.splice(settingsLeft.indexOf(setting.name), 1);","      var value = frame.settings[setting.name];","      settings.push({ id: id, value: setting.flag ? Boolean(value) : value });","    }","  });","  assert(settingsLeft.length === 0, 'Unknown settings: ' + settingsLeft.join(', '));","","  var buffer = new Buffer(settings.length * 6);","  for (var i = 0; i < settings.length; i++) {","    buffer.writeUInt16BE(settings[i].id & 0xffff, i*6);","    buffer.writeUInt32BE(settings[i].value, i*6 + 2);","  }","","  buffers.push(buffer);","};","","Deserializer.SETTINGS = function readSettings(buffer, frame, role) {","  frame.settings = {};","","  // Receipt of a SETTINGS frame with the ACK flag set and a length","  // field value other than 0 MUST be treated as a connection error","  // (Section 5.4.1) of type FRAME_SIZE_ERROR.","  if(frame.flags.ACK && buffer.length != 0) {","    return 'FRAME_SIZE_ERROR';","  }","","  if (buffer.length % 6 !== 0) {","    return 'PROTOCOL_ERROR';","  }","  for (var i = 0; i < buffer.length / 6; i++) {","    var id = buffer.readUInt16BE(i*6) & 0xffff;","    var setting = definedSettings[id];","    if (setting) {","      if (role == 'CLIENT' && setting.name == 'SETTINGS_ENABLE_PUSH') {","        return 'SETTINGS frame on client got SETTINGS_ENABLE_PUSH';","      }","      var value = buffer.readUInt32BE(i*6 + 2);","      frame.settings[setting.name] = setting.flag ? Boolean(value & 0x1) : value;","    }","  }","};","","// The following settings are defined:","var definedSettings = [];","","// * SETTINGS_HEADER_TABLE_SIZE (1):","//   Allows the sender to inform the remote endpoint of the size of the header compression table","//   used to decode header blocks.","definedSettings[1] = { name: 'SETTINGS_HEADER_TABLE_SIZE', flag: false };","","// * SETTINGS_ENABLE_PUSH (2):","//   This setting can be use to disable server push. An endpoint MUST NOT send a PUSH_PROMISE frame","//   if it receives this setting set to a value of 0. The default value is 1, which indicates that","//   push is permitted.","definedSettings[2] = { name: 'SETTINGS_ENABLE_PUSH', flag: true };","","// * SETTINGS_MAX_CONCURRENT_STREAMS (3):","//   indicates the maximum number of concurrent streams that the sender will allow.","definedSettings[3] = { name: 'SETTINGS_MAX_CONCURRENT_STREAMS', flag: false };","","// * SETTINGS_INITIAL_WINDOW_SIZE (4):","//   indicates the sender's initial stream window size (in bytes) for new streams.","definedSettings[4] = { name: 'SETTINGS_INITIAL_WINDOW_SIZE', flag: false };","","// * SETTINGS_MAX_FRAME_SIZE (5):","//   indicates the maximum size of a frame the receiver will allow.","definedSettings[5] = { name: 'SETTINGS_MAX_FRAME_SIZE', flag: false };","","// [PUSH_PROMISE](https://tools.ietf.org/html/rfc7540#section-6.6)","// ---------------------------------------------------------------","//","// The PUSH_PROMISE frame (type=0x5) is used to notify the peer endpoint in advance of streams the","// sender intends to initiate.","//","// The PUSH_PROMISE frame defines the following flags:","//","// * END_PUSH_PROMISE (0x4):","//   The END_PUSH_PROMISE bit indicates that this frame contains the entire payload necessary to","//   provide a complete set of headers.","","frameTypes[0x5] = 'PUSH_PROMISE';","","frameFlags.PUSH_PROMISE = ['RESERVED1', 'RESERVED2', 'END_PUSH_PROMISE', 'PADDED'];","","typeSpecificAttributes.PUSH_PROMISE = ['promised_stream', 'headers', 'data'];","","//      0                   1                   2                   3","//      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1","//     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","//     |Pad Length? (8)|","//     +-+-------------+-----------------------------------------------+","//     |X|                Promised-Stream-ID (31)                      |","//     +-+-------------------------------------------------------------+","//     |                 Header Block Fragment (*)                   ...","//     +---------------------------------------------------------------+","//     |                         Padding (*)                         ...","//     +---------------------------------------------------------------+","//","// The PUSH_PROMISE frame includes the unsigned 31-bit identifier of","// the stream the endpoint plans to create along with a minimal set of headers that provide","// additional context for the stream.","","Serializer.PUSH_PROMISE = function writePushPromise(frame, buffers) {","  var buffer = new Buffer(4);","","  var promised_stream = frame.promised_stream;","  assert((0 <= promised_stream) && (promised_stream <= 0x7fffffff), promised_stream);","  buffer.writeUInt32BE(promised_stream, 0);","","  buffers.push(buffer);","  buffers.push(frame.data);","};","","Deserializer.PUSH_PROMISE = function readPushPromise(buffer, frame) {","  if (buffer.length < 4) {","    return 'FRAME_SIZE_ERROR';","  }","  var dataOffset = 0;","  var paddingLength = 0;","  if (frame.flags.PADDED) {","    if (buffer.length < 5) {","      return 'FRAME_SIZE_ERROR';","    }","    paddingLength = (buffer.readUInt8(dataOffset) & 0xff);","    dataOffset = 1;","  }","  frame.promised_stream = buffer.readUInt32BE(dataOffset) & 0x7fffffff;","  dataOffset += 4;","  if (paddingLength) {","    if ((buffer.length - dataOffset) < paddingLength) {","      return 'FRAME_SIZE_ERROR';","    }","    frame.data = buffer.slice(dataOffset, -1 * paddingLength);","  } else {","    frame.data = buffer.slice(dataOffset);","  }","};","","// [PING](https://tools.ietf.org/html/rfc7540#section-6.7)","// -----------------------------------------------","//","// The PING frame (type=0x6) is a mechanism for measuring a minimal round-trip time from the","// sender, as well as determining whether an idle connection is still functional.","//","// The PING frame defines one type-specific flag:","//","// * ACK (0x1):","//   Bit 1 being set indicates that this PING frame is a PING response.","","frameTypes[0x6] = 'PING';","","frameFlags.PING = ['ACK'];","","typeSpecificAttributes.PING = ['data'];","","// In addition to the frame header, PING frames MUST contain 8 additional octets of opaque data.","","Serializer.PING = function writePing(frame, buffers) {","  buffers.push(frame.data);","};","","Deserializer.PING = function readPing(buffer, frame) {","  if (buffer.length !== 8) {","    return 'FRAME_SIZE_ERROR';","  }","  frame.data = buffer;","};","","// [GOAWAY](https://tools.ietf.org/html/rfc7540#section-6.8)","// ---------------------------------------------------","//","// The GOAWAY frame (type=0x7) informs the remote peer to stop creating streams on this connection.","//","// The GOAWAY frame does not define any flags.","","frameTypes[0x7] = 'GOAWAY';","","frameFlags.GOAWAY = [];","","typeSpecificAttributes.GOAWAY = ['last_stream', 'error'];","","//      0                   1                   2                   3","//      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1","//     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","//     |X|                  Last-Stream-ID (31)                        |","//     +-+-------------------------------------------------------------+","//     |                      Error Code (32)                          |","//     +---------------------------------------------------------------+","//","// The last stream identifier in the GOAWAY frame contains the highest numbered stream identifier","// for which the sender of the GOAWAY frame has received frames on and might have taken some action","// on.","//","// The GOAWAY frame also contains a 32-bit error code (see Error Codes) that contains the reason for","// closing the connection.","","Serializer.GOAWAY = function writeGoaway(frame, buffers) {","  var buffer = new Buffer(8);","","  var last_stream = frame.last_stream;","  assert((0 <= last_stream) && (last_stream <= 0x7fffffff), last_stream);","  buffer.writeUInt32BE(last_stream, 0);","","  var code = errorCodes.indexOf(frame.error);","  assert((0 <= code) && (code <= 0xffffffff), code);","  buffer.writeUInt32BE(code, 4);","","  buffers.push(buffer);","};","","Deserializer.GOAWAY = function readGoaway(buffer, frame) {","  if (buffer.length !== 8) {","    // GOAWAY must have 8 bytes","    return 'FRAME_SIZE_ERROR';","  }","  frame.last_stream = buffer.readUInt32BE(0) & 0x7fffffff;","  frame.error = errorCodes[buffer.readUInt32BE(4)];","  if (!frame.error) {","    // Unknown error types are to be considered equivalent to INTERNAL ERROR","    frame.error = 'INTERNAL_ERROR';","  }","};","","// [WINDOW_UPDATE](https://tools.ietf.org/html/rfc7540#section-6.9)","// -----------------------------------------------------------------","//","// The WINDOW_UPDATE frame (type=0x8) is used to implement flow control.","//","// The WINDOW_UPDATE frame does not define any flags.","","frameTypes[0x8] = 'WINDOW_UPDATE';","","frameFlags.WINDOW_UPDATE = [];","","typeSpecificAttributes.WINDOW_UPDATE = ['window_size'];","","// The payload of a WINDOW_UPDATE frame is a 32-bit value indicating the additional number of bytes","// that the sender can transmit in addition to the existing flow control window. The legal range","// for this field is 1 to 2^31 - 1 (0x7fffffff) bytes; the most significant bit of this value is","// reserved.","","Serializer.WINDOW_UPDATE = function writeWindowUpdate(frame, buffers) {","  var buffer = new Buffer(4);","","  var window_size = frame.window_size;","  assert((0 < window_size) && (window_size <= 0x7fffffff), window_size);","  buffer.writeUInt32BE(window_size, 0);","","  buffers.push(buffer);","};","","Deserializer.WINDOW_UPDATE = function readWindowUpdate(buffer, frame) {","  if (buffer.length !== WINDOW_UPDATE_PAYLOAD_SIZE) {","    return 'FRAME_SIZE_ERROR';","  }","  frame.window_size = buffer.readUInt32BE(0) & 0x7fffffff;","  if (frame.window_size === 0) {","    return 'PROTOCOL_ERROR';","  }","};","","// [CONTINUATION](https://tools.ietf.org/html/rfc7540#section-6.10)","// ------------------------------------------------------------","//","// The CONTINUATION frame (type=0x9) is used to continue a sequence of header block fragments.","//","// The CONTINUATION frame defines the following flag:","//","// * END_HEADERS (0x4):","//   The END_HEADERS bit indicates that this frame ends the sequence of header block fragments","//   necessary to provide a complete set of headers.","","frameTypes[0x9] = 'CONTINUATION';","","frameFlags.CONTINUATION = ['RESERVED1', 'RESERVED2', 'END_HEADERS'];","","typeSpecificAttributes.CONTINUATION = ['headers', 'data'];","","Serializer.CONTINUATION = function writeContinuation(frame, buffers) {","  buffers.push(frame.data);","};","","Deserializer.CONTINUATION = function readContinuation(buffer, frame) {","  frame.data = buffer;","};","","// [ALTSVC](https://tools.ietf.org/html/rfc7838#section-4)","// ------------------------------------------------------------","//","// The ALTSVC frame (type=0xA) advertises the availability of an alternative service to the client.","//","// The ALTSVC frame does not define any flags.","","frameTypes[0xA] = 'ALTSVC';","","frameFlags.ALTSVC = [];","","//     0                   1                   2                   3","//     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1","//    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","//    |         Origin-Len (16)       | Origin? (*)                 ...","//    +-------------------------------+----------------+--------------+","//    |                   Alt-Svc-Field-Value (*)                   ...","//    +---------------------------------------------------------------+","//","// The ALTSVC frame contains the following fields:","//","// Origin-Len: An unsigned, 16-bit integer indicating the length, in","//    octets, of the Origin field.","//","// Origin: An OPTIONAL sequence of characters containing ASCII","//    serialisation of an origin ([RFC6454](https://tools.ietf.org/html/rfc6454),","//    Section 6.2) that the alternate service is applicable to.","//","// Alt-Svc-Field-Value: A sequence of octets (length determined by","//    subtracting the length of all preceding fields from the frame","//    length) containing a value identical to the Alt-Svc field value","//    defined in (Section 3)[https://tools.ietf.org/html/rfc7838#section-3]","//    (ABNF production \"Alt-Svc\").","","typeSpecificAttributes.ALTSVC = ['maxAge', 'port', 'protocolID', 'host',","                                 'origin'];","","function istchar(c) {","  return ('!#$&\\'*+-.^_`|~1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.indexOf(c) > -1);","}","","function hexencode(s) {","  var t = '';","  for (var i = 0; i < s.length; i++) {","    if (!istchar(s[i])) {","      t += '%';","      t += new Buffer(s[i]).toString('hex');","    } else {","      t += s[i];","    }","  }","  return t;","}","","Serializer.ALTSVC = function writeAltSvc(frame, buffers) {","  var buffer = new Buffer(2);","  buffer.writeUInt16BE(frame.origin.length, 0);","  buffers.push(buffer);","  buffers.push(new Buffer(frame.origin, 'ascii'));","","  var fieldValue = hexencode(frame.protocolID) + '=\"' + frame.host + ':' + frame.port + '\"';","  if (frame.maxAge !== 86400) { // 86400 is the default","    fieldValue += \"; ma=\" + frame.maxAge;","  }","","  buffers.push(new Buffer(fieldValue, 'ascii'));","};","","function stripquotes(s) {","  var start = 0;","  var end = s.length;","  while ((start < end) && (s[start] === '\"')) {","    start++;","  }","  while ((end > start) && (s[end - 1] === '\"')) {","    end--;","  }","  if (start >= end) {","    return \"\";","  }","  return s.substring(start, end);","}","","function splitNameValue(nvpair) {","  var eq = -1;","  var inQuotes = false;","","  for (var i = 0; i < nvpair.length; i++) {","    if (nvpair[i] === '\"') {","      inQuotes = !inQuotes;","      continue;","    }","    if (inQuotes) {","      continue;","    }","    if (nvpair[i] === '=') {","      eq = i;","      break;","    }","  }","","  if (eq === -1) {","    return {'name': nvpair, 'value': null};","  }","","  var name = stripquotes(nvpair.substring(0, eq).trim());","  var value = stripquotes(nvpair.substring(eq + 1).trim());","  return {'name': name, 'value': value};","}","","function splitHeaderParameters(hv) {","  return parseHeaderValue(hv, ';', splitNameValue);","}","","function parseHeaderValue(hv, separator, callback) {","  var start = 0;","  var inQuotes = false;","  var values = [];","","  for (var i = 0; i < hv.length; i++) {","    if (hv[i] === '\"') {","      inQuotes = !inQuotes;","      continue;","    }","    if (inQuotes) {","      // Just skip this","      continue;","    }","    if (hv[i] === separator) {","      var newValue = hv.substring(start, i).trim();","      if (newValue.length > 0) {","        newValue = callback(newValue);","        values.push(newValue);","      }","      start = i + 1;","    }","  }","","  var newValue = hv.substring(start).trim();","  if (newValue.length > 0) {","    newValue = callback(newValue);","    values.push(newValue);","  }","","  return values;","}","","function rsplit(s, delim, count) {","  var nsplits = 0;","  var end = s.length;","  var rval = [];","  for (var i = s.length - 1; i >= 0; i--) {","    if (s[i] === delim) {","      var t = s.substring(i + 1, end);","      end = i;","      rval.unshift(t);","      nsplits++;","      if (nsplits === count) {","        break;","      }","    }","  }","  if (end !== 0) {","    rval.unshift(s.substring(0, end));","  }","  return rval;","}","","function ishex(c) {","  return ('0123456789ABCDEFabcdef'.indexOf(c) > -1);","}","","function unescape(s) {","  var i = 0;","  var t = '';","  while (i < s.length) {","    if (s[i] != '%' || !ishex(s[i + 1]) || !ishex(s[i + 2])) {","      t += s[i];","    } else {","      ++i;","      var hexvalue = '';","      if (i < s.length) {","        hexvalue += s[i];","        ++i;","      }","      if (i < s.length) {","        hexvalue += s[i];","      }","      if (hexvalue.length > 0) {","        t += new Buffer(hexvalue, 'hex').toString();","      } else {","        t += '%';","      }","    }","","    ++i;","  }","  return t;","}","","Deserializer.ALTSVC = function readAltSvc(buffer, frame) {","  if (buffer.length < 2) {","    return 'FRAME_SIZE_ERROR';","  }","  var originLength = buffer.readUInt16BE(0);","  if ((buffer.length - 2) < originLength) {","    return 'FRAME_SIZE_ERROR';","  }","  frame.origin = buffer.toString('ascii', 2, 2 + originLength);","  var fieldValue = buffer.toString('ascii', 2 + originLength);","  var values = parseHeaderValue(fieldValue, ',', splitHeaderParameters);","  if (values.length > 1) {","    // TODO - warn that we only use one here","  }","  if (values.length === 0) {","    // Well that's a malformed frame. Just ignore it.","    return;","  }","","  var chosenAltSvc = values[0];","  frame.maxAge = 86400; // Default","  for (var i = 0; i < chosenAltSvc.length; i++) {","    if (i === 0) {","      // This corresponds to the protocolID=\"<host>:<port>\" item","      frame.protocolID = unescape(chosenAltSvc[i].name);","      var hostport = rsplit(chosenAltSvc[i].value, ':', 1);","      frame.host = hostport[0];","      frame.port = parseInt(hostport[1], 10);","    } else if (chosenAltSvc[i].name == 'ma') {","      frame.maxAge = parseInt(chosenAltSvc[i].value, 10);","    }","    // Otherwise, we just ignore this","  }","};","","// BLOCKED","// ------------------------------------------------------------","//","// The BLOCKED frame (type=0xB) indicates that the sender is unable to send data","// due to a closed flow control window.","//","// The BLOCKED frame does not define any flags and contains no payload.","","frameTypes[0xB] = 'BLOCKED';","","frameFlags.BLOCKED = [];","","typeSpecificAttributes.BLOCKED = [];","","Serializer.BLOCKED = function writeBlocked(frame, buffers) {","};","","Deserializer.BLOCKED = function readBlocked(buffer, frame) {","};","","// [Error Codes](https://tools.ietf.org/html/rfc7540#section-7)","// ------------------------------------------------------------","","var errorCodes = [","  'NO_ERROR',","  'PROTOCOL_ERROR',","  'INTERNAL_ERROR',","  'FLOW_CONTROL_ERROR',","  'SETTINGS_TIMEOUT',","  'STREAM_CLOSED',","  'FRAME_SIZE_ERROR',","  'REFUSED_STREAM',","  'CANCEL',","  'COMPRESSION_ERROR',","  'CONNECT_ERROR',","  'ENHANCE_YOUR_CALM',","  'INADEQUATE_SECURITY',","  'HTTP_1_1_REQUIRED'","];","","// Logging","// -------","","// [Bunyan serializers](https://github.com/trentm/node-bunyan#serializers) to improve logging output","// for debug messages emitted in this component.","exports.serializers = {};","","// * `frame` serializer: it transforms data attributes from Buffers to hex strings and filters out","//   flags that are not present.","var frameCounter = 0;","exports.serializers.frame = function(frame) {","  if (!frame) {","    return null;","  }","","  if ('id' in frame) {","    return frame.id;","  }","","  frame.id = frameCounter;","  frameCounter += 1;","","  var logEntry = { id: frame.id };","  genericAttributes.concat(typeSpecificAttributes[frame.type]).forEach(function(name) {","    logEntry[name] = frame[name];","  });","","  if (frame.data instanceof Buffer) {","    if (logEntry.data.length > 50) {","      logEntry.data = frame.data.slice(0, 47).toString('hex') + '...';","    } else {","      logEntry.data = frame.data.toString('hex');","    }","","    if (!('length' in logEntry)) {","      logEntry.length = frame.data.length;","    }","  }","","  if (frame.promised_stream instanceof Object) {","    logEntry.promised_stream = 'stream-' + frame.promised_stream.id;","  }","","  logEntry.flags = Object.keys(frame.flags || {}).filter(function(name) {","    return frame.flags[name] === true;","  });","","  return logEntry;","};","","// * `data` serializer: it simply transforms a buffer to a hex string.","exports.serializers.data = function(data) {","  return data.toString('hex');","};",""],"l":{"5":1,"7":1,"9":1,"10":1,"12":1,"14":1,"15":1,"28":1,"29":0,"30":0,"32":1,"37":1,"38":0,"40":0,"42":0,"43":0,"44":0,"46":0,"48":0,"49":0,"50":0,"52":0,"55":0,"69":1,"70":0,"71":0,"72":0,"73":0,"75":1,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"93":1,"94":0,"96":0,"97":0,"100":0,"103":0,"104":0,"105":0,"106":0,"113":0,"114":0,"115":0,"116":0,"118":0,"119":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"135":0,"136":0,"139":0,"142":0,"146":0,"196":1,"198":1,"200":1,"202":1,"204":1,"206":1,"207":0,"209":0,"210":0,"211":0,"213":0,"214":0,"216":0,"217":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"227":0,"229":0,"230":0,"232":0,"234":0,"237":1,"238":0,"239":0,"242":0,"243":0,"246":0,"248":0,"249":0,"251":0,"254":0,"255":0,"256":0,"257":0,"258":0,"261":0,"263":0,"290":1,"292":1,"294":1,"296":1,"297":0,"300":1,"301":0,"302":0,"303":0,"304":0,"306":0,"308":0,"309":0,"312":0,"313":0,"315":0,"317":0,"319":0,"342":1,"344":1,"346":1,"364":1,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"372":0,"373":0,"374":0,"376":0,"379":1,"380":0,"381":0,"382":0,"384":0,"385":0,"387":0,"389":0,"392":0,"393":0,"394":0,"395":0,"396":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"410":0,"411":0,"413":0,"415":0,"417":0,"428":1,"430":1,"432":1,"444":1,"445":0,"446":0,"447":0,"448":0,"449":0,"451":0,"452":0,"454":0,"457":1,"458":0,"460":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"477":1,"479":1,"481":1,"492":1,"493":0,"494":0,"495":0,"496":0,"497":0,"500":1,"501":0,"503":0,"505":0,"506":0,"508":0,"523":1,"525":1,"527":1,"547":1,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"556":0,"558":0,"559":0,"560":0,"561":0,"564":0,"567":1,"568":0,"573":0,"574":0,"577":0,"578":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"587":0,"588":0,"594":1,"599":1,"605":1,"609":1,"613":1,"617":1,"631":1,"633":1,"635":1,"653":1,"654":0,"656":0,"657":0,"658":0,"660":0,"661":0,"664":1,"665":0,"666":0,"668":0,"669":0,"670":0,"671":0,"672":0,"674":0,"675":0,"677":0,"678":0,"679":0,"680":0,"681":0,"683":0,"685":0,"700":1,"702":1,"704":1,"708":1,"709":0,"712":1,"713":0,"714":0,"716":0,"726":1,"728":1,"730":1,"747":1,"748":0,"750":0,"751":0,"752":0,"754":0,"755":0,"756":0,"758":0,"761":1,"762":0,"764":0,"766":0,"767":0,"768":0,"770":0,"781":1,"783":1,"785":1,"792":1,"793":0,"795":0,"796":0,"797":0,"799":0,"802":1,"803":0,"804":0,"806":0,"807":0,"808":0,"823":1,"825":1,"827":1,"829":1,"830":0,"833":1,"834":0,"844":1,"846":1,"871":1,"874":1,"875":0,"878":1,"879":0,"880":0,"881":0,"882":0,"883":0,"885":0,"888":0,"891":1,"892":0,"893":0,"894":0,"895":0,"897":0,"898":0,"899":0,"902":0,"905":1,"906":0,"907":0,"908":0,"909":0,"911":0,"912":0,"914":0,"915":0,"917":0,"920":1,"921":0,"922":0,"924":0,"925":0,"926":0,"927":0,"929":0,"930":0,"932":0,"933":0,"934":0,"938":0,"939":0,"942":0,"943":0,"944":0,"947":1,"948":0,"951":1,"952":0,"953":0,"954":0,"956":0,"957":0,"958":0,"959":0,"961":0,"963":0,"965":0,"966":0,"967":0,"968":0,"969":0,"971":0,"975":0,"976":0,"977":0,"978":0,"981":0,"984":1,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"999":0,"1000":0,"1002":0,"1005":1,"1006":0,"1009":1,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1022":0,"1023":0,"1025":0,"1026":0,"1028":0,"1032":0,"1034":0,"1037":1,"1038":0,"1039":0,"1041":0,"1042":0,"1043":0,"1045":0,"1046":0,"1047":0,"1048":0,"1051":0,"1053":0,"1056":0,"1057":0,"1058":0,"1059":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1080":1,"1082":1,"1084":1,"1086":1,"1089":1,"1095":1,"1117":1,"1121":1,"1122":1,"1123":0,"1124":0,"1127":0,"1128":0,"1131":0,"1132":0,"1134":0,"1135":0,"1136":0,"1139":0,"1140":0,"1141":0,"1143":0,"1146":0,"1147":0,"1151":0,"1152":0,"1155":0,"1156":0,"1159":0,"1163":1,"1164":0}},"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/compressor.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/compressor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":1,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":1,"143":513,"144":257,"145":256,"146":256,"147":256,"148":256,"149":4688,"150":4688,"151":692,"152":3996,"153":256,"154":1,"155":1,"156":257,"157":1,"158":257,"159":1,"160":0,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":1,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":1,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":1,"269":1,"270":1,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":1,"279":0,"280":0,"281":0,"282":0,"283":0,"284":1,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":1,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":1,"335":1,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":1,"343":0,"344":1,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":1,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":1,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":1,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":1,"406":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[257,256],"24":[256,1],"25":[692,3996],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":513,"19":257,"20":257,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"fnMap":{"1":{"name":"HeaderTable","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":33}}},"2":{"name":"entryFromPair","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":29}}},"3":{"name":"size","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":21}}},"4":{"name":"_enforceLimit","line":90,"loc":{"start":{"line":90,"column":38},"end":{"line":90,"column":68}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":100,"column":28},"end":{"line":100,"column":44}}},"6":{"name":"setSizeLimit","line":113,"loc":{"start":{"line":113,"column":37},"end":{"line":113,"column":66}}},"7":{"name":"HeaderSetDecompressor","line":200,"loc":{"start":{"line":200,"column":0},"end":{"line":200,"column":43}}},"8":{"name":"_transform","line":211,"loc":{"start":{"line":211,"column":45},"end":{"line":211,"column":92}}},"9":{"name":"_execute","line":237,"loc":{"start":{"line":237,"column":43},"end":{"line":237,"column":66}}},"10":{"name":"_flush","line":284,"loc":{"start":{"line":284,"column":41},"end":{"line":284,"column":67}}},"11":{"name":"HeaderSetCompressor","line":309,"loc":{"start":{"line":309,"column":0},"end":{"line":309,"column":41}}},"12":{"name":"send","line":317,"loc":{"start":{"line":317,"column":37},"end":{"line":317,"column":56}}},"13":{"name":"_transform","line":330,"loc":{"start":{"line":330,"column":43},"end":{"line":330,"column":89}}},"14":{"name":"_flush","line":376,"loc":{"start":{"line":376,"column":39},"end":{"line":376,"column":65}}},"15":{"name":"writeInteger","line":396,"loc":{"start":{"line":396,"column":30},"end":{"line":396,"column":58}}},"16":{"name":"readInteger","line":437,"loc":{"start":{"line":437,"column":32},"end":{"line":437,"column":64}}},"17":{"name":"HuffmanTable","line":459,"loc":{"start":{"line":459,"column":0},"end":{"line":459,"column":29}}},"18":{"name":"createTree","line":460,"loc":{"start":{"line":460,"column":2},"end":{"line":460,"column":39}}},"19":{"name":"(anonymous_19)","line":483,"loc":{"start":{"line":483,"column":25},"end":{"line":483,"column":40}}},"20":{"name":"(anonymous_20)","line":486,"loc":{"start":{"line":486,"column":27},"end":{"line":486,"column":42}}},"21":{"name":"encode","line":491,"loc":{"start":{"line":491,"column":32},"end":{"line":491,"column":56}}},"22":{"name":"add","line":495,"loc":{"start":{"line":495,"column":2},"end":{"line":495,"column":21}}},"23":{"name":"decode","line":536,"loc":{"start":{"line":536,"column":32},"end":{"line":536,"column":56}}},"24":{"name":"writeString","line":854,"loc":{"start":{"line":854,"column":29},"end":{"line":854,"column":55}}},"25":{"name":"readString","line":870,"loc":{"start":{"line":870,"column":31},"end":{"line":870,"column":59}}},"26":{"name":"writeHeader","line":975,"loc":{"start":{"line":975,"column":29},"end":{"line":975,"column":58}}},"27":{"name":"readHeader","line":1013,"loc":{"start":{"line":1013,"column":31},"end":{"line":1013,"column":59}}},"28":{"name":"Compressor","line":1086,"loc":{"start":{"line":1086,"column":0},"end":{"line":1086,"column":31}}},"29":{"name":"setTableSizeLimit","line":1100,"loc":{"start":{"line":1100,"column":41},"end":{"line":1100,"column":74}}},"30":{"name":"compress","line":1112,"loc":{"start":{"line":1112,"column":32},"end":{"line":1112,"column":59}}},"31":{"name":"compressHeader","line":1136,"loc":{"start":{"line":1136,"column":2},"end":{"line":1136,"column":32}}},"32":{"name":"(anonymous_32)","line":1146,"loc":{"start":{"line":1146,"column":57},"end":{"line":1146,"column":74}}},"33":{"name":"_transform","line":1173,"loc":{"start":{"line":1173,"column":34},"end":{"line":1173,"column":77}}},"34":{"name":"Decompressor","line":1230,"loc":{"start":{"line":1230,"column":0},"end":{"line":1230,"column":33}}},"35":{"name":"setTableSizeLimit","line":1243,"loc":{"start":{"line":1243,"column":43},"end":{"line":1243,"column":76}}},"36":{"name":"decompress","line":1250,"loc":{"start":{"line":1250,"column":36},"end":{"line":1250,"column":63}}},"37":{"name":"_transform","line":1288,"loc":{"start":{"line":1288,"column":36},"end":{"line":1288,"column":79}}},"38":{"name":"(anonymous_38)","line":1317,"loc":{"start":{"line":1317,"column":41},"end":{"line":1317,"column":57}}},"39":{"name":"concat","line":1338,"loc":{"start":{"line":1338,"column":0},"end":{"line":1338,"column":25}}},"40":{"name":"cut","line":1353,"loc":{"start":{"line":1353,"column":0},"end":{"line":1353,"column":27}}},"41":{"name":"trim","line":1364,"loc":{"start":{"line":1364,"column":0},"end":{"line":1364,"column":22}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":50}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":54}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":50}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":31}},"9":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}},"10":{"start":{"line":40,"column":0},"end":{"line":50,"column":1}},"11":{"start":{"line":41,"column":2},"end":{"line":41,"column":56}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":18}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":52}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":35}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":17}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":59}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":39}},"18":{"start":{"line":48,"column":2},"end":{"line":48,"column":57}},"19":{"start":{"line":49,"column":2},"end":{"line":49,"column":14}},"20":{"start":{"line":52,"column":0},"end":{"line":56,"column":1}},"21":{"start":{"line":53,"column":2},"end":{"line":53,"column":27}},"22":{"start":{"line":54,"column":2},"end":{"line":54,"column":28}},"23":{"start":{"line":55,"column":2},"end":{"line":55,"column":15}},"24":{"start":{"line":66,"column":0},"end":{"line":66,"column":38}},"25":{"start":{"line":68,"column":0},"end":{"line":70,"column":1}},"26":{"start":{"line":69,"column":2},"end":{"line":69,"column":63}},"27":{"start":{"line":90,"column":0},"end":{"line":98,"column":2}},"28":{"start":{"line":91,"column":2},"end":{"line":91,"column":26}},"29":{"start":{"line":92,"column":2},"end":{"line":96,"column":3}},"30":{"start":{"line":93,"column":4},"end":{"line":93,"column":29}},"31":{"start":{"line":94,"column":4},"end":{"line":94,"column":32}},"32":{"start":{"line":95,"column":4},"end":{"line":95,"column":36}},"33":{"start":{"line":97,"column":2},"end":{"line":97,"column":24}},"34":{"start":{"line":100,"column":0},"end":{"line":110,"column":2}},"35":{"start":{"line":101,"column":2},"end":{"line":101,"column":40}},"36":{"start":{"line":102,"column":2},"end":{"line":102,"column":49}},"37":{"start":{"line":104,"column":2},"end":{"line":107,"column":3}},"38":{"start":{"line":105,"column":4},"end":{"line":105,"column":46}},"39":{"start":{"line":106,"column":4},"end":{"line":106,"column":30}},"40":{"start":{"line":109,"column":2},"end":{"line":109,"column":24}},"41":{"start":{"line":113,"column":0},"end":{"line":116,"column":2}},"42":{"start":{"line":114,"column":2},"end":{"line":114,"column":22}},"43":{"start":{"line":115,"column":2},"end":{"line":115,"column":34}},"44":{"start":{"line":125,"column":0},"end":{"line":187,"column":2}},"45":{"start":{"line":199,"column":0},"end":{"line":199,"column":54}},"46":{"start":{"line":200,"column":0},"end":{"line":206,"column":1}},"47":{"start":{"line":201,"column":2},"end":{"line":201,"column":51}},"48":{"start":{"line":203,"column":2},"end":{"line":203,"column":53}},"49":{"start":{"line":204,"column":2},"end":{"line":204,"column":22}},"50":{"start":{"line":205,"column":2},"end":{"line":205,"column":20}},"51":{"start":{"line":211,"column":0},"end":{"line":214,"column":2}},"52":{"start":{"line":212,"column":2},"end":{"line":212,"column":27}},"53":{"start":{"line":213,"column":2},"end":{"line":213,"column":13}},"54":{"start":{"line":237,"column":0},"end":{"line":278,"column":2}},"55":{"start":{"line":238,"column":2},"end":{"line":239,"column":53}},"56":{"start":{"line":241,"column":2},"end":{"line":241,"column":18}},"57":{"start":{"line":243,"column":2},"end":{"line":277,"column":3}},"58":{"start":{"line":244,"column":4},"end":{"line":244,"column":45}},"59":{"start":{"line":249,"column":7},"end":{"line":277,"column":3}},"60":{"start":{"line":250,"column":4},"end":{"line":250,"column":26}},"61":{"start":{"line":251,"column":4},"end":{"line":251,"column":31}},"62":{"start":{"line":253,"column":4},"end":{"line":253,"column":25}},"63":{"start":{"line":254,"column":4},"end":{"line":254,"column":20}},"64":{"start":{"line":265,"column":4},"end":{"line":269,"column":5}},"65":{"start":{"line":266,"column":6},"end":{"line":266,"column":51}},"66":{"start":{"line":268,"column":6},"end":{"line":268,"column":35}},"67":{"start":{"line":271,"column":4},"end":{"line":274,"column":5}},"68":{"start":{"line":272,"column":6},"end":{"line":272,"column":34}},"69":{"start":{"line":273,"column":6},"end":{"line":273,"column":29}},"70":{"start":{"line":276,"column":4},"end":{"line":276,"column":20}},"71":{"start":{"line":284,"column":0},"end":{"line":294,"column":2}},"72":{"start":{"line":285,"column":2},"end":{"line":285,"column":36}},"73":{"start":{"line":288,"column":2},"end":{"line":288,"column":20}},"74":{"start":{"line":289,"column":2},"end":{"line":291,"column":3}},"75":{"start":{"line":290,"column":4},"end":{"line":290,"column":56}},"76":{"start":{"line":293,"column":2},"end":{"line":293,"column":13}},"77":{"start":{"line":308,"column":0},"end":{"line":308,"column":52}},"78":{"start":{"line":309,"column":0},"end":{"line":315,"column":1}},"79":{"start":{"line":310,"column":2},"end":{"line":310,"column":51}},"80":{"start":{"line":312,"column":2},"end":{"line":312,"column":53}},"81":{"start":{"line":313,"column":2},"end":{"line":313,"column":22}},"82":{"start":{"line":314,"column":2},"end":{"line":314,"column":56}},"83":{"start":{"line":317,"column":0},"end":{"line":325,"column":2}},"84":{"start":{"line":318,"column":2},"end":{"line":319,"column":52}},"85":{"start":{"line":321,"column":2},"end":{"line":323,"column":3}},"86":{"start":{"line":322,"column":4},"end":{"line":322,"column":49}},"87":{"start":{"line":324,"column":2},"end":{"line":324,"column":32}},"88":{"start":{"line":330,"column":0},"end":{"line":371,"column":2}},"89":{"start":{"line":331,"column":2},"end":{"line":331,"column":35}},"90":{"start":{"line":332,"column":2},"end":{"line":332,"column":22}},"91":{"start":{"line":333,"column":2},"end":{"line":333,"column":17}},"92":{"start":{"line":336,"column":2},"end":{"line":336,"column":37}},"93":{"start":{"line":337,"column":2},"end":{"line":347,"column":3}},"94":{"start":{"line":338,"column":4},"end":{"line":338,"column":38}},"95":{"start":{"line":339,"column":4},"end":{"line":346,"column":5}},"96":{"start":{"line":340,"column":6},"end":{"line":345,"column":7}},"97":{"start":{"line":341,"column":8},"end":{"line":341,"column":33}},"98":{"start":{"line":342,"column":8},"end":{"line":342,"column":14}},"99":{"start":{"line":343,"column":13},"end":{"line":345,"column":7}},"100":{"start":{"line":344,"column":8},"end":{"line":344,"column":33}},"101":{"start":{"line":349,"column":2},"end":{"line":351,"column":50}},"102":{"start":{"line":353,"column":2},"end":{"line":368,"column":3}},"103":{"start":{"line":354,"column":4},"end":{"line":354,"column":67}},"104":{"start":{"line":359,"column":4},"end":{"line":359,"column":32}},"105":{"start":{"line":361,"column":4},"end":{"line":361,"column":77}},"106":{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},"107":{"start":{"line":364,"column":6},"end":{"line":364,"column":29}},"108":{"start":{"line":367,"column":4},"end":{"line":367,"column":148}},"109":{"start":{"line":370,"column":2},"end":{"line":370,"column":13}},"110":{"start":{"line":376,"column":0},"end":{"line":378,"column":2}},"111":{"start":{"line":377,"column":2},"end":{"line":377,"column":13}},"112":{"start":{"line":396,"column":0},"end":{"line":422,"column":2}},"113":{"start":{"line":397,"column":2},"end":{"line":397,"column":32}},"114":{"start":{"line":398,"column":2},"end":{"line":400,"column":3}},"115":{"start":{"line":399,"column":4},"end":{"line":399,"column":29}},"116":{"start":{"line":402,"column":2},"end":{"line":402,"column":17}},"117":{"start":{"line":403,"column":2},"end":{"line":405,"column":3}},"118":{"start":{"line":404,"column":4},"end":{"line":404,"column":22}},"119":{"start":{"line":406,"column":2},"end":{"line":406,"column":13}},"120":{"start":{"line":408,"column":2},"end":{"line":408,"column":15}},"121":{"start":{"line":409,"column":2},"end":{"line":419,"column":3}},"122":{"start":{"line":410,"column":4},"end":{"line":410,"column":28}},"123":{"start":{"line":411,"column":4},"end":{"line":411,"column":16}},"124":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"125":{"start":{"line":414,"column":6},"end":{"line":414,"column":15}},"126":{"start":{"line":416,"column":4},"end":{"line":416,"column":18}},"127":{"start":{"line":418,"column":4},"end":{"line":418,"column":10}},"128":{"start":{"line":421,"column":2},"end":{"line":421,"column":29}},"129":{"start":{"line":437,"column":0},"end":{"line":455,"column":2}},"130":{"start":{"line":438,"column":2},"end":{"line":438,"column":32}},"131":{"start":{"line":440,"column":2},"end":{"line":440,"column":40}},"132":{"start":{"line":441,"column":2},"end":{"line":443,"column":3}},"133":{"start":{"line":442,"column":4},"end":{"line":442,"column":23}},"134":{"start":{"line":445,"column":2},"end":{"line":452,"column":3}},"135":{"start":{"line":446,"column":4},"end":{"line":446,"column":14}},"136":{"start":{"line":447,"column":4},"end":{"line":451,"column":46}},"137":{"start":{"line":448,"column":6},"end":{"line":448,"column":46}},"138":{"start":{"line":449,"column":6},"end":{"line":449,"column":13}},"139":{"start":{"line":450,"column":6},"end":{"line":450,"column":25}},"140":{"start":{"line":454,"column":2},"end":{"line":454,"column":11}},"141":{"start":{"line":459,"column":0},"end":{"line":489,"column":1}},"142":{"start":{"line":460,"column":2},"end":{"line":479,"column":3}},"143":{"start":{"line":461,"column":4},"end":{"line":478,"column":5}},"144":{"start":{"line":462,"column":6},"end":{"line":462,"column":39}},"145":{"start":{"line":466,"column":6},"end":{"line":466,"column":31}},"146":{"start":{"line":467,"column":6},"end":{"line":467,"column":20}},"147":{"start":{"line":468,"column":6},"end":{"line":468,"column":19}},"148":{"start":{"line":469,"column":6},"end":{"line":476,"column":7}},"149":{"start":{"line":470,"column":8},"end":{"line":470,"column":30}},"150":{"start":{"line":471,"column":8},"end":{"line":475,"column":9}},"151":{"start":{"line":472,"column":10},"end":{"line":472,"column":28}},"152":{"start":{"line":474,"column":10},"end":{"line":474,"column":27}},"153":{"start":{"line":477,"column":6},"end":{"line":477,"column":77}},"154":{"start":{"line":481,"column":2},"end":{"line":481,"column":32}},"155":{"start":{"line":483,"column":2},"end":{"line":485,"column":5}},"156":{"start":{"line":484,"column":4},"end":{"line":484,"column":29}},"157":{"start":{"line":486,"column":2},"end":{"line":488,"column":5}},"158":{"start":{"line":487,"column":4},"end":{"line":487,"column":23}},"159":{"start":{"line":491,"column":0},"end":{"line":534,"column":2}},"160":{"start":{"line":492,"column":2},"end":{"line":492,"column":18}},"161":{"start":{"line":493,"column":2},"end":{"line":493,"column":16}},"162":{"start":{"line":495,"column":2},"end":{"line":501,"column":3}},"163":{"start":{"line":496,"column":4},"end":{"line":500,"column":5}},"164":{"start":{"line":497,"column":6},"end":{"line":497,"column":24}},"165":{"start":{"line":499,"column":6},"end":{"line":499,"column":40}},"166":{"start":{"line":503,"column":2},"end":{"line":527,"column":3}},"167":{"start":{"line":504,"column":4},"end":{"line":504,"column":25}},"168":{"start":{"line":505,"column":4},"end":{"line":505,"column":32}},"169":{"start":{"line":506,"column":4},"end":{"line":506,"column":36}},"170":{"start":{"line":508,"column":4},"end":{"line":526,"column":5}},"171":{"start":{"line":509,"column":6},"end":{"line":521,"column":7}},"172":{"start":{"line":510,"column":8},"end":{"line":510,"column":38}},"173":{"start":{"line":511,"column":8},"end":{"line":511,"column":17}},"174":{"start":{"line":512,"column":8},"end":{"line":512,"column":24}},"175":{"start":{"line":513,"column":8},"end":{"line":513,"column":19}},"176":{"start":{"line":515,"column":8},"end":{"line":515,"column":35}},"177":{"start":{"line":516,"column":8},"end":{"line":516,"column":32}},"178":{"start":{"line":517,"column":8},"end":{"line":517,"column":17}},"179":{"start":{"line":518,"column":8},"end":{"line":518,"column":29}},"180":{"start":{"line":519,"column":8},"end":{"line":519,"column":24}},"181":{"start":{"line":520,"column":8},"end":{"line":520,"column":18}},"182":{"start":{"line":523,"column":6},"end":{"line":525,"column":7}},"183":{"start":{"line":524,"column":8},"end":{"line":524,"column":18}},"184":{"start":{"line":529,"column":2},"end":{"line":531,"column":3}},"185":{"start":{"line":530,"column":4},"end":{"line":530,"column":56}},"186":{"start":{"line":533,"column":2},"end":{"line":533,"column":28}},"187":{"start":{"line":536,"column":0},"end":{"line":556,"column":2}},"188":{"start":{"line":537,"column":2},"end":{"line":537,"column":18}},"189":{"start":{"line":538,"column":2},"end":{"line":538,"column":26}},"190":{"start":{"line":540,"column":2},"end":{"line":553,"column":3}},"191":{"start":{"line":541,"column":4},"end":{"line":541,"column":25}},"192":{"start":{"line":543,"column":4},"end":{"line":552,"column":5}},"193":{"start":{"line":544,"column":6},"end":{"line":544,"column":37}},"194":{"start":{"line":545,"column":6},"end":{"line":545,"column":23}},"195":{"start":{"line":547,"column":6},"end":{"line":547,"column":29}},"196":{"start":{"line":548,"column":6},"end":{"line":551,"column":7}},"197":{"start":{"line":549,"column":8},"end":{"line":549,"column":32}},"198":{"start":{"line":550,"column":8},"end":{"line":550,"column":28}},"199":{"start":{"line":555,"column":2},"end":{"line":555,"column":28}},"200":{"start":{"line":563,"column":0},"end":{"line":821,"column":3}},"201":{"start":{"line":854,"column":0},"end":{"line":868,"column":2}},"202":{"start":{"line":855,"column":2},"end":{"line":855,"column":32}},"203":{"start":{"line":857,"column":2},"end":{"line":857,"column":54}},"204":{"start":{"line":858,"column":2},"end":{"line":867,"column":3}},"205":{"start":{"line":859,"column":4},"end":{"line":859,"column":64}},"206":{"start":{"line":860,"column":4},"end":{"line":860,"column":24}},"207":{"start":{"line":861,"column":4},"end":{"line":861,"column":34}},"208":{"start":{"line":865,"column":4},"end":{"line":865,"column":56}},"209":{"start":{"line":866,"column":4},"end":{"line":866,"column":30}},"210":{"start":{"line":870,"column":0},"end":{"line":876,"column":2}},"211":{"start":{"line":871,"column":2},"end":{"line":871,"column":44}},"212":{"start":{"line":872,"column":2},"end":{"line":872,"column":56}},"213":{"start":{"line":873,"column":2},"end":{"line":873,"column":68}},"214":{"start":{"line":874,"column":2},"end":{"line":874,"column":26}},"215":{"start":{"line":875,"column":2},"end":{"line":875,"column":90}},"216":{"start":{"line":967,"column":0},"end":{"line":973,"column":2}},"217":{"start":{"line":975,"column":0},"end":{"line":1011,"column":2}},"218":{"start":{"line":976,"column":2},"end":{"line":976,"column":35}},"219":{"start":{"line":978,"column":2},"end":{"line":988,"column":3}},"220":{"start":{"line":979,"column":4},"end":{"line":979,"column":51}},"221":{"start":{"line":980,"column":9},"end":{"line":988,"column":3}},"222":{"start":{"line":981,"column":4},"end":{"line":981,"column":45}},"223":{"start":{"line":982,"column":9},"end":{"line":988,"column":3}},"224":{"start":{"line":983,"column":4},"end":{"line":983,"column":56}},"225":{"start":{"line":984,"column":9},"end":{"line":988,"column":3}},"226":{"start":{"line":985,"column":4},"end":{"line":985,"column":57}},"227":{"start":{"line":987,"column":4},"end":{"line":987,"column":45}},"228":{"start":{"line":990,"column":2},"end":{"line":1006,"column":3}},"229":{"start":{"line":991,"column":4},"end":{"line":991,"column":68}},"230":{"start":{"line":994,"column":7},"end":{"line":1006,"column":3}},"231":{"start":{"line":995,"column":4},"end":{"line":995,"column":87}},"232":{"start":{"line":999,"column":4},"end":{"line":1004,"column":5}},"233":{"start":{"line":1000,"column":6},"end":{"line":1000,"column":88}},"234":{"start":{"line":1002,"column":6},"end":{"line":1002,"column":74}},"235":{"start":{"line":1003,"column":6},"end":{"line":1003,"column":60}},"236":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":59}},"237":{"start":{"line":1008,"column":2},"end":{"line":1008,"column":45}},"238":{"start":{"line":1010,"column":2},"end":{"line":1010,"column":51}},"239":{"start":{"line":1013,"column":0},"end":{"line":1055,"column":2}},"240":{"start":{"line":1014,"column":2},"end":{"line":1014,"column":34}},"241":{"start":{"line":1016,"column":2},"end":{"line":1016,"column":40}},"242":{"start":{"line":1017,"column":2},"end":{"line":1027,"column":3}},"243":{"start":{"line":1018,"column":4},"end":{"line":1018,"column":45}},"244":{"start":{"line":1019,"column":9},"end":{"line":1027,"column":3}},"245":{"start":{"line":1020,"column":4},"end":{"line":1020,"column":56}},"246":{"start":{"line":1021,"column":9},"end":{"line":1027,"column":3}},"247":{"start":{"line":1022,"column":4},"end":{"line":1022,"column":51}},"248":{"start":{"line":1023,"column":9},"end":{"line":1027,"column":3}},"249":{"start":{"line":1024,"column":4},"end":{"line":1024,"column":57}},"250":{"start":{"line":1026,"column":4},"end":{"line":1026,"column":45}},"251":{"start":{"line":1029,"column":2},"end":{"line":1029,"column":34}},"252":{"start":{"line":1030,"column":2},"end":{"line":1030,"column":23}},"253":{"start":{"line":1031,"column":2},"end":{"line":1031,"column":31}},"254":{"start":{"line":1032,"column":2},"end":{"line":1032,"column":24}},"255":{"start":{"line":1033,"column":2},"end":{"line":1033,"column":32}},"256":{"start":{"line":1035,"column":2},"end":{"line":1052,"column":3}},"257":{"start":{"line":1036,"column":4},"end":{"line":1036,"column":32}},"258":{"start":{"line":1037,"column":4},"end":{"line":1037,"column":65}},"259":{"start":{"line":1040,"column":7},"end":{"line":1052,"column":3}},"260":{"start":{"line":1041,"column":4},"end":{"line":1041,"column":98}},"261":{"start":{"line":1045,"column":4},"end":{"line":1045,"column":83}},"262":{"start":{"line":1046,"column":4},"end":{"line":1048,"column":5}},"263":{"start":{"line":1047,"column":6},"end":{"line":1047,"column":57}},"264":{"start":{"line":1049,"column":4},"end":{"line":1049,"column":56}},"265":{"start":{"line":1050,"column":4},"end":{"line":1050,"column":75}},"266":{"start":{"line":1051,"column":4},"end":{"line":1051,"column":85}},"267":{"start":{"line":1054,"column":2},"end":{"line":1054,"column":16}},"268":{"start":{"line":1079,"column":0},"end":{"line":1079,"column":34}},"269":{"start":{"line":1085,"column":0},"end":{"line":1085,"column":43}},"270":{"start":{"line":1086,"column":0},"end":{"line":1097,"column":1}},"271":{"start":{"line":1087,"column":2},"end":{"line":1087,"column":51}},"272":{"start":{"line":1089,"column":2},"end":{"line":1089,"column":53}},"273":{"start":{"line":1091,"column":2},"end":{"line":1091,"column":56}},"274":{"start":{"line":1092,"column":2},"end":{"line":1092,"column":43}},"275":{"start":{"line":1094,"column":2},"end":{"line":1094,"column":38}},"276":{"start":{"line":1095,"column":2},"end":{"line":1095,"column":34}},"277":{"start":{"line":1096,"column":2},"end":{"line":1096,"column":53}},"278":{"start":{"line":1100,"column":0},"end":{"line":1107,"column":2}},"279":{"start":{"line":1101,"column":2},"end":{"line":1101,"column":33}},"280":{"start":{"line":1102,"column":2},"end":{"line":1104,"column":3}},"281":{"start":{"line":1103,"column":4},"end":{"line":1103,"column":39}},"282":{"start":{"line":1105,"column":2},"end":{"line":1105,"column":31}},"283":{"start":{"line":1106,"column":2},"end":{"line":1106,"column":37}},"284":{"start":{"line":1112,"column":0},"end":{"line":1170,"column":2}},"285":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":67}},"286":{"start":{"line":1115,"column":2},"end":{"line":1123,"column":3}},"287":{"start":{"line":1116,"column":4},"end":{"line":1119,"column":5}},"288":{"start":{"line":1117,"column":6},"end":{"line":1118,"column":55}},"289":{"start":{"line":1120,"column":4},"end":{"line":1121,"column":53}},"290":{"start":{"line":1122,"column":4},"end":{"line":1122,"column":40}},"291":{"start":{"line":1124,"column":2},"end":{"line":1124,"column":24}},"292":{"start":{"line":1125,"column":2},"end":{"line":1125,"column":27}},"293":{"start":{"line":1128,"column":2},"end":{"line":1134,"column":3}},"294":{"start":{"line":1129,"column":4},"end":{"line":1133,"column":5}},"295":{"start":{"line":1130,"column":6},"end":{"line":1130,"column":30}},"296":{"start":{"line":1132,"column":6},"end":{"line":1132,"column":33}},"297":{"start":{"line":1136,"column":2},"end":{"line":1158,"column":3}},"298":{"start":{"line":1137,"column":4},"end":{"line":1137,"column":30}},"299":{"start":{"line":1138,"column":4},"end":{"line":1138,"column":38}},"300":{"start":{"line":1142,"column":4},"end":{"line":1149,"column":5}},"301":{"start":{"line":1143,"column":6},"end":{"line":1145,"column":7}},"302":{"start":{"line":1144,"column":8},"end":{"line":1144,"column":24}},"303":{"start":{"line":1146,"column":6},"end":{"line":1148,"column":10}},"304":{"start":{"line":1147,"column":8},"end":{"line":1147,"column":51}},"305":{"start":{"line":1151,"column":4},"end":{"line":1157,"column":5}},"306":{"start":{"line":1152,"column":6},"end":{"line":1154,"column":7}},"307":{"start":{"line":1153,"column":8},"end":{"line":1153,"column":51}},"308":{"start":{"line":1156,"column":6},"end":{"line":1156,"column":46}},"309":{"start":{"line":1160,"column":2},"end":{"line":1160,"column":39}},"310":{"start":{"line":1161,"column":2},"end":{"line":1161,"column":42}},"311":{"start":{"line":1163,"column":2},"end":{"line":1163,"column":19}},"312":{"start":{"line":1165,"column":2},"end":{"line":1165,"column":25}},"313":{"start":{"line":1166,"column":2},"end":{"line":1168,"column":3}},"314":{"start":{"line":1167,"column":4},"end":{"line":1167,"column":23}},"315":{"start":{"line":1169,"column":2},"end":{"line":1169,"column":24}},"316":{"start":{"line":1173,"column":0},"end":{"line":1218,"column":2}},"317":{"start":{"line":1181,"column":2},"end":{"line":1215,"column":3}},"318":{"start":{"line":1182,"column":4},"end":{"line":1182,"column":46}},"319":{"start":{"line":1187,"column":4},"end":{"line":1187,"column":59}},"320":{"start":{"line":1188,"column":4},"end":{"line":1188,"column":65}},"321":{"start":{"line":1190,"column":4},"end":{"line":1209,"column":5}},"322":{"start":{"line":1191,"column":6},"end":{"line":1191,"column":21}},"323":{"start":{"line":1192,"column":6},"end":{"line":1192,"column":28}},"324":{"start":{"line":1193,"column":6},"end":{"line":1193,"column":43}},"325":{"start":{"line":1195,"column":6},"end":{"line":1205,"column":7}},"326":{"start":{"line":1196,"column":8},"end":{"line":1196,"column":45}},"327":{"start":{"line":1197,"column":8},"end":{"line":1197,"column":57}},"328":{"start":{"line":1198,"column":8},"end":{"line":1198,"column":53}},"329":{"start":{"line":1200,"column":8},"end":{"line":1204,"column":10}},"330":{"start":{"line":1206,"column":6},"end":{"line":1206,"column":34}},"331":{"start":{"line":1208,"column":6},"end":{"line":1208,"column":28}},"332":{"start":{"line":1214,"column":4},"end":{"line":1214,"column":21}},"333":{"start":{"line":1217,"column":2},"end":{"line":1217,"column":9}},"334":{"start":{"line":1229,"column":0},"end":{"line":1229,"column":45}},"335":{"start":{"line":1230,"column":0},"end":{"line":1240,"column":1}},"336":{"start":{"line":1231,"column":2},"end":{"line":1231,"column":51}},"337":{"start":{"line":1233,"column":2},"end":{"line":1233,"column":53}},"338":{"start":{"line":1235,"column":2},"end":{"line":1235,"column":56}},"339":{"start":{"line":1236,"column":2},"end":{"line":1236,"column":43}},"340":{"start":{"line":1238,"column":2},"end":{"line":1238,"column":27}},"341":{"start":{"line":1239,"column":2},"end":{"line":1239,"column":25}},"342":{"start":{"line":1243,"column":0},"end":{"line":1245,"column":2}},"343":{"start":{"line":1244,"column":2},"end":{"line":1244,"column":33}},"344":{"start":{"line":1250,"column":0},"end":{"line":1285,"column":2}},"345":{"start":{"line":1251,"column":2},"end":{"line":1251,"column":71}},"346":{"start":{"line":1252,"column":2},"end":{"line":1252,"column":26}},"347":{"start":{"line":1254,"column":2},"end":{"line":1254,"column":33}},"348":{"start":{"line":1255,"column":2},"end":{"line":1255,"column":19}},"349":{"start":{"line":1256,"column":2},"end":{"line":1256,"column":11}},"350":{"start":{"line":1257,"column":2},"end":{"line":1275,"column":3}},"351":{"start":{"line":1258,"column":4},"end":{"line":1258,"column":23}},"352":{"start":{"line":1259,"column":4},"end":{"line":1259,"column":24}},"353":{"start":{"line":1260,"column":4},"end":{"line":1260,"column":49}},"354":{"start":{"line":1261,"column":4},"end":{"line":1264,"column":5}},"355":{"start":{"line":1262,"column":8},"end":{"line":1262,"column":45}},"356":{"start":{"line":1263,"column":8},"end":{"line":1263,"column":23}},"357":{"start":{"line":1265,"column":4},"end":{"line":1265,"column":40}},"358":{"start":{"line":1266,"column":4},"end":{"line":1274,"column":5}},"359":{"start":{"line":1267,"column":6},"end":{"line":1271,"column":7}},"360":{"start":{"line":1268,"column":8},"end":{"line":1268,"column":34}},"361":{"start":{"line":1270,"column":8},"end":{"line":1270,"column":47}},"362":{"start":{"line":1273,"column":6},"end":{"line":1273,"column":28}},"363":{"start":{"line":1280,"column":2},"end":{"line":1282,"column":3}},"364":{"start":{"line":1281,"column":4},"end":{"line":1281,"column":53}},"365":{"start":{"line":1284,"column":2},"end":{"line":1284,"column":17}},"366":{"start":{"line":1288,"column":0},"end":{"line":1332,"column":2}},"367":{"start":{"line":1291,"column":2},"end":{"line":1311,"column":3}},"368":{"start":{"line":1292,"column":4},"end":{"line":1296,"column":5}},"369":{"start":{"line":1293,"column":6},"end":{"line":1293,"column":71}},"370":{"start":{"line":1294,"column":6},"end":{"line":1294,"column":43}},"371":{"start":{"line":1295,"column":6},"end":{"line":1295,"column":13}},"372":{"start":{"line":1297,"column":4},"end":{"line":1297,"column":29}},"373":{"start":{"line":1302,"column":7},"end":{"line":1311,"column":3}},"374":{"start":{"line":1303,"column":4},"end":{"line":1303,"column":28}},"375":{"start":{"line":1304,"column":4},"end":{"line":1304,"column":41}},"376":{"start":{"line":1305,"column":4},"end":{"line":1305,"column":27}},"377":{"start":{"line":1310,"column":4},"end":{"line":1310,"column":21}},"378":{"start":{"line":1316,"column":2},"end":{"line":1329,"column":3}},"379":{"start":{"line":1317,"column":4},"end":{"line":1319,"column":8}},"380":{"start":{"line":1318,"column":6},"end":{"line":1318,"column":24}},"381":{"start":{"line":1320,"column":4},"end":{"line":1326,"column":5}},"382":{"start":{"line":1321,"column":6},"end":{"line":1321,"column":44}},"383":{"start":{"line":1323,"column":6},"end":{"line":1323,"column":68}},"384":{"start":{"line":1324,"column":6},"end":{"line":1324,"column":46}},"385":{"start":{"line":1325,"column":6},"end":{"line":1325,"column":13}},"386":{"start":{"line":1327,"column":4},"end":{"line":1327,"column":62}},"387":{"start":{"line":1328,"column":4},"end":{"line":1328,"column":29}},"388":{"start":{"line":1331,"column":2},"end":{"line":1331,"column":9}},"389":{"start":{"line":1338,"column":0},"end":{"line":1350,"column":1}},"390":{"start":{"line":1339,"column":2},"end":{"line":1339,"column":15}},"391":{"start":{"line":1340,"column":2},"end":{"line":1342,"column":3}},"392":{"start":{"line":1341,"column":4},"end":{"line":1341,"column":30}},"393":{"start":{"line":1344,"column":2},"end":{"line":1344,"column":38}},"394":{"start":{"line":1345,"column":2},"end":{"line":1347,"column":3}},"395":{"start":{"line":1346,"column":4},"end":{"line":1346,"column":42}},"396":{"start":{"line":1349,"column":2},"end":{"line":1349,"column":22}},"397":{"start":{"line":1353,"column":0},"end":{"line":1362,"column":1}},"398":{"start":{"line":1354,"column":2},"end":{"line":1354,"column":18}},"399":{"start":{"line":1355,"column":2},"end":{"line":1355,"column":17}},"400":{"start":{"line":1356,"column":2},"end":{"line":1360,"column":34}},"401":{"start":{"line":1357,"column":4},"end":{"line":1357,"column":59}},"402":{"start":{"line":1358,"column":4},"end":{"line":1358,"column":58}},"403":{"start":{"line":1359,"column":4},"end":{"line":1359,"column":24}},"404":{"start":{"line":1361,"column":2},"end":{"line":1361,"column":16}},"405":{"start":{"line":1364,"column":0},"end":{"line":1366,"column":1}},"406":{"start":{"line":1365,"column":2},"end":{"line":1365,"column":23}}},"branchMap":{"1":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":21}},{"start":{"line":43,"column":25},"end":{"line":43,"column":51}}]},"2":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":10},"end":{"line":92,"column":24}},{"start":{"line":92,"column":30},"end":{"line":92,"column":48}}]},"3":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"4":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"5":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":7},"end":{"line":249,"column":7}},{"start":{"line":249,"column":7},"end":{"line":249,"column":7}}]},"6":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]},"7":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"8":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":2},"end":{"line":321,"column":2}},{"start":{"line":321,"column":2},"end":{"line":321,"column":2}}]},"9":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":4},"end":{"line":339,"column":4}},{"start":{"line":339,"column":4},"end":{"line":339,"column":4}}]},"10":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":6},"end":{"line":340,"column":6}},{"start":{"line":340,"column":6},"end":{"line":340,"column":6}}]},"11":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":13},"end":{"line":343,"column":13}},{"start":{"line":343,"column":13},"end":{"line":343,"column":13}}]},"12":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":25},"end":{"line":349,"column":42}},{"start":{"line":349,"column":46},"end":{"line":349,"column":63}},{"start":{"line":350,"column":25},"end":{"line":350,"column":46}},{"start":{"line":350,"column":50},"end":{"line":350,"column":67}},{"start":{"line":351,"column":24},"end":{"line":351,"column":48}}]},"13":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":2},"end":{"line":353,"column":2}},{"start":{"line":353,"column":2},"end":{"line":353,"column":2}}]},"14":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":6},"end":{"line":353,"column":22}},{"start":{"line":353,"column":26},"end":{"line":353,"column":41}}]},"15":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":20},"end":{"line":361,"column":56}},{"start":{"line":361,"column":61},"end":{"line":361,"column":76}}]},"16":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":363,"column":4}},{"start":{"line":363,"column":4},"end":{"line":363,"column":4}}]},"17":{"line":367,"type":"cond-expr","locations":[{"start":{"line":367,"column":43},"end":{"line":367,"column":52}},{"start":{"line":367,"column":55},"end":{"line":367,"column":59}}]},"18":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":2},"end":{"line":398,"column":2}},{"start":{"line":398,"column":2},"end":{"line":398,"column":2}}]},"19":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":403,"column":2}},{"start":{"line":403,"column":2},"end":{"line":403,"column":2}}]},"20":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":4},"end":{"line":413,"column":4}},{"start":{"line":413,"column":4},"end":{"line":413,"column":4}}]},"21":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":2},"end":{"line":441,"column":2}},{"start":{"line":441,"column":2},"end":{"line":441,"column":2}}]},"22":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":2},"end":{"line":445,"column":2}},{"start":{"line":445,"column":2},"end":{"line":445,"column":2}}]},"23":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":4},"end":{"line":461,"column":4}},{"start":{"line":461,"column":4},"end":{"line":461,"column":4}}]},"24":{"line":466,"type":"binary-expr","locations":[{"start":{"line":466,"column":17},"end":{"line":466,"column":25}},{"start":{"line":466,"column":29},"end":{"line":466,"column":30}}]},"25":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":8},"end":{"line":471,"column":8}},{"start":{"line":471,"column":8},"end":{"line":471,"column":8}}]},"26":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":4},"end":{"line":496,"column":4}},{"start":{"line":496,"column":4},"end":{"line":496,"column":4}}]},"27":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":6},"end":{"line":509,"column":6}},{"start":{"line":509,"column":6},"end":{"line":509,"column":6}}]},"28":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":6},"end":{"line":523,"column":6}},{"start":{"line":523,"column":6},"end":{"line":523,"column":6}}]},"29":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":2},"end":{"line":529,"column":2}},{"start":{"line":529,"column":2},"end":{"line":529,"column":2}}]},"30":{"line":544,"type":"cond-expr","locations":[{"start":{"line":544,"column":31},"end":{"line":544,"column":32}},{"start":{"line":544,"column":35},"end":{"line":544,"column":36}}]},"31":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":6},"end":{"line":548,"column":6}},{"start":{"line":548,"column":6},"end":{"line":548,"column":6}}]},"32":{"line":858,"type":"if","locations":[{"start":{"line":858,"column":2},"end":{"line":858,"column":2}},{"start":{"line":858,"column":2},"end":{"line":858,"column":2}}]},"33":{"line":875,"type":"cond-expr","locations":[{"start":{"line":875,"column":20},"end":{"line":875,"column":61}},{"start":{"line":875,"column":64},"end":{"line":875,"column":71}}]},"34":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":2},"end":{"line":978,"column":2}},{"start":{"line":978,"column":2},"end":{"line":978,"column":2}}]},"35":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":9},"end":{"line":980,"column":9}},{"start":{"line":980,"column":9},"end":{"line":980,"column":9}}]},"36":{"line":982,"type":"if","locations":[{"start":{"line":982,"column":9},"end":{"line":982,"column":9}},{"start":{"line":982,"column":9},"end":{"line":982,"column":9}}]},"37":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":9},"end":{"line":984,"column":9}},{"start":{"line":984,"column":9},"end":{"line":984,"column":9}}]},"38":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":2},"end":{"line":990,"column":2}},{"start":{"line":990,"column":2},"end":{"line":990,"column":2}}]},"39":{"line":994,"type":"if","locations":[{"start":{"line":994,"column":7},"end":{"line":994,"column":7}},{"start":{"line":994,"column":7},"end":{"line":994,"column":7}}]},"40":{"line":999,"type":"if","locations":[{"start":{"line":999,"column":4},"end":{"line":999,"column":4}},{"start":{"line":999,"column":4},"end":{"line":999,"column":4}}]},"41":{"line":1017,"type":"if","locations":[{"start":{"line":1017,"column":2},"end":{"line":1017,"column":2}},{"start":{"line":1017,"column":2},"end":{"line":1017,"column":2}}]},"42":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":9},"end":{"line":1019,"column":9}},{"start":{"line":1019,"column":9},"end":{"line":1019,"column":9}}]},"43":{"line":1021,"type":"if","locations":[{"start":{"line":1021,"column":9},"end":{"line":1021,"column":9}},{"start":{"line":1021,"column":9},"end":{"line":1021,"column":9}}]},"44":{"line":1023,"type":"if","locations":[{"start":{"line":1023,"column":9},"end":{"line":1023,"column":9}},{"start":{"line":1023,"column":9},"end":{"line":1023,"column":9}}]},"45":{"line":1035,"type":"if","locations":[{"start":{"line":1035,"column":2},"end":{"line":1035,"column":2}},{"start":{"line":1035,"column":2},"end":{"line":1035,"column":2}}]},"46":{"line":1040,"type":"if","locations":[{"start":{"line":1040,"column":7},"end":{"line":1040,"column":7}},{"start":{"line":1040,"column":7},"end":{"line":1040,"column":7}}]},"47":{"line":1046,"type":"if","locations":[{"start":{"line":1046,"column":4},"end":{"line":1046,"column":4}},{"start":{"line":1046,"column":4},"end":{"line":1046,"column":4}}]},"48":{"line":1091,"type":"binary-expr","locations":[{"start":{"line":1091,"column":10},"end":{"line":1091,"column":28}},{"start":{"line":1091,"column":34},"end":{"line":1091,"column":53}}]},"49":{"line":1102,"type":"if","locations":[{"start":{"line":1102,"column":2},"end":{"line":1102,"column":2}},{"start":{"line":1102,"column":2},"end":{"line":1102,"column":2}}]},"50":{"line":1102,"type":"binary-expr","locations":[{"start":{"line":1102,"column":6},"end":{"line":1102,"column":34}},{"start":{"line":1102,"column":38},"end":{"line":1102,"column":72}}]},"51":{"line":1115,"type":"if","locations":[{"start":{"line":1115,"column":2},"end":{"line":1115,"column":2}},{"start":{"line":1115,"column":2},"end":{"line":1115,"column":2}}]},"52":{"line":1116,"type":"if","locations":[{"start":{"line":1116,"column":4},"end":{"line":1116,"column":4}},{"start":{"line":1116,"column":4},"end":{"line":1116,"column":4}}]},"53":{"line":1129,"type":"if","locations":[{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}},{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}}]},"54":{"line":1142,"type":"if","locations":[{"start":{"line":1142,"column":4},"end":{"line":1142,"column":4}},{"start":{"line":1142,"column":4},"end":{"line":1142,"column":4}}]},"55":{"line":1143,"type":"if","locations":[{"start":{"line":1143,"column":6},"end":{"line":1143,"column":6}},{"start":{"line":1143,"column":6},"end":{"line":1143,"column":6}}]},"56":{"line":1151,"type":"if","locations":[{"start":{"line":1151,"column":4},"end":{"line":1151,"column":4}},{"start":{"line":1151,"column":4},"end":{"line":1151,"column":4}}]},"57":{"line":1181,"type":"if","locations":[{"start":{"line":1181,"column":2},"end":{"line":1181,"column":2}},{"start":{"line":1181,"column":2},"end":{"line":1181,"column":2}}]},"58":{"line":1181,"type":"binary-expr","locations":[{"start":{"line":1181,"column":6},"end":{"line":1181,"column":30}},{"start":{"line":1181,"column":34},"end":{"line":1181,"column":63}}]},"59":{"line":1187,"type":"cond-expr","locations":[{"start":{"line":1187,"column":53},"end":{"line":1187,"column":54}},{"start":{"line":1187,"column":57},"end":{"line":1187,"column":58}}]},"60":{"line":1195,"type":"if","locations":[{"start":{"line":1195,"column":6},"end":{"line":1195,"column":6}},{"start":{"line":1195,"column":6},"end":{"line":1195,"column":6}}]},"61":{"line":1235,"type":"binary-expr","locations":[{"start":{"line":1235,"column":10},"end":{"line":1235,"column":28}},{"start":{"line":1235,"column":34},"end":{"line":1235,"column":53}}]},"62":{"line":1261,"type":"if","locations":[{"start":{"line":1261,"column":4},"end":{"line":1261,"column":4}},{"start":{"line":1261,"column":4},"end":{"line":1261,"column":4}}]},"63":{"line":1261,"type":"binary-expr","locations":[{"start":{"line":1261,"column":8},"end":{"line":1261,"column":26}},{"start":{"line":1261,"column":30},"end":{"line":1261,"column":43}}]},"64":{"line":1266,"type":"if","locations":[{"start":{"line":1266,"column":4},"end":{"line":1266,"column":4}},{"start":{"line":1266,"column":4},"end":{"line":1266,"column":4}}]},"65":{"line":1267,"type":"if","locations":[{"start":{"line":1267,"column":6},"end":{"line":1267,"column":6}},{"start":{"line":1267,"column":6},"end":{"line":1267,"column":6}}]},"66":{"line":1280,"type":"if","locations":[{"start":{"line":1280,"column":2},"end":{"line":1280,"column":2}},{"start":{"line":1280,"column":2},"end":{"line":1280,"column":2}}]},"67":{"line":1280,"type":"binary-expr","locations":[{"start":{"line":1280,"column":7},"end":{"line":1280,"column":26}},{"start":{"line":1280,"column":32},"end":{"line":1280,"column":66}}]},"68":{"line":1291,"type":"if","locations":[{"start":{"line":1291,"column":2},"end":{"line":1291,"column":2}},{"start":{"line":1291,"column":2},"end":{"line":1291,"column":2}}]},"69":{"line":1292,"type":"if","locations":[{"start":{"line":1292,"column":4},"end":{"line":1292,"column":4}},{"start":{"line":1292,"column":4},"end":{"line":1292,"column":4}}]},"70":{"line":1292,"type":"binary-expr","locations":[{"start":{"line":1292,"column":9},"end":{"line":1292,"column":38}},{"start":{"line":1292,"column":44},"end":{"line":1292,"column":78}}]},"71":{"line":1302,"type":"if","locations":[{"start":{"line":1302,"column":7},"end":{"line":1302,"column":7}},{"start":{"line":1302,"column":7},"end":{"line":1302,"column":7}}]},"72":{"line":1302,"type":"binary-expr","locations":[{"start":{"line":1302,"column":12},"end":{"line":1302,"column":36}},{"start":{"line":1302,"column":42},"end":{"line":1302,"column":71}}]},"73":{"line":1316,"type":"if","locations":[{"start":{"line":1316,"column":2},"end":{"line":1316,"column":2}},{"start":{"line":1316,"column":2},"end":{"line":1316,"column":2}}]},"74":{"line":1316,"type":"binary-expr","locations":[{"start":{"line":1316,"column":6},"end":{"line":1316,"column":22}},{"start":{"line":1316,"column":27},"end":{"line":1316,"column":50}},{"start":{"line":1316,"column":54},"end":{"line":1316,"column":82}}]}},"code":["// The implementation of the [HTTP/2 Header Compression][http2-compression] spec is separated from","// the 'integration' part which handles HEADERS and PUSH_PROMISE frames. The compression itself is","// implemented in the first part of the file, and consists of three classes: `HeaderTable`,","// `HeaderSetDecompressor` and `HeaderSetCompressor`. The two latter classes are","// [Transform Stream][node-transform] subclasses that operate in [object mode][node-objectmode].","// These transform chunks of binary data into `[name, value]` pairs and vice versa, and store their","// state in `HeaderTable` instances.","//","// The 'integration' part is also implemented by two [Transform Stream][node-transform] subclasses","// that operate in [object mode][node-objectmode]: the `Compressor` and the `Decompressor`. These","// provide a layer between the [framer](framer.html) and the","// [connection handling component](connection.html).","//","// [node-transform]: https://nodejs.org/api/stream.html#stream_class_stream_transform","// [node-objectmode]: https://nodejs.org/api/stream.html#stream_new_stream_readable_options","// [http2-compression]: https://tools.ietf.org/html/rfc7541","","exports.HeaderTable = HeaderTable;","exports.HuffmanTable = HuffmanTable;","exports.HeaderSetCompressor = HeaderSetCompressor;","exports.HeaderSetDecompressor = HeaderSetDecompressor;","exports.Compressor = Compressor;","exports.Decompressor = Decompressor;","","var TransformStream = require('stream').Transform;","var assert = require('assert');","var util = require('util');","","// Header compression","// ==================","","// The HeaderTable class","// ---------------------","","// The [Header Table] is a component used to associate headers to index values. It is basically an","// ordered list of `[name, value]` pairs, so it's implemented as a subclass of `Array`.","// In this implementation, the Header Table and the [Static Table] are handled as a single table.","// [Header Table]: https://tools.ietf.org/html/rfc7541#section-2.3.2","// [Static Table]: https://tools.ietf.org/html/rfc7541#section-2.3.1","function HeaderTable(log, limit) {","  var self = HeaderTable.staticTable.map(entryFromPair);","  self._log = log;","  self._limit = limit || DEFAULT_HEADER_TABLE_LIMIT;","  self._staticLength = self.length;","  self._size = 0;","  self._enforceLimit = HeaderTable.prototype._enforceLimit;","  self.add = HeaderTable.prototype.add;","  self.setSizeLimit = HeaderTable.prototype.setSizeLimit;","  return self;","}","","function entryFromPair(pair) {","  var entry = pair.slice();","  entry._size = size(entry);","  return entry;","}","","// The encoder decides how to update the header table and as such can control how much memory is","// used by the header table.  To limit the memory requirements on the decoder side, the header table","// size is bounded.","//","// * The default header table size limit is 4096 bytes.","// * The size of an entry is defined as follows: the size of an entry is the sum of its name's","//   length in bytes, of its value's length in bytes and of 32 bytes.","// * The size of a header table is the sum of the size of its entries.","var DEFAULT_HEADER_TABLE_LIMIT = 4096;","","function size(entry) {","  return (new Buffer(entry[0] + entry[1], 'utf8')).length + 32;","}","","// The `add(index, entry)` can be used to [manage the header table][tablemgmt]:","// [tablemgmt]: https://tools.ietf.org/html/rfc7541#section-4","//","// * it pushes the new `entry` at the beggining of the table","// * before doing such a modification, it has to be ensured that the header table size will stay","//   lower than or equal to the header table size limit. To achieve this, entries are evicted from","//   the end of the header table until the size of the header table is less than or equal to","//   `(this._limit - entry.size)`, or until the table is empty.","//","//              <----------  Index Address Space ---------->","//              <-- Static  Table -->  <-- Header  Table -->","//              +---+-----------+---+  +---+-----------+---+","//              | 0 |    ...    | k |  |k+1|    ...    | n |","//              +---+-----------+---+  +---+-----------+---+","//                                     ^                   |","//                                     |                   V","//                              Insertion Point       Drop Point","","HeaderTable.prototype._enforceLimit = function _enforceLimit(limit) {","  var droppedEntries = [];","  while ((this._size > 0) && (this._size > limit)) {","    var dropped = this.pop();","    this._size -= dropped._size;","    droppedEntries.unshift(dropped);","  }","  return droppedEntries;","};","","HeaderTable.prototype.add = function(entry) {","  var limit = this._limit - entry._size;","  var droppedEntries = this._enforceLimit(limit);","","  if (this._size <= limit) {","    this.splice(this._staticLength, 0, entry);","    this._size += entry._size;","  }","","  return droppedEntries;","};","","// The table size limit can be changed externally. In this case, the same eviction algorithm is used","HeaderTable.prototype.setSizeLimit = function setSizeLimit(limit) {","  this._limit = limit;","  this._enforceLimit(this._limit);","};","","// [The Static Table](https://tools.ietf.org/html/rfc7541#section-2.3.1)","// ------------------","","// The table is generated with feeding the table from the spec to the following sed command:","//","//     sed -re \"s/\\s*\\| [0-9]+\\s*\\| ([^ ]*)/  [ '\\1'/g\" -e \"s/\\|\\s([^ ]*)/, '\\1'/g\" -e 's/ \\|/],/g'","","HeaderTable.staticTable  = [","  [ ':authority'                  , ''            ],","  [ ':method'                     , 'GET'         ],","  [ ':method'                     , 'POST'        ],","  [ ':path'                       , '/'           ],","  [ ':path'                       , '/index.html' ],","  [ ':scheme'                     , 'http'        ],","  [ ':scheme'                     , 'https'       ],","  [ ':status'                     , '200'         ],","  [ ':status'                     , '204'         ],","  [ ':status'                     , '206'         ],","  [ ':status'                     , '304'         ],","  [ ':status'                     , '400'         ],","  [ ':status'                     , '404'         ],","  [ ':status'                     , '500'         ],","  [ 'accept-charset'              , ''            ],","  [ 'accept-encoding'             , 'gzip, deflate'],","  [ 'accept-language'             , ''            ],","  [ 'accept-ranges'               , ''            ],","  [ 'accept'                      , ''            ],","  [ 'access-control-allow-origin' , ''            ],","  [ 'age'                         , ''            ],","  [ 'allow'                       , ''            ],","  [ 'authorization'               , ''            ],","  [ 'cache-control'               , ''            ],","  [ 'content-disposition'         , ''            ],","  [ 'content-encoding'            , ''            ],","  [ 'content-language'            , ''            ],","  [ 'content-length'              , ''            ],","  [ 'content-location'            , ''            ],","  [ 'content-range'               , ''            ],","  [ 'content-type'                , ''            ],","  [ 'cookie'                      , ''            ],","  [ 'date'                        , ''            ],","  [ 'etag'                        , ''            ],","  [ 'expect'                      , ''            ],","  [ 'expires'                     , ''            ],","  [ 'from'                        , ''            ],","  [ 'host'                        , ''            ],","  [ 'if-match'                    , ''            ],","  [ 'if-modified-since'           , ''            ],","  [ 'if-none-match'               , ''            ],","  [ 'if-range'                    , ''            ],","  [ 'if-unmodified-since'         , ''            ],","  [ 'last-modified'               , ''            ],","  [ 'link'                        , ''            ],","  [ 'location'                    , ''            ],","  [ 'max-forwards'                , ''            ],","  [ 'proxy-authenticate'          , ''            ],","  [ 'proxy-authorization'         , ''            ],","  [ 'range'                       , ''            ],","  [ 'referer'                     , ''            ],","  [ 'refresh'                     , ''            ],","  [ 'retry-after'                 , ''            ],","  [ 'server'                      , ''            ],","  [ 'set-cookie'                  , ''            ],","  [ 'strict-transport-security'   , ''            ],","  [ 'transfer-encoding'           , ''            ],","  [ 'user-agent'                  , ''            ],","  [ 'vary'                        , ''            ],","  [ 'via'                         , ''            ],","  [ 'www-authenticate'            , ''            ]","];","","// The HeaderSetDecompressor class","// -------------------------------","","// A `HeaderSetDecompressor` instance is a transform stream that can be used to *decompress a","// single header set*. Its input is a stream of binary data chunks and its output is a stream of","// `[name, value]` pairs.","//","// Currently, it is not a proper streaming decompressor implementation, since it buffer its input","// until the end os the stream, and then processes the whole header block at once.","","util.inherits(HeaderSetDecompressor, TransformStream);","function HeaderSetDecompressor(log, table) {","  TransformStream.call(this, { objectMode: true });","","  this._log = log.child({ component: 'compressor' });","  this._table = table;","  this._chunks = [];","}","","// `_transform` is the implementation of the [corresponding virtual function][_transform] of the","// TransformStream class. It collects the data chunks for later processing.","// [_transform]: https://nodejs.org/api/stream.html#stream_transform_transform_chunk_encoding_callback","HeaderSetDecompressor.prototype._transform = function _transform(chunk, encoding, callback) {","  this._chunks.push(chunk);","  callback();","};","","// `execute(rep)` executes the given [header representation][representation].","// [representation]: https://tools.ietf.org/html/rfc7541#section-6","","// The *JavaScript object representation* of a header representation:","//","//     {","//       name: String || Integer,  // string literal or index","//       value: String || Integer, // string literal or index","//       index: Boolean            // with or without indexing","//     }","//","// *Important:* to ease the indexing of the header table, indexes start at 0 instead of 1.","//","// Examples:","//","//     Indexed:","//     { name: 2  , value: 2  , index: false }","//     Literal:","//     { name: 2  , value: 'X', index: false } // without indexing","//     { name: 2  , value: 'Y', index: true  } // with indexing","//     { name: 'A', value: 'Z', index: true  } // with indexing, literal name","HeaderSetDecompressor.prototype._execute = function _execute(rep) {","  this._log.trace({ key: rep.name, value: rep.value, index: rep.index },","                  'Executing header representation');","","  var entry, pair;","","  if (rep.contextUpdate) {","    this._table.setSizeLimit(rep.newMaxSize);","  }","","  // * An _indexed representation_ entails the following actions:","  //   * The header field corresponding to the referenced entry is emitted","  else if (typeof rep.value === 'number') {","    var index = rep.value;","    entry = this._table[index];","","    pair = entry.slice();","    this.push(pair);","  }","","  // * A _literal representation_ that is _not added_ to the header table entails the following","  //   action:","  //   * The header is emitted.","  // * A _literal representation_ that is _added_ to the header table entails the following further","  //   actions:","  //   * The header is added to the header table.","  //   * The header is emitted.","  else {","    if (typeof rep.name === 'number') {","      pair = [this._table[rep.name][0], rep.value];","    } else {","      pair = [rep.name, rep.value];","    }","","    if (rep.index) {","      entry = entryFromPair(pair);","      this._table.add(entry);","    }","","    this.push(pair);","  }","};","","// `_flush` is the implementation of the [corresponding virtual function][_flush] of the","// TransformStream class. The whole decompressing process is done in `_flush`. It gets called when","// the input stream is over.","// [_flush]: https://nodejs.org/api/stream.html#stream_transform_flush_callback","HeaderSetDecompressor.prototype._flush = function _flush(callback) {","  var buffer = concat(this._chunks);","","  // * processes the header representations","  buffer.cursor = 0;","  while (buffer.cursor < buffer.length) {","    this._execute(HeaderSetDecompressor.header(buffer));","  }","","  callback();","};","","// The HeaderSetCompressor class","// -----------------------------","","// A `HeaderSetCompressor` instance is a transform stream that can be used to *compress a single","// header set*. Its input is a stream of `[name, value]` pairs and its output is a stream of","// binary data chunks.","//","// It is a real streaming compressor, since it does not wait until the header set is complete.","//","// The compression algorithm is (intentionally) not specified by the spec. Therefore, the current","// compression algorithm can probably be improved in the future.","","util.inherits(HeaderSetCompressor, TransformStream);","function HeaderSetCompressor(log, table) {","  TransformStream.call(this, { objectMode: true });","","  this._log = log.child({ component: 'compressor' });","  this._table = table;","  this.push = TransformStream.prototype.push.bind(this);","}","","HeaderSetCompressor.prototype.send = function send(rep) {","  this._log.trace({ key: rep.name, value: rep.value, index: rep.index },","                  'Emitting header representation');","","  if (!rep.chunks) {","    rep.chunks = HeaderSetCompressor.header(rep);","  }","  rep.chunks.forEach(this.push);","};","","// `_transform` is the implementation of the [corresponding virtual function][_transform] of the","// TransformStream class. It processes the input headers one by one:","// [_transform]: https://nodejs.org/api/stream.html#stream_transform_transform_chunk_encoding_callback","HeaderSetCompressor.prototype._transform = function _transform(pair, encoding, callback) {","  var name = pair[0].toLowerCase();","  var value = pair[1];","  var entry, rep;","","  // * tries to find full (name, value) or name match in the header table","  var nameMatch = -1, fullMatch = -1;","  for (var droppedIndex = 0; droppedIndex < this._table.length; droppedIndex++) {","    entry = this._table[droppedIndex];","    if (entry[0] === name) {","      if (entry[1] === value) {","        fullMatch = droppedIndex;","        break;","      } else if (nameMatch === -1) {","        nameMatch = droppedIndex;","      }","    }","  }","","  var mustNeverIndex = ((name === 'cookie' && value.length < 20) ||","                        (name === 'set-cookie' && value.length < 20) ||","                        name === 'authorization');","","  if (fullMatch !== -1 && !mustNeverIndex) {","    this.send({ name: fullMatch, value: fullMatch, index: false });","  }","","  // * otherwise, it will be a literal representation (with a name index if there's a name match)","  else {","    entry = entryFromPair(pair);","","    var indexing = (entry._size < this._table._limit / 2) && !mustNeverIndex;","","    if (indexing) {","      this._table.add(entry);","    }","","    this.send({ name: (nameMatch !== -1) ? nameMatch : name, value: value, index: indexing, mustNeverIndex: mustNeverIndex, contextUpdate: false });","  }","","  callback();","};","","// `_flush` is the implementation of the [corresponding virtual function][_flush] of the","// TransformStream class. It gets called when there's no more header to compress. The final step:","// [_flush]: https://nodejs.org/api/stream.html#stream_transform_flush_callback","HeaderSetCompressor.prototype._flush = function _flush(callback) {","  callback();","};","","// [Detailed Format](https://tools.ietf.org/html/rfc7541#section-5)","// -----------------","","// ### Integer representation ###","//","// The algorithm to represent an integer I is as follows:","//","// 1. If I < 2^N - 1, encode I on N bits","// 2. Else, encode 2^N - 1 on N bits and do the following steps:","//    1. Set I to (I - (2^N - 1)) and Q to 1","//    2. While Q > 0","//       1. Compute Q and R, quotient and remainder of I divided by 2^7","//       2. If Q is strictly greater than 0, write one 1 bit; otherwise, write one 0 bit","//       3. Encode R on the next 7 bits","//       4. I = Q","","HeaderSetCompressor.integer = function writeInteger(I, N) {","  var limit = Math.pow(2,N) - 1;","  if (I < limit) {","    return [new Buffer([I])];","  }","","  var bytes = [];","  if (N !== 0) {","    bytes.push(limit);","  }","  I -= limit;","","  var Q = 1, R;","  while (Q > 0) {","    Q = Math.floor(I / 128);","    R = I % 128;","","    if (Q > 0) {","      R += 128;","    }","    bytes.push(R);","","    I = Q;","  }","","  return [new Buffer(bytes)];","};","","// The inverse algorithm:","//","// 1. Set I to the number coded on the lower N bits of the first byte","// 2. If I is smaller than 2^N - 1 then return I","// 2. Else the number is encoded on more than one byte, so do the following steps:","//    1. Set M to 0","//    2. While returning with I","//       1. Let B be the next byte (the first byte if N is 0)","//       2. Read out the lower 7 bits of B and multiply it with 2^M","//       3. Increase I with this number","//       4. Increase M by 7","//       5. Return I if the most significant bit of B is 0","","HeaderSetDecompressor.integer = function readInteger(buffer, N) {","  var limit = Math.pow(2,N) - 1;","","  var I = buffer[buffer.cursor] & limit;","  if (N !== 0) {","    buffer.cursor += 1;","  }","","  if (I === limit) {","    var M = 0;","    do {","      I += (buffer[buffer.cursor] & 127) << M;","      M += 7;","      buffer.cursor += 1;","    } while (buffer[buffer.cursor - 1] & 128);","  }","","  return I;","};","","// ### Huffman Encoding ###","","function HuffmanTable(table) {","  function createTree(codes, position) {","    if (codes.length === 1) {","      return [table.indexOf(codes[0])];","    }","","    else {","      position = position || 0;","      var zero = [];","      var one = [];","      for (var i = 0; i < codes.length; i++) {","        var string = codes[i];","        if (string[position] === '0') {","          zero.push(string);","        } else {","          one.push(string);","        }","      }","      return [createTree(zero, position + 1), createTree(one, position + 1)];","    }","  }","","  this.tree = createTree(table);","","  this.codes = table.map(function(bits) {","    return parseInt(bits, 2);","  });","  this.lengths = table.map(function(bits) {","    return bits.length;","  });","}","","HuffmanTable.prototype.encode = function encode(buffer) {","  var result = [];","  var space = 8;","","  function add(data) {","    if (space === 8) {","      result.push(data);","    } else {","      result[result.length - 1] |= data;","    }","  }","","  for (var i = 0; i < buffer.length; i++) {","    var byte = buffer[i];","    var code = this.codes[byte];","    var length = this.lengths[byte];","","    while (length !== 0) {","      if (space >= length) {","        add(code << (space - length));","        code = 0;","        space -= length;","        length = 0;","      } else {","        var shift = length - space;","        var msb = code >> shift;","        add(msb);","        code -= msb << shift;","        length -= space;","        space = 0;","      }","","      if (space === 0) {","        space = 8;","      }","    }","  }","","  if (space !== 8) {","    add(this.codes[256] >> (this.lengths[256] - space));","  }","","  return new Buffer(result);","};","","HuffmanTable.prototype.decode = function decode(buffer) {","  var result = [];","  var subtree = this.tree;","","  for (var i = 0; i < buffer.length; i++) {","    var byte = buffer[i];","","    for (var j = 0; j < 8; j++) {","      var bit = (byte & 128) ? 1 : 0;","      byte = byte << 1;","","      subtree = subtree[bit];","      if (subtree.length === 1) {","        result.push(subtree[0]);","        subtree = this.tree;","      }","    }","  }","","  return new Buffer(result);","};","","// The initializer arrays for the Huffman tables are generated with feeding the tables from the","// spec to this sed command:","//","//     sed -e \"s/^.* [|]//g\" -e \"s/|//g\" -e \"s/ .*//g\" -e \"s/^/  '/g\" -e \"s/$/',/g\"","","HuffmanTable.huffmanTable = new HuffmanTable([","  '1111111111000',","  '11111111111111111011000',","  '1111111111111111111111100010',","  '1111111111111111111111100011',","  '1111111111111111111111100100',","  '1111111111111111111111100101',","  '1111111111111111111111100110',","  '1111111111111111111111100111',","  '1111111111111111111111101000',","  '111111111111111111101010',","  '111111111111111111111111111100',","  '1111111111111111111111101001',","  '1111111111111111111111101010',","  '111111111111111111111111111101',","  '1111111111111111111111101011',","  '1111111111111111111111101100',","  '1111111111111111111111101101',","  '1111111111111111111111101110',","  '1111111111111111111111101111',","  '1111111111111111111111110000',","  '1111111111111111111111110001',","  '1111111111111111111111110010',","  '111111111111111111111111111110',","  '1111111111111111111111110011',","  '1111111111111111111111110100',","  '1111111111111111111111110101',","  '1111111111111111111111110110',","  '1111111111111111111111110111',","  '1111111111111111111111111000',","  '1111111111111111111111111001',","  '1111111111111111111111111010',","  '1111111111111111111111111011',","  '010100',","  '1111111000',","  '1111111001',","  '111111111010',","  '1111111111001',","  '010101',","  '11111000',","  '11111111010',","  '1111111010',","  '1111111011',","  '11111001',","  '11111111011',","  '11111010',","  '010110',","  '010111',","  '011000',","  '00000',","  '00001',","  '00010',","  '011001',","  '011010',","  '011011',","  '011100',","  '011101',","  '011110',","  '011111',","  '1011100',","  '11111011',","  '111111111111100',","  '100000',","  '111111111011',","  '1111111100',","  '1111111111010',","  '100001',","  '1011101',","  '1011110',","  '1011111',","  '1100000',","  '1100001',","  '1100010',","  '1100011',","  '1100100',","  '1100101',","  '1100110',","  '1100111',","  '1101000',","  '1101001',","  '1101010',","  '1101011',","  '1101100',","  '1101101',","  '1101110',","  '1101111',","  '1110000',","  '1110001',","  '1110010',","  '11111100',","  '1110011',","  '11111101',","  '1111111111011',","  '1111111111111110000',","  '1111111111100',","  '11111111111100',","  '100010',","  '111111111111101',","  '00011',","  '100011',","  '00100',","  '100100',","  '00101',","  '100101',","  '100110',","  '100111',","  '00110',","  '1110100',","  '1110101',","  '101000',","  '101001',","  '101010',","  '00111',","  '101011',","  '1110110',","  '101100',","  '01000',","  '01001',","  '101101',","  '1110111',","  '1111000',","  '1111001',","  '1111010',","  '1111011',","  '111111111111110',","  '11111111100',","  '11111111111101',","  '1111111111101',","  '1111111111111111111111111100',","  '11111111111111100110',","  '1111111111111111010010',","  '11111111111111100111',","  '11111111111111101000',","  '1111111111111111010011',","  '1111111111111111010100',","  '1111111111111111010101',","  '11111111111111111011001',","  '1111111111111111010110',","  '11111111111111111011010',","  '11111111111111111011011',","  '11111111111111111011100',","  '11111111111111111011101',","  '11111111111111111011110',","  '111111111111111111101011',","  '11111111111111111011111',","  '111111111111111111101100',","  '111111111111111111101101',","  '1111111111111111010111',","  '11111111111111111100000',","  '111111111111111111101110',","  '11111111111111111100001',","  '11111111111111111100010',","  '11111111111111111100011',","  '11111111111111111100100',","  '111111111111111011100',","  '1111111111111111011000',","  '11111111111111111100101',","  '1111111111111111011001',","  '11111111111111111100110',","  '11111111111111111100111',","  '111111111111111111101111',","  '1111111111111111011010',","  '111111111111111011101',","  '11111111111111101001',","  '1111111111111111011011',","  '1111111111111111011100',","  '11111111111111111101000',","  '11111111111111111101001',","  '111111111111111011110',","  '11111111111111111101010',","  '1111111111111111011101',","  '1111111111111111011110',","  '111111111111111111110000',","  '111111111111111011111',","  '1111111111111111011111',","  '11111111111111111101011',","  '11111111111111111101100',","  '111111111111111100000',","  '111111111111111100001',","  '1111111111111111100000',","  '111111111111111100010',","  '11111111111111111101101',","  '1111111111111111100001',","  '11111111111111111101110',","  '11111111111111111101111',","  '11111111111111101010',","  '1111111111111111100010',","  '1111111111111111100011',","  '1111111111111111100100',","  '11111111111111111110000',","  '1111111111111111100101',","  '1111111111111111100110',","  '11111111111111111110001',","  '11111111111111111111100000',","  '11111111111111111111100001',","  '11111111111111101011',","  '1111111111111110001',","  '1111111111111111100111',","  '11111111111111111110010',","  '1111111111111111101000',","  '1111111111111111111101100',","  '11111111111111111111100010',","  '11111111111111111111100011',","  '11111111111111111111100100',","  '111111111111111111111011110',","  '111111111111111111111011111',","  '11111111111111111111100101',","  '111111111111111111110001',","  '1111111111111111111101101',","  '1111111111111110010',","  '111111111111111100011',","  '11111111111111111111100110',","  '111111111111111111111100000',","  '111111111111111111111100001',","  '11111111111111111111100111',","  '111111111111111111111100010',","  '111111111111111111110010',","  '111111111111111100100',","  '111111111111111100101',","  '11111111111111111111101000',","  '11111111111111111111101001',","  '1111111111111111111111111101',","  '111111111111111111111100011',","  '111111111111111111111100100',","  '111111111111111111111100101',","  '11111111111111101100',","  '111111111111111111110011',","  '11111111111111101101',","  '111111111111111100110',","  '1111111111111111101001',","  '111111111111111100111',","  '111111111111111101000',","  '11111111111111111110011',","  '1111111111111111101010',","  '1111111111111111101011',","  '1111111111111111111101110',","  '1111111111111111111101111',","  '111111111111111111110100',","  '111111111111111111110101',","  '11111111111111111111101010',","  '11111111111111111110100',","  '11111111111111111111101011',","  '111111111111111111111100110',","  '11111111111111111111101100',","  '11111111111111111111101101',","  '111111111111111111111100111',","  '111111111111111111111101000',","  '111111111111111111111101001',","  '111111111111111111111101010',","  '111111111111111111111101011',","  '1111111111111111111111111110',","  '111111111111111111111101100',","  '111111111111111111111101101',","  '111111111111111111111101110',","  '111111111111111111111101111',","  '111111111111111111111110000',","  '11111111111111111111101110',","  '111111111111111111111111111111'","]);","","// ### String literal representation ###","//","// Literal **strings** can represent header names or header values. There's two variant of the","// string encoding:","//","// String literal with Huffman encoding:","//","//       0   1   2   3   4   5   6   7","//     +---+---+---+---+---+---+---+---+","//     | 1 |  Value Length Prefix (7)  |","//     +---+---+---+---+---+---+---+---+","//     |   Value Length (0-N bytes)    |","//     +---+---+---+---+---+---+---+---+","//     ...","//     +---+---+---+---+---+---+---+---+","//     | Huffman Encoded Data  |Padding|","//     +---+---+---+---+---+---+---+---+","//","// String literal without Huffman encoding:","//","//       0   1   2   3   4   5   6   7","//     +---+---+---+---+---+---+---+---+","//     | 0 |  Value Length Prefix (7)  |","//     +---+---+---+---+---+---+---+---+","//     |   Value Length (0-N bytes)    |","//     +---+---+---+---+---+---+---+---+","//     ...","//     +---+---+---+---+---+---+---+---+","//     |  Field Bytes Without Encoding |","//     +---+---+---+---+---+---+---+---+","","HeaderSetCompressor.string = function writeString(str) {","  str = new Buffer(str, 'utf8');","","  var huffman = HuffmanTable.huffmanTable.encode(str);","  if (huffman.length < str.length) {","    var length = HeaderSetCompressor.integer(huffman.length, 7);","    length[0][0] |= 128;","    return length.concat(huffman);","  }","","  else {","    length = HeaderSetCompressor.integer(str.length, 7);","    return length.concat(str);","  }","};","","HeaderSetDecompressor.string = function readString(buffer) {","  var huffman = buffer[buffer.cursor] & 128;","  var length = HeaderSetDecompressor.integer(buffer, 7);","  var encoded = buffer.slice(buffer.cursor, buffer.cursor + length);","  buffer.cursor += length;","  return (huffman ? HuffmanTable.huffmanTable.decode(encoded) : encoded).toString('utf8');","};","","// ### Header represenations ###","","// The JavaScript object representation is described near the","// `HeaderSetDecompressor.prototype._execute()` method definition.","//","// **All binary header representations** start with a prefix signaling the representation type and","// an index represented using prefix coded integers:","//","//       0   1   2   3   4   5   6   7","//     +---+---+---+---+---+---+---+---+","//     | 1 |        Index (7+)         |  Indexed Representation","//     +---+---------------------------+","//","//       0   1   2   3   4   5   6   7","//     +---+---+---+---+---+---+---+---+","//     | 0 | 1 |      Index (6+)       |","//     +---+---+---+-------------------+  Literal w/ Indexing","//     |       Value Length (8+)       |","//     +-------------------------------+  w/ Indexed Name","//     | Value String (Length octets)  |","//     +-------------------------------+","//","//       0   1   2   3   4   5   6   7","//     +---+---+---+---+---+---+---+---+","//     | 0 | 1 |           0           |","//     +---+---+---+-------------------+","//     |       Name Length (8+)        |","//     +-------------------------------+  Literal w/ Indexing","//     |  Name String (Length octets)  |","//     +-------------------------------+  w/ New Name","//     |       Value Length (8+)       |","//     +-------------------------------+","//     | Value String (Length octets)  |","//     +-------------------------------+","//","//       0   1   2   3   4   5   6   7","//     +---+---+---+---+---+---+---+---+","//     | 0 | 0 | 0 | 0 |  Index (4+)   |","//     +---+---+---+-------------------+  Literal w/o Incremental Indexing","//     |       Value Length (8+)       |","//     +-------------------------------+  w/ Indexed Name","//     | Value String (Length octets)  |","//     +-------------------------------+","//","//       0   1   2   3   4   5   6   7","//     +---+---+---+---+---+---+---+---+","//     | 0 | 0 | 0 | 0 |       0       |","//     +---+---+---+-------------------+","//     |       Name Length (8+)        |","//     +-------------------------------+  Literal w/o Incremental Indexing","//     |  Name String (Length octets)  |","//     +-------------------------------+  w/ New Name","//     |       Value Length (8+)       |","//     +-------------------------------+","//     | Value String (Length octets)  |","//     +-------------------------------+","//","//       0   1   2   3   4   5   6   7","//     +---+---+---+---+---+---+---+---+","//     | 0 | 0 | 0 | 1 |  Index (4+)   |","//     +---+---+---+-------------------+  Literal never indexed","//     |       Value Length (8+)       |","//     +-------------------------------+  w/ Indexed Name","//     | Value String (Length octets)  |","//     +-------------------------------+","//","//       0   1   2   3   4   5   6   7","//     +---+---+---+---+---+---+---+---+","//     | 0 | 0 | 0 | 1 |       0       |","//     +---+---+---+-------------------+","//     |       Name Length (8+)        |","//     +-------------------------------+  Literal never indexed","//     |  Name String (Length octets)  |","//     +-------------------------------+  w/ New Name","//     |       Value Length (8+)       |","//     +-------------------------------+","//     | Value String (Length octets)  |","//     +-------------------------------+","//","// The **Indexed Representation** consists of the 1-bit prefix and the Index that is represented as","// a 7-bit prefix coded integer and nothing else.","//","// After the first bits, **all literal representations** specify the header name, either as a","// pointer to the Header Table (Index) or a string literal. When the string literal representation","// is used, the Index is set to 0 and the string literal starts at the second byte.","//","// For **all literal representations**, the specification of the header value comes next. It is","// always represented as a string.","","var representations = {","  indexed             : { prefix: 7, pattern: 0x80 },","  literalIncremental  : { prefix: 6, pattern: 0x40 },","  contextUpdate       : { prefix: 0, pattern: 0x20 },","  literalNeverIndexed : { prefix: 4, pattern: 0x10 },","  literal             : { prefix: 4, pattern: 0x00 }","};","","HeaderSetCompressor.header = function writeHeader(header) {","  var representation, buffers = [];","","  if (header.contextUpdate) {","    representation = representations.contextUpdate;","  } else if (typeof header.value === 'number') {","    representation = representations.indexed;","  } else if (header.index) {","    representation = representations.literalIncremental;","  } else if (header.mustNeverIndex) {","    representation = representations.literalNeverIndexed;","  } else {","    representation = representations.literal;","  }","","  if (representation === representations.contextUpdate) {","    buffers.push(HeaderSetCompressor.integer(header.newMaxSize, 5));","  }","","  else if (representation === representations.indexed) {","    buffers.push(HeaderSetCompressor.integer(header.value + 1, representation.prefix));","  }","","  else {","    if (typeof header.name === 'number') {","      buffers.push(HeaderSetCompressor.integer(header.name + 1, representation.prefix));","    } else {","      buffers.push(HeaderSetCompressor.integer(0, representation.prefix));","      buffers.push(HeaderSetCompressor.string(header.name));","    }","    buffers.push(HeaderSetCompressor.string(header.value));","  }","","  buffers[0][0][0] |= representation.pattern;","","  return Array.prototype.concat.apply([], buffers); // array of arrays of buffers -> array of buffers","};","","HeaderSetDecompressor.header = function readHeader(buffer) {","  var representation, header = {};","","  var firstByte = buffer[buffer.cursor];","  if (firstByte & 0x80) {","    representation = representations.indexed;","  } else if (firstByte & 0x40) {","    representation = representations.literalIncremental;","  } else if (firstByte & 0x20) {","    representation = representations.contextUpdate;","  } else if (firstByte & 0x10) {","    representation = representations.literalNeverIndexed;","  } else {","    representation = representations.literal;","  }","","  header.value = header.name = -1;","  header.index = false;","  header.contextUpdate = false;","  header.newMaxSize = 0;","  header.mustNeverIndex = false;","","  if (representation === representations.contextUpdate) {","    header.contextUpdate = true;","    header.newMaxSize = HeaderSetDecompressor.integer(buffer, 5);","  }","","  else if (representation === representations.indexed) {","    header.value = header.name = HeaderSetDecompressor.integer(buffer, representation.prefix) - 1;","  }","","  else {","    header.name = HeaderSetDecompressor.integer(buffer, representation.prefix) - 1;","    if (header.name === -1) {","      header.name = HeaderSetDecompressor.string(buffer);","    }","    header.value = HeaderSetDecompressor.string(buffer);","    header.index = (representation === representations.literalIncremental);","    header.mustNeverIndex = (representation === representations.literalNeverIndexed);","  }","","  return header;","};","","// Integration with HTTP/2","// =======================","","// This section describes the interaction between the compressor/decompressor and the rest of the","// HTTP/2 implementation. The `Compressor` and the `Decompressor` makes up a layer between the","// [framer](framer.html) and the [connection handling component](connection.html). They let most","// frames pass through, except HEADERS and PUSH_PROMISE frames. They convert the frames between","// these two representations:","//","//     {                                   {","//      type: 'HEADERS',                    type: 'HEADERS',","//      flags: {},                          flags: {},","//      stream: 1,               <===>      stream: 1,","//      headers: {                          data: Buffer","//       N1: 'V1',                         }","//       N2: ['V1', 'V2', ...],","//       // ...","//      }","//     }","//","// There are possibly several binary frame that belong to a single non-binary frame.","","var MAX_HTTP_PAYLOAD_SIZE = 16384;","","// The Compressor class","// --------------------","","// The Compressor transform stream is basically stateless.","util.inherits(Compressor, TransformStream);","function Compressor(log, type) {","  TransformStream.call(this, { objectMode: true });","","  this._log = log.child({ component: 'compressor' });","","  assert((type === 'REQUEST') || (type === 'RESPONSE'));","  this._table = new HeaderTable(this._log);","","  this.tableSizeChangePending = false;","  this.lowestTableSizePending = 0;","  this.tableSizeSetting = DEFAULT_HEADER_TABLE_LIMIT;","}","","// Changing the header table size","Compressor.prototype.setTableSizeLimit = function setTableSizeLimit(size) {","  this._table.setSizeLimit(size);","  if (!this.tableSizeChangePending || size < this.lowestTableSizePending) {","    this.lowestTableSizePending = size;","  }","  this.tableSizeSetting = size;","  this.tableSizeChangePending = true;","};","","// `compress` takes a header set, and compresses it using a new `HeaderSetCompressor` stream","// instance. This means that from now on, the advantages of streaming header encoding are lost,","// but the API becomes simpler.","Compressor.prototype.compress = function compress(headers) {","  var compressor = new HeaderSetCompressor(this._log, this._table);","","  if (this.tableSizeChangePending) {","    if (this.lowestTableSizePending < this.tableSizeSetting) {","      compressor.send({contextUpdate: true, newMaxSize: this.lowestTableSizePending,","                       name: \"\", value: \"\", index: 0});","    }","    compressor.send({contextUpdate: true, newMaxSize: this.tableSizeSetting,","                     name: \"\", value: \"\", index: 0});","    this.tableSizeChangePending = false;","  }","  var colonHeaders = [];","  var nonColonHeaders = [];","","  // To ensure we send colon headers first","  for (var name in headers) {","    if (name.trim()[0] === ':') {","      colonHeaders.push(name);","    } else {","      nonColonHeaders.push(name);","    }","  }","","  function compressHeader(name) {","    var value = headers[name];","    name = String(name).toLowerCase();","","    // * To allow for better compression efficiency, the Cookie header field MAY be split into","    //   separate header fields, each with one or more cookie-pairs.","    if (name == 'cookie') {","      if (!(value instanceof Array)) {","        value = [value];","      }","      value = Array.prototype.concat.apply([], value.map(function(cookie) {","        return String(cookie).split(';').map(trim);","      }));","    }","","    if (value instanceof Array) {","      for (var i = 0; i < value.length; i++) {","        compressor.write([name, String(value[i])]);","      }","    } else {","      compressor.write([name, String(value)]);","    }","  }","","  colonHeaders.forEach(compressHeader);","  nonColonHeaders.forEach(compressHeader);","","  compressor.end();","","  var chunk, chunks = [];","  while (chunk = compressor.read()) {","    chunks.push(chunk);","  }","  return concat(chunks);","};","","// When a `frame` arrives","Compressor.prototype._transform = function _transform(frame, encoding, done) {","  // * and it is a HEADERS or PUSH_PROMISE frame","  //   * it generates a header block using the compress method","  //   * cuts the header block into `chunks` that are not larger than `MAX_HTTP_PAYLOAD_SIZE`","  //   * for each chunk, it pushes out a chunk frame that is identical to the original, except","  //     the `data` property which holds the given chunk, the type of the frame which is always","  //     CONTINUATION except for the first frame, and the END_HEADERS/END_PUSH_STREAM flag that","  //     marks the last frame and the END_STREAM flag which is always false before the end","  if (frame.type === 'HEADERS' || frame.type === 'PUSH_PROMISE') {","    var buffer = this.compress(frame.headers);","","    // This will result in CONTINUATIONs from a PUSH_PROMISE being 4 bytes shorter than they could","    // be, but that's not the end of the world, and it prevents us from going over MAX_HTTP_PAYLOAD_SIZE","    // on the initial PUSH_PROMISE frame.","    var adjustment = frame.type === 'PUSH_PROMISE' ? 4 : 0;","    var chunks = cut(buffer, MAX_HTTP_PAYLOAD_SIZE - adjustment);","","    for (var i = 0; i < chunks.length; i++) {","      var chunkFrame;","      var first = (i === 0);","      var last = (i === chunks.length - 1);","","      if (first) {","        chunkFrame = util._extend({}, frame);","        chunkFrame.flags = util._extend({}, frame.flags);","        chunkFrame.flags['END_' + frame.type] = last;","      } else {","        chunkFrame = {","          type: 'CONTINUATION',","          flags: { END_HEADERS: last },","          stream: frame.stream","        };","      }","      chunkFrame.data = chunks[i];","","      this.push(chunkFrame);","    }","  }","","  // * otherwise, the frame is forwarded without taking any action","  else {","    this.push(frame);","  }","","  done();","};","","// The Decompressor class","// ----------------------","","// The Decompressor is a stateful transform stream, since it has to collect multiple frames first,","// and the decoding comes after unifying the payload of those frames.","//","// If there's a frame in progress, `this._inProgress` is `true`. The frames are collected in","// `this._frames`, and the type of the frame and the stream identifier is stored in `this._type`","// and `this._stream` respectively.","util.inherits(Decompressor, TransformStream);","function Decompressor(log, type) {","  TransformStream.call(this, { objectMode: true });","","  this._log = log.child({ component: 'compressor' });","","  assert((type === 'REQUEST') || (type === 'RESPONSE'));","  this._table = new HeaderTable(this._log);","","  this._inProgress = false;","  this._base = undefined;","}","","// Changing the header table size","Decompressor.prototype.setTableSizeLimit = function setTableSizeLimit(size) {","  this._table.setSizeLimit(size);","};","","// `decompress` takes a full header block, and decompresses it using a new `HeaderSetDecompressor`","// stream instance. This means that from now on, the advantages of streaming header decoding are","// lost, but the API becomes simpler.","Decompressor.prototype.decompress = function decompress(block) {","  var decompressor = new HeaderSetDecompressor(this._log, this._table);","  decompressor.end(block);","","  var seenNonColonHeader = false;","  var headers = {};","  var pair;","  while (pair = decompressor.read()) {","    var name = pair[0];","    var value = pair[1];","    var isColonHeader = (name.trim()[0] === ':');","    if (seenNonColonHeader && isColonHeader) {","        this.emit('error', 'PROTOCOL_ERROR');","        return headers;","    }","    seenNonColonHeader = !isColonHeader;","    if (name in headers) {","      if (headers[name] instanceof Array) {","        headers[name].push(value);","      } else {","        headers[name] = [headers[name], value];","      }","    } else {","      headers[name] = value;","    }","  }","","  // * If there are multiple Cookie header fields after decompression, these MUST be concatenated","  //   into a single octet string using the two octet delimiter of 0x3B, 0x20 (the ASCII","  //   string \"; \").","  if (('cookie' in headers) && (headers['cookie'] instanceof Array)) {","    headers['cookie'] = headers['cookie'].join('; ');","  }","","  return headers;","};","","// When a `frame` arrives","Decompressor.prototype._transform = function _transform(frame, encoding, done) {","  // * and the collection process is already `_inProgress`, the frame is simply stored, except if","  //   it's an illegal frame","  if (this._inProgress) {","    if ((frame.type !== 'CONTINUATION') || (frame.stream !== this._base.stream)) {","      this._log.error('A series of HEADER frames were not continuous');","      this.emit('error', 'PROTOCOL_ERROR');","      return;","    }","    this._frames.push(frame);","  }","","  // * and the collection process is not `_inProgress`, but the new frame's type is HEADERS or","  //   PUSH_PROMISE, a new collection process begins","  else if ((frame.type === 'HEADERS') || (frame.type === 'PUSH_PROMISE')) {","    this._inProgress = true;","    this._base = util._extend({}, frame);","    this._frames = [frame];","  }","","  // * otherwise, the frame is forwarded without taking any action","  else {","    this.push(frame);","  }","","  // * When the frame signals that it's the last in the series, the header block chunks are","  //   concatenated, the headers are decompressed, and a new frame gets pushed out with the","  //   decompressed headers.","  if (this._inProgress && (frame.flags.END_HEADERS || frame.flags.END_PUSH_PROMISE)) {","    var buffer = concat(this._frames.map(function(frame) {","      return frame.data;","    }));","    try {","      var headers = this.decompress(buffer);","    } catch(error) {","      this._log.error({ err: error }, 'Header decompression error');","      this.emit('error', 'COMPRESSION_ERROR');","      return;","    }","    this.push(util._extend(this._base, { headers: headers }));","    this._inProgress = false;","  }","","  done();","};","","// Helper functions","// ================","","// Concatenate an array of buffers into a new buffer","function concat(buffers) {","  var size = 0;","  for (var i = 0; i < buffers.length; i++) {","    size += buffers[i].length;","  }","","  var concatenated = new Buffer(size);","  for (var cursor = 0, j = 0; j < buffers.length; cursor += buffers[j].length, j++) {","    buffers[j].copy(concatenated, cursor);","  }","","  return concatenated;","}","","// Cut `buffer` into chunks not larger than `size`","function cut(buffer, size) {","  var chunks = [];","  var cursor = 0;","  do {","    var chunkSize = Math.min(size, buffer.length - cursor);","    chunks.push(buffer.slice(cursor, cursor + chunkSize));","    cursor += chunkSize;","  } while(cursor < buffer.length);","  return chunks;","}","","function trim(string) {","  return string.trim();","}",""],"l":{"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"25":1,"26":1,"27":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":1,"53":0,"54":0,"55":0,"66":1,"68":1,"69":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"97":0,"100":1,"101":0,"102":0,"104":0,"105":0,"106":0,"109":0,"113":1,"114":0,"115":0,"125":1,"199":1,"200":1,"201":0,"203":0,"204":0,"205":0,"211":1,"212":0,"213":0,"237":1,"238":0,"241":0,"243":0,"244":0,"249":0,"250":0,"251":0,"253":0,"254":0,"265":0,"266":0,"268":0,"271":0,"272":0,"273":0,"276":0,"284":1,"285":0,"288":0,"289":0,"290":0,"293":0,"308":1,"309":1,"310":0,"312":0,"313":0,"314":0,"317":1,"318":0,"321":0,"322":0,"324":0,"330":1,"331":0,"332":0,"333":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"349":0,"353":0,"354":0,"359":0,"361":0,"363":0,"364":0,"367":0,"370":0,"376":1,"377":0,"396":1,"397":0,"398":0,"399":0,"402":0,"403":0,"404":0,"406":0,"408":0,"409":0,"410":0,"411":0,"413":0,"414":0,"416":0,"418":0,"421":0,"437":1,"438":0,"440":0,"441":0,"442":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"454":0,"459":1,"460":1,"461":513,"462":257,"466":256,"467":256,"468":256,"469":256,"470":4688,"471":4688,"472":692,"474":3996,"477":256,"481":1,"483":1,"484":257,"486":1,"487":257,"491":1,"492":0,"493":0,"495":1,"496":0,"497":0,"499":0,"503":0,"504":0,"505":0,"506":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"523":0,"524":0,"529":0,"530":0,"533":0,"536":1,"537":0,"538":0,"540":0,"541":0,"543":0,"544":0,"545":0,"547":0,"548":0,"549":0,"550":0,"555":0,"563":1,"854":1,"855":0,"857":0,"858":0,"859":0,"860":0,"861":0,"865":0,"866":0,"870":1,"871":0,"872":0,"873":0,"874":0,"875":0,"967":1,"975":1,"976":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"987":0,"990":0,"991":0,"994":0,"995":0,"999":0,"1000":0,"1002":0,"1003":0,"1005":0,"1008":0,"1010":0,"1013":1,"1014":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1026":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1035":0,"1036":0,"1037":0,"1040":0,"1041":0,"1045":0,"1046":0,"1047":0,"1049":0,"1050":0,"1051":0,"1054":0,"1079":1,"1085":1,"1086":1,"1087":0,"1089":0,"1091":0,"1092":0,"1094":0,"1095":0,"1096":0,"1100":1,"1101":0,"1102":0,"1103":0,"1105":0,"1106":0,"1112":1,"1113":0,"1115":0,"1116":0,"1117":0,"1120":0,"1122":0,"1124":0,"1125":0,"1128":0,"1129":0,"1130":0,"1132":0,"1136":1,"1137":0,"1138":0,"1142":0,"1143":0,"1144":0,"1146":0,"1147":0,"1151":0,"1152":0,"1153":0,"1156":0,"1160":0,"1161":0,"1163":0,"1165":0,"1166":0,"1167":0,"1169":0,"1173":1,"1181":0,"1182":0,"1187":0,"1188":0,"1190":0,"1191":0,"1192":0,"1193":0,"1195":0,"1196":0,"1197":0,"1198":0,"1200":0,"1206":0,"1208":0,"1214":0,"1217":0,"1229":1,"1230":1,"1231":0,"1233":0,"1235":0,"1236":0,"1238":0,"1239":0,"1243":1,"1244":0,"1250":1,"1251":0,"1252":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1265":0,"1266":0,"1267":0,"1268":0,"1270":0,"1273":0,"1280":0,"1281":0,"1284":0,"1288":1,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1297":0,"1302":0,"1303":0,"1304":0,"1305":0,"1310":0,"1316":0,"1317":0,"1318":0,"1320":0,"1321":0,"1323":0,"1324":0,"1325":0,"1327":0,"1328":0,"1331":0,"1338":1,"1339":0,"1340":0,"1341":0,"1344":0,"1345":0,"1346":0,"1349":0,"1353":1,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1361":0,"1364":1,"1365":0}},"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/connection.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/connection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":1,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":1,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":0,"225":0,"226":0,"227":0,"228":0,"229":1,"230":0,"231":0,"232":0,"233":0,"234":0,"235":1,"236":1,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0},"b":{"1":[0,0],"2":[0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0,0],"27":[0,0],"28":[0,0,0,0,0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"Connection","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":50}}},"2":{"name":"_initializeStreamManagement","line":100,"loc":{"start":{"line":100,"column":51},"end":{"line":100,"column":103}}},"3":{"name":"_writeControlFrame","line":123,"loc":{"start":{"line":123,"column":42},"end":{"line":123,"column":77}}},"4":{"name":"_updateStreamLimit","line":136,"loc":{"start":{"line":136,"column":42},"end":{"line":136,"column":86}}},"5":{"name":"_changeStreamCount","line":145,"loc":{"start":{"line":145,"column":42},"end":{"line":145,"column":78}}},"6":{"name":"_allocateId","line":165,"loc":{"start":{"line":165,"column":35},"end":{"line":165,"column":68}}},"7":{"name":"_allocatePriority","line":200,"loc":{"start":{"line":200,"column":41},"end":{"line":200,"column":76}}},"8":{"name":"_insert","line":208,"loc":{"start":{"line":208,"column":31},"end":{"line":208,"column":66}}},"9":{"name":"_reprioritize","line":216,"loc":{"start":{"line":216,"column":37},"end":{"line":216,"column":78}}},"10":{"name":"_createIncomingStream","line":230,"loc":{"start":{"line":230,"column":45},"end":{"line":230,"column":80}}},"11":{"name":"createStream","line":242,"loc":{"start":{"line":242,"column":36},"end":{"line":242,"column":60}}},"12":{"name":"_initializeMultiplexing","line":255,"loc":{"start":{"line":255,"column":47},"end":{"line":255,"column":82}}},"13":{"name":"_send","line":263,"loc":{"start":{"line":263,"column":29},"end":{"line":263,"column":55}}},"14":{"name":"_receive","line":347,"loc":{"start":{"line":347,"column":32},"end":{"line":347,"column":63}}},"15":{"name":"_initializeSettingsManagement","line":405,"loc":{"start":{"line":405,"column":53},"end":{"line":405,"column":102}}},"16":{"name":"_onFirstFrameReceived","line":420,"loc":{"start":{"line":420,"column":45},"end":{"line":420,"column":83}}},"17":{"name":"_receiveSettings","line":430,"loc":{"start":{"line":430,"column":40},"end":{"line":430,"column":73}}},"18":{"name":"_sanityCheckMaxFrameSize","line":455,"loc":{"start":{"line":455,"column":48},"end":{"line":455,"column":89}}},"19":{"name":"set","line":463,"loc":{"start":{"line":463,"column":27},"end":{"line":463,"column":60}}},"20":{"name":"(anonymous_20)","line":466,"loc":{"start":{"line":466,"column":34},"end":{"line":466,"column":45}}},"21":{"name":"_initializeLifecycleManagement","line":497,"loc":{"start":{"line":497,"column":54},"end":{"line":497,"column":96}}},"22":{"name":"_generatePingId","line":505,"loc":{"start":{"line":505,"column":39},"end":{"line":505,"column":66}}},"23":{"name":"ping","line":516,"loc":{"start":{"line":516,"column":28},"end":{"line":516,"column":52}}},"24":{"name":"_receivePing","line":533,"loc":{"start":{"line":533,"column":36},"end":{"line":533,"column":65}}},"25":{"name":"close","line":561,"loc":{"start":{"line":561,"column":29},"end":{"line":561,"column":51}}},"26":{"name":"_receiveGoaway","line":579,"loc":{"start":{"line":579,"column":38},"end":{"line":579,"column":69}}},"27":{"name":"_initializeFlowControl","line":591,"loc":{"start":{"line":591,"column":46},"end":{"line":591,"column":80}}},"28":{"name":"(anonymous_28)","line":594,"loc":{"start":{"line":594,"column":24},"end":{"line":594,"column":41}}},"29":{"name":"noop","line":598,"loc":{"start":{"line":598,"column":49},"end":{"line":598,"column":65}}},"30":{"name":"_setInitialStreamWindowSize","line":608,"loc":{"start":{"line":608,"column":51},"end":{"line":608,"column":94}}},"31":{"name":"(anonymous_31)","line":615,"loc":{"start":{"line":615,"column":28},"end":{"line":615,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"4":{"start":{"line":39,"column":0},"end":{"line":60,"column":1}},"5":{"start":{"line":41,"column":2},"end":{"line":41,"column":21}},"6":{"start":{"line":44,"column":2},"end":{"line":44,"column":53}},"7":{"start":{"line":47,"column":2},"end":{"line":47,"column":50}},"8":{"start":{"line":50,"column":2},"end":{"line":50,"column":40}},"9":{"start":{"line":53,"column":2},"end":{"line":53,"column":32}},"10":{"start":{"line":56,"column":2},"end":{"line":56,"column":47}},"11":{"start":{"line":59,"column":2},"end":{"line":59,"column":33}},"12":{"start":{"line":61,"column":0},"end":{"line":61,"column":93}},"13":{"start":{"line":97,"column":0},"end":{"line":97,"column":41}},"14":{"start":{"line":100,"column":0},"end":{"line":119,"column":2}},"15":{"start":{"line":104,"column":2},"end":{"line":104,"column":23}},"16":{"start":{"line":105,"column":2},"end":{"line":105,"column":30}},"17":{"start":{"line":108,"column":2},"end":{"line":108,"column":37}},"18":{"start":{"line":109,"column":2},"end":{"line":109,"column":31}},"19":{"start":{"line":112,"column":2},"end":{"line":112,"column":83}},"20":{"start":{"line":116,"column":2},"end":{"line":116,"column":35}},"21":{"start":{"line":117,"column":2},"end":{"line":117,"column":31}},"22":{"start":{"line":118,"column":2},"end":{"line":118,"column":80}},"23":{"start":{"line":123,"column":0},"end":{"line":133,"column":2}},"24":{"start":{"line":124,"column":2},"end":{"line":132,"column":3}},"25":{"start":{"line":127,"column":4},"end":{"line":127,"column":74}},"26":{"start":{"line":128,"column":4},"end":{"line":128,"column":33}},"27":{"start":{"line":130,"column":4},"end":{"line":130,"column":72}},"28":{"start":{"line":131,"column":4},"end":{"line":131,"column":41}},"29":{"start":{"line":136,"column":0},"end":{"line":143,"column":2}},"30":{"start":{"line":137,"column":2},"end":{"line":137,"column":85}},"31":{"start":{"line":138,"column":2},"end":{"line":138,"column":62}},"32":{"start":{"line":139,"column":2},"end":{"line":139,"column":37}},"33":{"start":{"line":140,"column":2},"end":{"line":142,"column":3}},"34":{"start":{"line":141,"column":4},"end":{"line":141,"column":24}},"35":{"start":{"line":145,"column":0},"end":{"line":155,"column":2}},"36":{"start":{"line":146,"column":2},"end":{"line":154,"column":3}},"37":{"start":{"line":147,"column":4},"end":{"line":148,"column":53}},"38":{"start":{"line":149,"column":4},"end":{"line":149,"column":63}},"39":{"start":{"line":150,"column":4},"end":{"line":150,"column":36}},"40":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"41":{"start":{"line":152,"column":6},"end":{"line":152,"column":26}},"42":{"start":{"line":165,"column":0},"end":{"line":197,"column":2}},"43":{"start":{"line":167,"column":2},"end":{"line":183,"column":3}},"44":{"start":{"line":168,"column":4},"end":{"line":168,"column":28}},"45":{"start":{"line":169,"column":4},"end":{"line":169,"column":28}},"46":{"start":{"line":173,"column":7},"end":{"line":183,"column":3}},"47":{"start":{"line":174,"column":4},"end":{"line":174,"column":34}},"48":{"start":{"line":179,"column":4},"end":{"line":180,"column":51}},"49":{"start":{"line":181,"column":4},"end":{"line":181,"column":41}},"50":{"start":{"line":182,"column":4},"end":{"line":182,"column":21}},"51":{"start":{"line":185,"column":2},"end":{"line":185,"column":35}},"52":{"start":{"line":188,"column":2},"end":{"line":188,"column":77}},"53":{"start":{"line":189,"column":2},"end":{"line":189,"column":31}},"54":{"start":{"line":190,"column":2},"end":{"line":190,"column":17}},"55":{"start":{"line":191,"column":2},"end":{"line":191,"column":38}},"56":{"start":{"line":194,"column":2},"end":{"line":194,"column":62}},"57":{"start":{"line":196,"column":2},"end":{"line":196,"column":12}},"58":{"start":{"line":200,"column":0},"end":{"line":206,"column":2}},"59":{"start":{"line":201,"column":2},"end":{"line":201,"column":68}},"60":{"start":{"line":202,"column":2},"end":{"line":202,"column":41}},"61":{"start":{"line":203,"column":2},"end":{"line":203,"column":63}},"62":{"start":{"line":204,"column":2},"end":{"line":204,"column":65}},"63":{"start":{"line":205,"column":2},"end":{"line":205,"column":22}},"64":{"start":{"line":208,"column":0},"end":{"line":214,"column":2}},"65":{"start":{"line":209,"column":2},"end":{"line":213,"column":3}},"66":{"start":{"line":210,"column":4},"end":{"line":210,"column":50}},"67":{"start":{"line":212,"column":4},"end":{"line":212,"column":48}},"68":{"start":{"line":216,"column":0},"end":{"line":226,"column":2}},"69":{"start":{"line":217,"column":2},"end":{"line":217,"column":56}},"70":{"start":{"line":218,"column":2},"end":{"line":218,"column":37}},"71":{"start":{"line":219,"column":2},"end":{"line":219,"column":23}},"72":{"start":{"line":220,"column":2},"end":{"line":220,"column":26}},"73":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"74":{"start":{"line":222,"column":4},"end":{"line":222,"column":52}},"75":{"start":{"line":225,"column":2},"end":{"line":225,"column":33}},"76":{"start":{"line":230,"column":0},"end":{"line":239,"column":2}},"77":{"start":{"line":231,"column":2},"end":{"line":231,"column":61}},"78":{"start":{"line":233,"column":2},"end":{"line":233,"column":43}},"79":{"start":{"line":234,"column":2},"end":{"line":234,"column":31}},"80":{"start":{"line":235,"column":2},"end":{"line":235,"column":33}},"81":{"start":{"line":236,"column":2},"end":{"line":236,"column":34}},"82":{"start":{"line":238,"column":2},"end":{"line":238,"column":16}},"83":{"start":{"line":242,"column":0},"end":{"line":250,"column":2}},"84":{"start":{"line":243,"column":2},"end":{"line":243,"column":51}},"85":{"start":{"line":246,"column":2},"end":{"line":246,"column":43}},"86":{"start":{"line":247,"column":2},"end":{"line":247,"column":33}},"87":{"start":{"line":249,"column":2},"end":{"line":249,"column":16}},"88":{"start":{"line":255,"column":0},"end":{"line":259,"column":2}},"89":{"start":{"line":256,"column":2},"end":{"line":256,"column":59}},"90":{"start":{"line":257,"column":2},"end":{"line":257,"column":30}},"91":{"start":{"line":258,"column":2},"end":{"line":258,"column":35}},"92":{"start":{"line":263,"column":0},"end":{"line":343,"column":2}},"93":{"start":{"line":265,"column":2},"end":{"line":267,"column":3}},"94":{"start":{"line":266,"column":4},"end":{"line":266,"column":11}},"95":{"start":{"line":270,"column":2},"end":{"line":278,"column":3}},"96":{"start":{"line":271,"column":4},"end":{"line":271,"column":32}},"97":{"start":{"line":273,"column":4},"end":{"line":276,"column":5}},"98":{"start":{"line":274,"column":6},"end":{"line":274,"column":33}},"99":{"start":{"line":275,"column":6},"end":{"line":275,"column":48}},"100":{"start":{"line":277,"column":4},"end":{"line":277,"column":11}},"101":{"start":{"line":280,"column":2},"end":{"line":280,"column":62}},"102":{"start":{"line":283,"column":0},"end":{"line":335,"column":3}},"103":{"start":{"line":284,"column":2},"end":{"line":335,"column":3}},"104":{"start":{"line":285,"column":4},"end":{"line":285,"column":50}},"105":{"start":{"line":286,"column":4},"end":{"line":286,"column":24}},"106":{"start":{"line":299,"column":4},"end":{"line":334,"column":5}},"107":{"start":{"line":300,"column":6},"end":{"line":330,"column":7}},"108":{"start":{"line":301,"column":8},"end":{"line":301,"column":35}},"109":{"start":{"line":302,"column":8},"end":{"line":302,"column":81}},"110":{"start":{"line":304,"column":8},"end":{"line":309,"column":9}},"111":{"start":{"line":305,"column":10},"end":{"line":305,"column":19}},"112":{"start":{"line":306,"column":15},"end":{"line":309,"column":9}},"113":{"start":{"line":307,"column":10},"end":{"line":307,"column":41}},"114":{"start":{"line":308,"column":10},"end":{"line":308,"column":19}},"115":{"start":{"line":311,"column":8},"end":{"line":311,"column":32}},"116":{"start":{"line":313,"column":8},"end":{"line":315,"column":9}},"117":{"start":{"line":314,"column":10},"end":{"line":314,"column":63}},"118":{"start":{"line":317,"column":8},"end":{"line":320,"column":9}},"119":{"start":{"line":318,"column":10},"end":{"line":318,"column":56}},"120":{"start":{"line":319,"column":10},"end":{"line":319,"column":74}},"121":{"start":{"line":322,"column":8},"end":{"line":322,"column":82}},"122":{"start":{"line":323,"column":8},"end":{"line":323,"column":42}},"123":{"start":{"line":324,"column":8},"end":{"line":324,"column":52}},"124":{"start":{"line":326,"column":8},"end":{"line":326,"column":36}},"125":{"start":{"line":327,"column":8},"end":{"line":329,"column":9}},"126":{"start":{"line":328,"column":10},"end":{"line":328,"column":30}},"127":{"start":{"line":332,"column":6},"end":{"line":332,"column":26}},"128":{"start":{"line":333,"column":6},"end":{"line":333,"column":22}},"129":{"start":{"line":338,"column":2},"end":{"line":340,"column":3}},"130":{"start":{"line":339,"column":4},"end":{"line":339,"column":47}},"131":{"start":{"line":342,"column":2},"end":{"line":342,"column":90}},"132":{"start":{"line":347,"column":0},"end":{"line":396,"column":2}},"133":{"start":{"line":348,"column":2},"end":{"line":348,"column":65}},"134":{"start":{"line":351,"column":2},"end":{"line":354,"column":3}},"135":{"start":{"line":352,"column":4},"end":{"line":352,"column":36}},"136":{"start":{"line":353,"column":4},"end":{"line":353,"column":38}},"137":{"start":{"line":357,"column":2},"end":{"line":374,"column":3}},"138":{"start":{"line":362,"column":4},"end":{"line":362,"column":33}},"139":{"start":{"line":363,"column":4},"end":{"line":363,"column":11}},"140":{"start":{"line":364,"column":9},"end":{"line":374,"column":3}},"141":{"start":{"line":372,"column":4},"end":{"line":372,"column":33}},"142":{"start":{"line":373,"column":4},"end":{"line":373,"column":11}},"143":{"start":{"line":378,"column":2},"end":{"line":378,"column":45}},"144":{"start":{"line":381,"column":2},"end":{"line":383,"column":3}},"145":{"start":{"line":382,"column":4},"end":{"line":382,"column":54}},"146":{"start":{"line":386,"column":2},"end":{"line":388,"column":3}},"147":{"start":{"line":387,"column":4},"end":{"line":387,"column":78}},"148":{"start":{"line":390,"column":2},"end":{"line":390,"column":58}},"149":{"start":{"line":393,"column":2},"end":{"line":393,"column":31}},"150":{"start":{"line":395,"column":2},"end":{"line":395,"column":9}},"151":{"start":{"line":401,"column":0},"end":{"line":402,"column":2}},"152":{"start":{"line":405,"column":0},"end":{"line":417,"column":2}},"153":{"start":{"line":407,"column":2},"end":{"line":407,"column":34}},"154":{"start":{"line":410,"column":2},"end":{"line":411,"column":88}},"155":{"start":{"line":412,"column":2},"end":{"line":412,"column":40}},"156":{"start":{"line":415,"column":2},"end":{"line":415,"column":45}},"157":{"start":{"line":416,"column":2},"end":{"line":416,"column":78}},"158":{"start":{"line":420,"column":0},"end":{"line":427,"column":2}},"159":{"start":{"line":421,"column":2},"end":{"line":426,"column":3}},"160":{"start":{"line":422,"column":4},"end":{"line":422,"column":92}},"161":{"start":{"line":424,"column":4},"end":{"line":424,"column":97}},"162":{"start":{"line":425,"column":4},"end":{"line":425,"column":41}},"163":{"start":{"line":430,"column":0},"end":{"line":453,"column":2}},"164":{"start":{"line":432,"column":2},"end":{"line":452,"column":3}},"165":{"start":{"line":433,"column":4},"end":{"line":433,"column":54}},"166":{"start":{"line":434,"column":4},"end":{"line":436,"column":5}},"167":{"start":{"line":435,"column":6},"end":{"line":435,"column":17}},"168":{"start":{"line":441,"column":4},"end":{"line":448,"column":5}},"169":{"start":{"line":442,"column":6},"end":{"line":447,"column":9}},"170":{"start":{"line":449,"column":4},"end":{"line":451,"column":5}},"171":{"start":{"line":450,"column":6},"end":{"line":450,"column":59}},"172":{"start":{"line":455,"column":0},"end":{"line":460,"column":2}},"173":{"start":{"line":456,"column":2},"end":{"line":459,"column":3}},"174":{"start":{"line":457,"column":4},"end":{"line":457,"column":75}},"175":{"start":{"line":458,"column":4},"end":{"line":458,"column":23}},"176":{"start":{"line":463,"column":0},"end":{"line":485,"column":2}},"177":{"start":{"line":465,"column":2},"end":{"line":465,"column":18}},"178":{"start":{"line":466,"column":2},"end":{"line":473,"column":5}},"179":{"start":{"line":467,"column":4},"end":{"line":469,"column":5}},"180":{"start":{"line":468,"column":6},"end":{"line":468,"column":56}},"181":{"start":{"line":470,"column":4},"end":{"line":472,"column":5}},"182":{"start":{"line":471,"column":6},"end":{"line":471,"column":17}},"183":{"start":{"line":476,"column":2},"end":{"line":481,"column":5}},"184":{"start":{"line":482,"column":2},"end":{"line":484,"column":3}},"185":{"start":{"line":483,"column":4},"end":{"line":483,"column":49}},"186":{"start":{"line":497,"column":0},"end":{"line":502,"column":2}},"187":{"start":{"line":498,"column":2},"end":{"line":498,"column":19}},"188":{"start":{"line":499,"column":2},"end":{"line":499,"column":37}},"189":{"start":{"line":500,"column":2},"end":{"line":500,"column":41}},"190":{"start":{"line":501,"column":2},"end":{"line":501,"column":23}},"191":{"start":{"line":505,"column":0},"end":{"line":513,"column":2}},"192":{"start":{"line":506,"column":2},"end":{"line":511,"column":29}},"193":{"start":{"line":507,"column":4},"end":{"line":507,"column":16}},"194":{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},"195":{"start":{"line":509,"column":6},"end":{"line":509,"column":54}},"196":{"start":{"line":512,"column":2},"end":{"line":512,"column":12}},"197":{"start":{"line":516,"column":0},"end":{"line":530,"column":2}},"198":{"start":{"line":517,"column":2},"end":{"line":517,"column":34}},"199":{"start":{"line":518,"column":2},"end":{"line":518,"column":35}},"200":{"start":{"line":519,"column":2},"end":{"line":519,"column":29}},"201":{"start":{"line":521,"column":2},"end":{"line":521,"column":51}},"202":{"start":{"line":522,"column":2},"end":{"line":529,"column":5}},"203":{"start":{"line":533,"column":0},"end":{"line":558,"column":2}},"204":{"start":{"line":534,"column":2},"end":{"line":557,"column":3}},"205":{"start":{"line":535,"column":4},"end":{"line":535,"column":40}},"206":{"start":{"line":536,"column":4},"end":{"line":545,"column":5}},"207":{"start":{"line":537,"column":6},"end":{"line":537,"column":76}},"208":{"start":{"line":538,"column":6},"end":{"line":538,"column":37}},"209":{"start":{"line":539,"column":6},"end":{"line":541,"column":7}},"210":{"start":{"line":540,"column":8},"end":{"line":540,"column":19}},"211":{"start":{"line":542,"column":6},"end":{"line":542,"column":29}},"212":{"start":{"line":544,"column":6},"end":{"line":544,"column":71}},"213":{"start":{"line":548,"column":4},"end":{"line":548,"column":61}},"214":{"start":{"line":549,"column":4},"end":{"line":556,"column":7}},"215":{"start":{"line":561,"column":0},"end":{"line":577,"column":2}},"216":{"start":{"line":562,"column":2},"end":{"line":565,"column":3}},"217":{"start":{"line":563,"column":4},"end":{"line":563,"column":67}},"218":{"start":{"line":564,"column":4},"end":{"line":564,"column":11}},"219":{"start":{"line":567,"column":2},"end":{"line":567,"column":62}},"220":{"start":{"line":568,"column":2},"end":{"line":574,"column":5}},"221":{"start":{"line":575,"column":2},"end":{"line":575,"column":18}},"222":{"start":{"line":576,"column":2},"end":{"line":576,"column":22}},"223":{"start":{"line":579,"column":0},"end":{"line":586,"column":2}},"224":{"start":{"line":580,"column":2},"end":{"line":580,"column":77}},"225":{"start":{"line":581,"column":2},"end":{"line":581,"column":18}},"226":{"start":{"line":582,"column":2},"end":{"line":582,"column":22}},"227":{"start":{"line":583,"column":2},"end":{"line":585,"column":3}},"228":{"start":{"line":584,"column":4},"end":{"line":584,"column":40}},"229":{"start":{"line":591,"column":0},"end":{"line":599,"column":2}},"230":{"start":{"line":593,"column":2},"end":{"line":593,"column":61}},"231":{"start":{"line":594,"column":2},"end":{"line":596,"column":5}},"232":{"start":{"line":595,"column":4},"end":{"line":595,"column":68}},"233":{"start":{"line":597,"column":2},"end":{"line":597,"column":86}},"234":{"start":{"line":598,"column":2},"end":{"line":598,"column":68}},"235":{"start":{"line":602,"column":0},"end":{"line":602,"column":39}},"236":{"start":{"line":608,"column":0},"end":{"line":619,"column":2}},"237":{"start":{"line":609,"column":2},"end":{"line":618,"column":3}},"238":{"start":{"line":610,"column":4},"end":{"line":610,"column":112}},"239":{"start":{"line":611,"column":4},"end":{"line":611,"column":45}},"240":{"start":{"line":613,"column":4},"end":{"line":613,"column":76}},"241":{"start":{"line":614,"column":4},"end":{"line":614,"column":41}},"242":{"start":{"line":615,"column":4},"end":{"line":617,"column":7}},"243":{"start":{"line":616,"column":6},"end":{"line":616,"column":45}}},"branchMap":{"1":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"2":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":7},"end":{"line":124,"column":32}},{"start":{"line":124,"column":38},"end":{"line":124,"column":59}},{"start":{"line":125,"column":7},"end":{"line":125,"column":30}},{"start":{"line":125,"column":36},"end":{"line":125,"column":66}},{"start":{"line":126,"column":7},"end":{"line":126,"column":30}}]},"3":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":16},"end":{"line":137,"column":43}},{"start":{"line":137,"column":49},"end":{"line":137,"column":83}}]},"4":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"5":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"6":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":18},"end":{"line":149,"column":45}},{"start":{"line":149,"column":51},"end":{"line":149,"column":61}}]},"7":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"8":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"9":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":7},"end":{"line":173,"column":7}},{"start":{"line":173,"column":7},"end":{"line":173,"column":7}}]},"10":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":12},"end":{"line":173,"column":41}},{"start":{"line":173,"column":47},"end":{"line":173,"column":82}}]},"11":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"12":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"13":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":2},"end":{"line":265,"column":2}},{"start":{"line":265,"column":2},"end":{"line":265,"column":2}}]},"14":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]},"15":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":4},"end":{"line":273,"column":4}},{"start":{"line":273,"column":4},"end":{"line":273,"column":4}}]},"16":{"line":302,"type":"cond-expr","locations":[{"start":{"line":302,"column":62},"end":{"line":302,"column":74}},{"start":{"line":302,"column":77},"end":{"line":302,"column":79}}]},"17":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":8},"end":{"line":304,"column":8}},{"start":{"line":304,"column":8},"end":{"line":304,"column":8}}]},"18":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":15},"end":{"line":306,"column":15}},{"start":{"line":306,"column":15},"end":{"line":306,"column":15}}]},"19":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":8},"end":{"line":313,"column":8}},{"start":{"line":313,"column":8},"end":{"line":313,"column":8}}]},"20":{"line":314,"type":"binary-expr","locations":[{"start":{"line":314,"column":25},"end":{"line":314,"column":34}},{"start":{"line":314,"column":38},"end":{"line":314,"column":62}}]},"21":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":8},"end":{"line":317,"column":8}},{"start":{"line":317,"column":8},"end":{"line":317,"column":8}}]},"22":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":8},"end":{"line":327,"column":8}},{"start":{"line":327,"column":8},"end":{"line":327,"column":8}}]},"23":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":2},"end":{"line":338,"column":2}},{"start":{"line":338,"column":2},"end":{"line":338,"column":2}}]},"24":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":2},"end":{"line":351,"column":2}},{"start":{"line":351,"column":2},"end":{"line":351,"column":2}}]},"25":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"26":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":7},"end":{"line":357,"column":31}},{"start":{"line":358,"column":7},"end":{"line":358,"column":27}},{"start":{"line":359,"column":7},"end":{"line":359,"column":29}},{"start":{"line":360,"column":6},"end":{"line":360,"column":23}}]},"27":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":9},"end":{"line":364,"column":9}},{"start":{"line":364,"column":9},"end":{"line":364,"column":9}}]},"28":{"line":364,"type":"binary-expr","locations":[{"start":{"line":364,"column":14},"end":{"line":364,"column":34}},{"start":{"line":365,"column":14},"end":{"line":365,"column":37}},{"start":{"line":366,"column":14},"end":{"line":366,"column":38}},{"start":{"line":367,"column":14},"end":{"line":367,"column":40}},{"start":{"line":368,"column":14},"end":{"line":368,"column":42}},{"start":{"line":369,"column":14},"end":{"line":369,"column":42}},{"start":{"line":370,"column":13},"end":{"line":370,"column":30}}]},"29":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":2},"end":{"line":381,"column":2}},{"start":{"line":381,"column":2},"end":{"line":381,"column":2}}]},"30":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":2},"end":{"line":386,"column":2}},{"start":{"line":386,"column":2},"end":{"line":386,"column":2}}]},"31":{"line":412,"type":"binary-expr","locations":[{"start":{"line":412,"column":11},"end":{"line":412,"column":19}},{"start":{"line":412,"column":23},"end":{"line":412,"column":38}}]},"32":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":2},"end":{"line":421,"column":2}},{"start":{"line":421,"column":2},"end":{"line":421,"column":2}}]},"33":{"line":421,"type":"binary-expr","locations":[{"start":{"line":421,"column":7},"end":{"line":421,"column":25}},{"start":{"line":421,"column":31},"end":{"line":421,"column":56}}]},"34":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":2},"end":{"line":432,"column":2}},{"start":{"line":432,"column":2},"end":{"line":432,"column":2}}]},"35":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":4},"end":{"line":434,"column":4}},{"start":{"line":434,"column":4},"end":{"line":434,"column":4}}]},"36":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":4},"end":{"line":441,"column":4}},{"start":{"line":441,"column":4},"end":{"line":441,"column":4}}]},"37":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":2},"end":{"line":456,"column":2}},{"start":{"line":456,"column":2},"end":{"line":456,"column":2}}]},"38":{"line":456,"type":"binary-expr","locations":[{"start":{"line":456,"column":7},"end":{"line":456,"column":21}},{"start":{"line":456,"column":27},"end":{"line":456,"column":46}}]},"39":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":4},"end":{"line":470,"column":4}},{"start":{"line":470,"column":4},"end":{"line":470,"column":4}}]},"40":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":2},"end":{"line":534,"column":2}},{"start":{"line":534,"column":2},"end":{"line":534,"column":2}}]},"41":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":4},"end":{"line":536,"column":4}},{"start":{"line":536,"column":4},"end":{"line":536,"column":4}}]},"42":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":6},"end":{"line":539,"column":6}},{"start":{"line":539,"column":6},"end":{"line":539,"column":6}}]},"43":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":2},"end":{"line":562,"column":2}},{"start":{"line":562,"column":2},"end":{"line":562,"column":2}}]},"44":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":11},"end":{"line":573,"column":16}},{"start":{"line":573,"column":20},"end":{"line":573,"column":30}}]},"45":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":2},"end":{"line":583,"column":2}},{"start":{"line":583,"column":2},"end":{"line":583,"column":2}}]},"46":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":2},"end":{"line":609,"column":2}},{"start":{"line":609,"column":2},"end":{"line":609,"column":2}}]},"47":{"line":609,"type":"binary-expr","locations":[{"start":{"line":609,"column":7},"end":{"line":609,"column":49}},{"start":{"line":609,"column":55},"end":{"line":609,"column":72}}]}},"code":["var assert = require('assert');","","// The Connection class","// ====================","","// The Connection class manages HTTP/2 connections. Each instance corresponds to one transport","// stream (TCP stream). It operates by sending and receiving frames and is implemented as a","// [Flow](flow.html) subclass.","","var Flow = require('./flow').Flow;","","exports.Connection = Connection;","","// Public API","// ----------","","// * **new Connection(log, firstStreamId, settings)**: create a new Connection","//","// * **Event: 'error' (type)**: signals a connection level error made by the other end","//","// * **Event: 'peerError' (type)**: signals the receipt of a GOAWAY frame that contains an error","//   code other than NO_ERROR","//","// * **Event: 'stream' (stream)**: signals that there's an incoming stream","//","// * **createStream(): stream**: initiate a new stream","//","// * **set(settings, callback)**: change the value of one or more settings according to the","//   key-value pairs of `settings`. The callback is called after the peer acknowledged the changes.","//","// * **ping([callback])**: send a ping and call callback when the answer arrives","//","// * **close([error])**: close the stream with an error code","","// Constructor","// -----------","","// The main aspects of managing the connection are:","function Connection(log, firstStreamId, settings) {","  // * initializing the base class","  Flow.call(this, 0);","","  // * logging: every method uses the common logger object","  this._log = log.child({ component: 'connection' });","","  // * stream management","  this._initializeStreamManagement(firstStreamId);","","  // * lifecycle management","  this._initializeLifecycleManagement();","","  // * flow control","  this._initializeFlowControl();","","  // * settings management","  this._initializeSettingsManagement(settings);","","  // * multiplexing","  this._initializeMultiplexing();","}","Connection.prototype = Object.create(Flow.prototype, { constructor: { value: Connection } });","","// Overview","// --------","","//              |    ^             |    ^","//              v    |             v    |","//         +--------------+   +--------------+","//     +---|   stream1    |---|   stream2    |----      ....      ---+","//     |   | +----------+ |   | +----------+ |                       |","//     |   | | stream1. | |   | | stream2. | |                       |","//     |   +-| upstream |-+   +-| upstream |-+                       |","//     |     +----------+       +----------+                         |","//     |       |     ^             |     ^                           |","//     |       v     |             v     |                           |","//     |       +-----+-------------+-----+--------      ....         |","//     |       ^     |             |     |                           |","//     |       |     v             |     |                           |","//     |   +--------------+        |     |                           |","//     |   |   stream0    |        |     |                           |","//     |   |  connection  |        |     |                           |","//     |   |  management  |     multiplexing                         |","//     |   +--------------+     flow control                         |","//     |                           |     ^                           |","//     |                   _read() |     | _write()                  |","//     |                           v     |                           |","//     |                +------------+ +-----------+                 |","//     |                |output queue| |input queue|                 |","//     +----------------+------------+-+-----------+-----------------+","//                                 |     ^","//                          read() |     | write()","//                                 v     |","","// Stream management","// -----------------","","var Stream  = require('./stream').Stream;","","// Initialization:","Connection.prototype._initializeStreamManagement = function _initializeStreamManagement(firstStreamId) {","  // * streams are stored in two data structures:","  //   * `_streamIds` is an id -> stream map of the streams that are allowed to receive frames.","  //   * `_streamPriorities` is a priority -> [stream] map of stream that allowed to send frames.","  this._streamIds = [];","  this._streamPriorities = [];","","  // * The next outbound stream ID and the last inbound stream id","  this._nextStreamId = firstStreamId;","  this._lastIncomingStream = 0;","","  // * Calling `_writeControlFrame` when there's an incoming stream with 0 as stream ID","  this._streamIds[0] = { upstream: { write: this._writeControlFrame.bind(this) } };","","  // * By default, the number of concurrent outbound streams is not limited. The `_streamLimit` can","  //   be set by the SETTINGS_MAX_CONCURRENT_STREAMS setting.","  this._streamSlotsFree = Infinity;","  this._streamLimit = Infinity;","  this.on('RECEIVING_SETTINGS_MAX_CONCURRENT_STREAMS', this._updateStreamLimit);","};","","// `_writeControlFrame` is called when there's an incoming frame in the `_control` stream. It","// broadcasts the message by creating an event on it.","Connection.prototype._writeControlFrame = function _writeControlFrame(frame) {","  if ((frame.type === 'SETTINGS') || (frame.type === 'PING') ||","      (frame.type === 'GOAWAY') || (frame.type === 'WINDOW_UPDATE') ||","      (frame.type === 'ALTSVC')) {","    this._log.debug({ frame: frame }, 'Receiving connection level frame');","    this.emit(frame.type, frame);","  } else {","    this._log.error({ frame: frame }, 'Invalid connection level frame');","    this.emit('error', 'PROTOCOL_ERROR');","  }","};","","// Methods to manage the stream slot pool:","Connection.prototype._updateStreamLimit = function _updateStreamLimit(newStreamLimit) {","  var wakeup = (this._streamSlotsFree === 0) && (newStreamLimit > this._streamLimit);","  this._streamSlotsFree += newStreamLimit - this._streamLimit;","  this._streamLimit = newStreamLimit;","  if (wakeup) {","    this.emit('wakeup');","  }","};","","Connection.prototype._changeStreamCount = function _changeStreamCount(change) {","  if (change) {","    this._log.trace({ free: this._streamSlotsFree, change: change },","                    'Changing active stream count.');","    var wakeup = (this._streamSlotsFree === 0) && (change < 0);","    this._streamSlotsFree -= change;","    if (wakeup) {","      this.emit('wakeup');","    }","  }","};","","// Creating a new *inbound or outbound* stream with the given `id` (which is undefined in case of","// an outbound stream) consists of three steps:","//","// 1. var stream = new Stream(this._log, this);","// 2. this._allocateId(stream, id);","// 2. this._allocatePriority(stream);","","// Allocating an ID to a stream","Connection.prototype._allocateId = function _allocateId(stream, id) {","  // * initiated stream without definite ID","  if (id === undefined) {","    id = this._nextStreamId;","    this._nextStreamId += 2;","  }","","  // * incoming stream with a legitim ID (larger than any previous and different parity than ours)","  else if ((id > this._lastIncomingStream) && ((id - this._nextStreamId) % 2 !== 0)) {","    this._lastIncomingStream = id;","  }","","  // * incoming stream with invalid ID","  else {","    this._log.error({ stream_id: id, lastIncomingStream: this._lastIncomingStream },","                    'Invalid incoming stream ID.');","    this.emit('error', 'PROTOCOL_ERROR');","    return undefined;","  }","","  assert(!(id in this._streamIds));","","  // * adding to `this._streamIds`","  this._log.trace({ s: stream, stream_id: id }, 'Allocating ID for stream.');","  this._streamIds[id] = stream;","  stream.id = id;","  this.emit('new_stream', stream, id);","","  // * forwarding connection errors from streams","  stream.on('connectionError', this.emit.bind(this, 'error'));","","  return id;","};","","// Allocating a priority to a stream, and managing priority changes","Connection.prototype._allocatePriority = function _allocatePriority(stream) {","  this._log.trace({ s: stream }, 'Allocating priority for stream.');","  this._insert(stream, stream._priority);","  stream.on('priority', this._reprioritize.bind(this, stream));","  stream.upstream.on('readable', this.emit.bind(this, 'wakeup'));","  this.emit('wakeup');","};","","Connection.prototype._insert = function _insert(stream, priority) {","  if (priority in this._streamPriorities) {","    this._streamPriorities[priority].push(stream);","  } else {","    this._streamPriorities[priority] = [stream];","  }","};","","Connection.prototype._reprioritize = function _reprioritize(stream, priority) {","  var bucket = this._streamPriorities[stream._priority];","  var index = bucket.indexOf(stream);","  assert(index !== -1);","  bucket.splice(index, 1);","  if (bucket.length === 0) {","    delete this._streamPriorities[stream._priority];","  }","","  this._insert(stream, priority);","};","","// Creating an *inbound* stream with the given ID. It is called when there's an incoming frame to","// a previously nonexistent stream.","Connection.prototype._createIncomingStream = function _createIncomingStream(id) {","  this._log.debug({ stream_id: id }, 'New incoming stream.');","","  var stream = new Stream(this._log, this);","  this._allocateId(stream, id);","  this._allocatePriority(stream);","  this.emit('stream', stream, id);","","  return stream;","};","","// Creating an *outbound* stream","Connection.prototype.createStream = function createStream() {","  this._log.trace('Creating new outbound stream.');","","  // * Receiving is enabled immediately, and an ID gets assigned to the stream","  var stream = new Stream(this._log, this);","  this._allocatePriority(stream);","","  return stream;","};","","// Multiplexing","// ------------","","Connection.prototype._initializeMultiplexing = function _initializeMultiplexing() {","  this.on('window_update', this.emit.bind(this, 'wakeup'));","  this._sendScheduled = false;","  this._firstFrameReceived = false;","};","","// The `_send` method is a virtual method of the [Flow class](flow.html) that has to be implemented","// by child classes. It reads frames from streams and pushes them to the output buffer.","Connection.prototype._send = function _send(immediate) {","  // * Do not do anything if the connection is already closed","  if (this._closed) {","    return;","  }","","  // * Collapsing multiple calls in a turn into a single deferred call","  if (immediate) {","    this._sendScheduled = false;","  } else {","    if (!this._sendScheduled) {","      this._sendScheduled = true;","      setImmediate(this._send.bind(this, true));","    }","    return;","  }","","  this._log.trace('Starting forwarding frames from streams.');","","  // * Looping through priority `bucket`s in priority order.","priority_loop:","  for (var priority in this._streamPriorities) {","    var bucket = this._streamPriorities[priority];","    var nextBucket = [];","","    // * Forwarding frames from buckets with round-robin scheduling.","    //   1. pulling out frame","    //   2. if there's no frame, skip this stream","    //   3. if forwarding this frame would make `streamCount` greater than `streamLimit`, skip","    //      this stream","    //   4. adding stream to the bucket of the next round","    //   5. assigning an ID to the frame (allocating an ID to the stream if there isn't already)","    //   6. if forwarding a PUSH_PROMISE, allocate ID to the promised stream","    //   7. forwarding the frame, changing `streamCount` as appropriate","    //   8. stepping to the next stream if there's still more frame needed in the output buffer","    //   9. switching to the bucket of the next round","    while (bucket.length > 0) {","      for (var index = 0; index < bucket.length; index++) {","        var stream = bucket[index];","        var frame = stream.upstream.read((this._window > 0) ? this._window : -1);","","        if (!frame) {","          continue;","        } else if (frame.count_change > this._streamSlotsFree) {","          stream.upstream.unshift(frame);","          continue;","        }","","        nextBucket.push(stream);","","        if (frame.stream === undefined) {","          frame.stream = stream.id || this._allocateId(stream);","        }","","        if (frame.type === 'PUSH_PROMISE') {","          this._allocatePriority(frame.promised_stream);","          frame.promised_stream = this._allocateId(frame.promised_stream);","        }","","        this._log.trace({ s: stream, frame: frame }, 'Forwarding outgoing frame');","        var moreNeeded = this.push(frame);","        this._changeStreamCount(frame.count_change);","","        assert(moreNeeded !== null); // The frame shouldn't be unforwarded","        if (moreNeeded === false) {","          break priority_loop;","        }","      }","","      bucket = nextBucket;","      nextBucket = [];","    }","  }","","  // * if we couldn't forward any frame, then sleep until window update, or some other wakeup event","  if (moreNeeded === undefined) {","    this.once('wakeup', this._send.bind(this));","  }","","  this._log.trace({ moreNeeded: moreNeeded }, 'Stopping forwarding frames from streams.');","};","","// The `_receive` method is another virtual method of the [Flow class](flow.html) that has to be","// implemented by child classes. It forwards the given frame to the appropriate stream:","Connection.prototype._receive = function _receive(frame, done) {","  this._log.trace({ frame: frame }, 'Forwarding incoming frame');","","  // * first frame needs to be checked by the `_onFirstFrameReceived` method","  if (!this._firstFrameReceived) {","    this._firstFrameReceived = true;","    this._onFirstFrameReceived(frame);","  }","","  // Do some sanity checking here before we create a stream","  if ((frame.type == 'SETTINGS' ||","       frame.type == 'PING' ||","       frame.type == 'GOAWAY') &&","      frame.stream != 0) {","    // Got connection-level frame on a stream - EEP!","    this.close('PROTOCOL_ERROR');","    return;","  } else if ((frame.type == 'DATA' ||","              frame.type == 'HEADERS' ||","              frame.type == 'PRIORITY' ||","              frame.type == 'RST_STREAM' ||","              frame.type == 'PUSH_PROMISE' ||","              frame.type == 'CONTINUATION') &&","             frame.stream == 0) {","    // Got stream-level frame on connection - EEP!","    this.close('PROTOCOL_ERROR');","    return;","  }","  // WINDOW_UPDATE can be on either stream or connection","","  // * gets the appropriate stream from the stream registry","  var stream = this._streamIds[frame.stream];","","  // * or creates one if it's not in `this.streams`","  if (!stream) {","    stream = this._createIncomingStream(frame.stream);","  }","","  // * in case of PUSH_PROMISE, replaces the promised stream id with a new incoming stream","  if (frame.type === 'PUSH_PROMISE') {","    frame.promised_stream = this._createIncomingStream(frame.promised_stream);","  }","","  frame.count_change = this._changeStreamCount.bind(this);","","  // * and writes it to the `stream`'s `upstream`","  stream.upstream.write(frame);","","  done();","};","","// Settings management","// -------------------","","var defaultSettings = {","};","","// Settings management initialization:","Connection.prototype._initializeSettingsManagement = function _initializeSettingsManagement(settings) {","  // * Setting up the callback queue for setting acknowledgements","  this._settingsAckCallbacks = [];","","  // * Sending the initial settings.","  this._log.debug({ settings: settings },","                  'Sending the first SETTINGS frame as part of the connection header.');","  this.set(settings || defaultSettings);","","  // * Forwarding SETTINGS frames to the `_receiveSettings` method","  this.on('SETTINGS', this._receiveSettings);","  this.on('RECEIVING_SETTINGS_MAX_FRAME_SIZE', this._sanityCheckMaxFrameSize);","};","","// * Checking that the first frame the other endpoint sends is SETTINGS","Connection.prototype._onFirstFrameReceived = function _onFirstFrameReceived(frame) {","  if ((frame.stream === 0) && (frame.type === 'SETTINGS')) {","    this._log.debug('Receiving the first SETTINGS frame as part of the connection header.');","  } else {","    this._log.fatal({ frame: frame }, 'Invalid connection header: first frame is not SETTINGS.');","    this.emit('error', 'PROTOCOL_ERROR');","  }","};","","// Handling of incoming SETTINGS frames.","Connection.prototype._receiveSettings = function _receiveSettings(frame) {","  // * If it's an ACK, call the appropriate callback","  if (frame.flags.ACK) {","    var callback = this._settingsAckCallbacks.shift();","    if (callback) {","      callback();","    }","  }","","  // * If it's a setting change request, then send an ACK and change the appropriate settings","  else {","    if (!this._closed) {","      this.push({","        type: 'SETTINGS',","        flags: { ACK: true },","        stream: 0,","        settings: {}","      });","    }","    for (var name in frame.settings) {","      this.emit('RECEIVING_' + name, frame.settings[name]);","    }","  }","};","","Connection.prototype._sanityCheckMaxFrameSize = function _sanityCheckMaxFrameSize(value) {","  if ((value < 0x4000) || (value >= 0x01000000)) {","    this._log.fatal('Received invalid value for max frame size: ' + value);","    this.emit('error');","  }","};","","// Changing one or more settings value and sending out a SETTINGS frame","Connection.prototype.set = function set(settings, callback) {","  // * Calling the callback and emitting event when the change is acknowledges","  var self = this;","  this._settingsAckCallbacks.push(function() {","    for (var name in settings) {","      self.emit('ACKNOWLEDGED_' + name, settings[name]);","    }","    if (callback) {","      callback();","    }","  });","","  // * Sending out the SETTINGS frame","  this.push({","    type: 'SETTINGS',","    flags: { ACK: false },","    stream: 0,","    settings: settings","  });","  for (var name in settings) {","    this.emit('SENDING_' + name, settings[name]);","  }","};","","// Lifecycle management","// --------------------","","// The main responsibilities of lifecycle management code:","//","// * keeping the connection alive by","//   * sending PINGs when the connection is idle","//   * answering PINGs","// * ending the connection","","Connection.prototype._initializeLifecycleManagement = function _initializeLifecycleManagement() {","  this._pings = {};","  this.on('PING', this._receivePing);","  this.on('GOAWAY', this._receiveGoaway);","  this._closed = false;","};","","// Generating a string of length 16 with random hexadecimal digits","Connection.prototype._generatePingId = function _generatePingId() {","  do {","    var id = '';","    for (var i = 0; i < 16; i++) {","      id += Math.floor(Math.random()*16).toString(16);","    }","  } while(id in this._pings);","  return id;","};","","// Sending a ping and calling `callback` when the answer arrives","Connection.prototype.ping = function ping(callback) {","  var id = this._generatePingId();","  var data = new Buffer(id, 'hex');","  this._pings[id] = callback;","","  this._log.debug({ data: data }, 'Sending PING.');","  this.push({","    type: 'PING',","    flags: {","      ACK: false","    },","    stream: 0,","    data: data","  });","};","","// Answering pings","Connection.prototype._receivePing = function _receivePing(frame) {","  if (frame.flags.ACK) {","    var id = frame.data.toString('hex');","    if (id in this._pings) {","      this._log.debug({ data: frame.data }, 'Receiving answer for a PING.');","      var callback = this._pings[id];","      if (callback) {","        callback();","      }","      delete this._pings[id];","    } else {","      this._log.warn({ data: frame.data }, 'Unsolicited PING answer.');","    }","","  } else {","    this._log.debug({ data: frame.data }, 'Answering PING.');","    this.push({","      type: 'PING',","      flags: {","        ACK: true","      },","      stream: 0,","      data: frame.data","    });","  }","};","","// Terminating the connection","Connection.prototype.close = function close(error) {","  if (this._closed) {","    this._log.warn('Trying to close an already closed connection');","    return;","  }","","  this._log.debug({ error: error }, 'Closing the connection');","  this.push({","    type: 'GOAWAY',","    flags: {},","    stream: 0,","    last_stream: this._lastIncomingStream,","    error: error || 'NO_ERROR'","  });","  this.push(null);","  this._closed = true;","};","","Connection.prototype._receiveGoaway = function _receiveGoaway(frame) {","  this._log.debug({ error: frame.error }, 'Other end closed the connection');","  this.push(null);","  this._closed = true;","  if (frame.error !== 'NO_ERROR') {","    this.emit('peerError', frame.error);","  }","};","","// Flow control","// ------------","","Connection.prototype._initializeFlowControl = function _initializeFlowControl() {","  // Handling of initial window size of individual streams.","  this._initialStreamWindowSize = INITIAL_STREAM_WINDOW_SIZE;","  this.on('new_stream', function(stream) {","    stream.upstream.setInitialWindow(this._initialStreamWindowSize);","  });","  this.on('RECEIVING_SETTINGS_INITIAL_WINDOW_SIZE', this._setInitialStreamWindowSize);","  this._streamIds[0].upstream.setInitialWindow = function noop() {};","};","","// The initial connection flow control window is 65535 bytes.","var INITIAL_STREAM_WINDOW_SIZE = 65535;","","// A SETTINGS frame can alter the initial flow control window size for all current streams. When the","// value of SETTINGS_INITIAL_WINDOW_SIZE changes, a receiver MUST adjust the window size of all","// stream by calling the `setInitialStreamWindowSize` method. The window size has to be modified by","// the difference between the new value and the old value.","Connection.prototype._setInitialStreamWindowSize = function _setInitialStreamWindowSize(size) {","  if ((this._initialStreamWindowSize === Infinity) && (size !== Infinity)) {","    this._log.error('Trying to manipulate initial flow control window size after flow control was turned off.');","    this.emit('error', 'FLOW_CONTROL_ERROR');","  } else {","    this._log.debug({ size: size }, 'Changing stream initial window size.');","    this._initialStreamWindowSize = size;","    this._streamIds.forEach(function(stream) {","      stream.upstream.setInitialWindow(size);","    });","  }","};",""],"l":{"1":1,"10":1,"12":1,"39":1,"41":0,"44":0,"47":0,"50":0,"53":0,"56":0,"59":0,"61":1,"97":1,"100":1,"104":0,"105":0,"108":0,"109":0,"112":0,"116":0,"117":0,"118":0,"123":1,"124":0,"127":0,"128":0,"130":0,"131":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"145":1,"146":0,"147":0,"149":0,"150":0,"151":0,"152":0,"165":1,"167":0,"168":0,"169":0,"173":0,"174":0,"179":0,"181":0,"182":0,"185":0,"188":0,"189":0,"190":0,"191":0,"194":0,"196":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"208":1,"209":0,"210":0,"212":0,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"225":0,"230":1,"231":0,"233":0,"234":0,"235":0,"236":0,"238":0,"242":1,"243":0,"246":0,"247":0,"249":0,"255":1,"256":0,"257":0,"258":0,"263":1,"265":0,"266":0,"270":0,"271":0,"273":0,"274":0,"275":0,"277":0,"280":0,"283":0,"284":0,"285":0,"286":0,"299":0,"300":0,"301":0,"302":0,"304":0,"305":0,"306":0,"307":0,"308":0,"311":0,"313":0,"314":0,"317":0,"318":0,"319":0,"322":0,"323":0,"324":0,"326":0,"327":0,"328":0,"332":0,"333":0,"338":0,"339":0,"342":0,"347":1,"348":0,"351":0,"352":0,"353":0,"357":0,"362":0,"363":0,"364":0,"372":0,"373":0,"378":0,"381":0,"382":0,"386":0,"387":0,"390":0,"393":0,"395":0,"401":1,"405":1,"407":0,"410":0,"412":0,"415":0,"416":0,"420":1,"421":0,"422":0,"424":0,"425":0,"430":1,"432":0,"433":0,"434":0,"435":0,"441":0,"442":0,"449":0,"450":0,"455":1,"456":0,"457":0,"458":0,"463":1,"465":0,"466":0,"467":0,"468":0,"470":0,"471":0,"476":0,"482":0,"483":0,"497":1,"498":0,"499":0,"500":0,"501":0,"505":1,"506":0,"507":0,"508":0,"509":0,"512":0,"516":1,"517":0,"518":0,"519":0,"521":0,"522":0,"533":1,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"542":0,"544":0,"548":0,"549":0,"561":1,"562":0,"563":0,"564":0,"567":0,"568":0,"575":0,"576":0,"579":1,"580":0,"581":0,"582":0,"583":0,"584":0,"591":1,"593":0,"594":0,"595":0,"597":0,"598":0,"602":1,"608":1,"609":0,"610":0,"611":0,"613":0,"614":0,"615":0,"616":0}},"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/flow.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/flow.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":1,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":1,"118":0,"119":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"Flow","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":29}}},"2":{"name":"_receive","line":75,"loc":{"start":{"line":75,"column":26},"end":{"line":75,"column":61}}},"3":{"name":"_write","line":83,"loc":{"start":{"line":83,"column":24},"end":{"line":83,"column":67}}},"4":{"name":"(anonymous_4)","line":91,"loc":{"start":{"line":91,"column":25},"end":{"line":91,"column":36}}},"5":{"name":"_restoreWindow","line":112,"loc":{"start":{"line":112,"column":32},"end":{"line":112,"column":58}}},"6":{"name":"_send","line":144,"loc":{"start":{"line":144,"column":23},"end":{"line":144,"column":40}}},"7":{"name":"_read","line":151,"loc":{"start":{"line":151,"column":23},"end":{"line":151,"column":40}}},"8":{"name":"read","line":192,"loc":{"start":{"line":192,"column":22},"end":{"line":192,"column":43}}},"9":{"name":"_parentPush","line":233,"loc":{"start":{"line":233,"column":29},"end":{"line":233,"column":57}}},"10":{"name":"_push","line":250,"loc":{"start":{"line":250,"column":23},"end":{"line":250,"column":45}}},"11":{"name":"push","line":277,"loc":{"start":{"line":277,"column":22},"end":{"line":277,"column":43}}},"12":{"name":"getLastQueuedFrame","line":298,"loc":{"start":{"line":298,"column":36},"end":{"line":298,"column":66}}},"13":{"name":"_increaseWindow","line":316,"loc":{"start":{"line":316,"column":33},"end":{"line":316,"column":64}}},"14":{"name":"_updateWindow","line":342,"loc":{"start":{"line":342,"column":31},"end":{"line":342,"column":61}}},"15":{"name":"setInitialWindow","line":350,"loc":{"start":{"line":350,"column":34},"end":{"line":350,"column":75}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":20}},"4":{"start":{"line":56,"column":0},"end":{"line":56,"column":32}},"5":{"start":{"line":59,"column":0},"end":{"line":68,"column":1}},"6":{"start":{"line":60,"column":2},"end":{"line":60,"column":42}},"7":{"start":{"line":62,"column":2},"end":{"line":62,"column":59}},"8":{"start":{"line":63,"column":2},"end":{"line":63,"column":38}},"9":{"start":{"line":64,"column":2},"end":{"line":64,"column":19}},"10":{"start":{"line":65,"column":2},"end":{"line":65,"column":22}},"11":{"start":{"line":66,"column":2},"end":{"line":66,"column":21}},"12":{"start":{"line":67,"column":2},"end":{"line":67,"column":24}},"13":{"start":{"line":69,"column":0},"end":{"line":69,"column":83}},"14":{"start":{"line":75,"column":0},"end":{"line":77,"column":2}},"15":{"start":{"line":76,"column":2},"end":{"line":76,"column":99}},"16":{"start":{"line":83,"column":0},"end":{"line":107,"column":2}},"17":{"start":{"line":84,"column":2},"end":{"line":84,"column":95}},"18":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"19":{"start":{"line":87,"column":4},"end":{"line":87,"column":23}},"20":{"start":{"line":90,"column":2},"end":{"line":102,"column":3}},"21":{"start":{"line":91,"column":4},"end":{"line":97,"column":18}},"22":{"start":{"line":92,"column":6},"end":{"line":92,"column":42}},"23":{"start":{"line":93,"column":6},"end":{"line":95,"column":7}},"24":{"start":{"line":94,"column":8},"end":{"line":94,"column":80}},"25":{"start":{"line":96,"column":6},"end":{"line":96,"column":17}},"26":{"start":{"line":101,"column":4},"end":{"line":101,"column":35}},"27":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"28":{"start":{"line":105,"column":4},"end":{"line":105,"column":30}},"29":{"start":{"line":112,"column":0},"end":{"line":123,"column":2}},"30":{"start":{"line":113,"column":2},"end":{"line":113,"column":34}},"31":{"start":{"line":114,"column":2},"end":{"line":122,"column":3}},"32":{"start":{"line":115,"column":4},"end":{"line":120,"column":7}},"33":{"start":{"line":121,"column":4},"end":{"line":121,"column":23}},"34":{"start":{"line":144,"column":0},"end":{"line":146,"column":2}},"35":{"start":{"line":145,"column":2},"end":{"line":145,"column":81}},"36":{"start":{"line":151,"column":0},"end":{"line":185,"column":2}},"37":{"start":{"line":153,"column":2},"end":{"line":184,"column":3}},"38":{"start":{"line":154,"column":4},"end":{"line":154,"column":17}},"39":{"start":{"line":159,"column":7},"end":{"line":184,"column":3}},"40":{"start":{"line":160,"column":4},"end":{"line":160,"column":26}},"41":{"start":{"line":161,"column":4},"end":{"line":161,"column":36}},"42":{"start":{"line":162,"column":4},"end":{"line":167,"column":53}},"43":{"start":{"line":163,"column":6},"end":{"line":163,"column":50}},"44":{"start":{"line":164,"column":6},"end":{"line":166,"column":7}},"45":{"start":{"line":165,"column":8},"end":{"line":165,"column":28}},"46":{"start":{"line":168,"column":4},"end":{"line":168,"column":37}},"47":{"start":{"line":170,"column":4},"end":{"line":172,"column":64}},"48":{"start":{"line":176,"column":7},"end":{"line":184,"column":3}},"49":{"start":{"line":177,"column":4},"end":{"line":181,"column":7}},"50":{"start":{"line":182,"column":4},"end":{"line":182,"column":43}},"51":{"start":{"line":183,"column":4},"end":{"line":183,"column":25}},"52":{"start":{"line":187,"column":0},"end":{"line":187,"column":28}},"53":{"start":{"line":192,"column":0},"end":{"line":230,"column":2}},"54":{"start":{"line":193,"column":2},"end":{"line":199,"column":3}},"55":{"start":{"line":194,"column":4},"end":{"line":194,"column":47}},"56":{"start":{"line":195,"column":9},"end":{"line":199,"column":3}},"57":{"start":{"line":196,"column":4},"end":{"line":196,"column":14}},"58":{"start":{"line":197,"column":9},"end":{"line":199,"column":3}},"59":{"start":{"line":198,"column":4},"end":{"line":198,"column":29}},"60":{"start":{"line":202,"column":2},"end":{"line":202,"column":44}},"61":{"start":{"line":203,"column":2},"end":{"line":206,"column":3}},"62":{"start":{"line":204,"column":4},"end":{"line":204,"column":17}},"63":{"start":{"line":205,"column":4},"end":{"line":205,"column":42}},"64":{"start":{"line":208,"column":2},"end":{"line":227,"column":3}},"65":{"start":{"line":212,"column":4},"end":{"line":226,"column":5}},"66":{"start":{"line":213,"column":6},"end":{"line":213,"column":49}},"67":{"start":{"line":216,"column":9},"end":{"line":226,"column":5}},"68":{"start":{"line":217,"column":6},"end":{"line":218,"column":59}},"69":{"start":{"line":219,"column":6},"end":{"line":224,"column":9}},"70":{"start":{"line":225,"column":6},"end":{"line":225,"column":43}},"71":{"start":{"line":229,"column":2},"end":{"line":229,"column":42}},"72":{"start":{"line":233,"column":0},"end":{"line":244,"column":2}},"73":{"start":{"line":234,"column":2},"end":{"line":234,"column":75}},"74":{"start":{"line":236,"column":2},"end":{"line":241,"column":3}},"75":{"start":{"line":237,"column":4},"end":{"line":238,"column":60}},"76":{"start":{"line":239,"column":4},"end":{"line":239,"column":38}},"77":{"start":{"line":240,"column":4},"end":{"line":240,"column":30}},"78":{"start":{"line":243,"column":2},"end":{"line":243,"column":49}},"79":{"start":{"line":250,"column":0},"end":{"line":274,"column":2}},"80":{"start":{"line":251,"column":2},"end":{"line":251,"column":60}},"81":{"start":{"line":252,"column":2},"end":{"line":252,"column":69}},"82":{"start":{"line":254,"column":2},"end":{"line":273,"column":3}},"83":{"start":{"line":255,"column":4},"end":{"line":255,"column":35}},"84":{"start":{"line":258,"column":7},"end":{"line":273,"column":3}},"85":{"start":{"line":259,"column":4},"end":{"line":259,"column":16}},"86":{"start":{"line":263,"column":4},"end":{"line":264,"column":71}},"87":{"start":{"line":265,"column":4},"end":{"line":265,"column":44}},"88":{"start":{"line":266,"column":4},"end":{"line":271,"column":7}},"89":{"start":{"line":272,"column":4},"end":{"line":272,"column":16}},"90":{"start":{"line":277,"column":0},"end":{"line":294,"column":2}},"91":{"start":{"line":278,"column":2},"end":{"line":282,"column":3}},"92":{"start":{"line":279,"column":4},"end":{"line":279,"column":57}},"93":{"start":{"line":281,"column":4},"end":{"line":281,"column":67}},"94":{"start":{"line":284,"column":2},"end":{"line":284,"column":24}},"95":{"start":{"line":285,"column":2},"end":{"line":287,"column":3}},"96":{"start":{"line":286,"column":4},"end":{"line":286,"column":35}},"97":{"start":{"line":289,"column":2},"end":{"line":291,"column":3}},"98":{"start":{"line":290,"column":4},"end":{"line":290,"column":28}},"99":{"start":{"line":293,"column":2},"end":{"line":293,"column":20}},"100":{"start":{"line":298,"column":0},"end":{"line":301,"column":2}},"101":{"start":{"line":299,"column":2},"end":{"line":299,"column":49}},"102":{"start":{"line":300,"column":2},"end":{"line":300,"column":88}},"103":{"start":{"line":314,"column":0},"end":{"line":314,"column":44}},"104":{"start":{"line":316,"column":0},"end":{"line":332,"column":2}},"105":{"start":{"line":317,"column":2},"end":{"line":331,"column":3}},"106":{"start":{"line":318,"column":4},"end":{"line":318,"column":97}},"107":{"start":{"line":319,"column":4},"end":{"line":319,"column":45}},"108":{"start":{"line":321,"column":4},"end":{"line":321,"column":96}},"109":{"start":{"line":322,"column":4},"end":{"line":322,"column":25}},"110":{"start":{"line":323,"column":4},"end":{"line":330,"column":5}},"111":{"start":{"line":324,"column":6},"end":{"line":324,"column":61}},"112":{"start":{"line":325,"column":6},"end":{"line":325,"column":47}},"113":{"start":{"line":327,"column":6},"end":{"line":329,"column":7}},"114":{"start":{"line":328,"column":8},"end":{"line":328,"column":35}},"115":{"start":{"line":342,"column":0},"end":{"line":344,"column":2}},"116":{"start":{"line":343,"column":2},"end":{"line":343,"column":84}},"117":{"start":{"line":350,"column":0},"end":{"line":353,"column":2}},"118":{"start":{"line":351,"column":2},"end":{"line":351,"column":60}},"119":{"start":{"line":352,"column":2},"end":{"line":352,"column":38}}},"branchMap":{"1":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":18},"end":{"line":84,"column":51}},{"start":{"line":84,"column":57},"end":{"line":84,"column":93}}]},"2":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"3":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":14}},{"start":{"line":86,"column":19},"end":{"line":86,"column":41}},{"start":{"line":86,"column":46},"end":{"line":86,"column":73}}]},"4":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"5":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":7},"end":{"line":90,"column":28}},{"start":{"line":90,"column":34},"end":{"line":90,"column":55}}]},"6":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":6}},{"start":{"line":93,"column":6},"end":{"line":93,"column":6}}]},"7":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"8":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":14}},{"start":{"line":104,"column":19},"end":{"line":104,"column":49}}]},"9":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"10":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":18}},{"start":{"line":114,"column":23},"end":{"line":114,"column":41}}]},"11":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"12":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":7},"end":{"line":159,"column":7}},{"start":{"line":159,"column":7},"end":{"line":159,"column":7}}]},"13":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":6}},{"start":{"line":164,"column":6},"end":{"line":164,"column":6}}]},"14":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":13},"end":{"line":167,"column":23}},{"start":{"line":167,"column":28},"end":{"line":167,"column":50}}]},"15":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":23}},{"start":{"line":171,"column":12},"end":{"line":171,"column":36}},{"start":{"line":172,"column":12},"end":{"line":172,"column":25}},{"start":{"line":172,"column":30},"end":{"line":172,"column":60}}]},"16":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":7},"end":{"line":176,"column":7}},{"start":{"line":176,"column":7},"end":{"line":176,"column":7}}]},"17":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"18":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":9},"end":{"line":195,"column":9}},{"start":{"line":195,"column":9},"end":{"line":195,"column":9}}]},"19":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":9},"end":{"line":197,"column":9}},{"start":{"line":197,"column":9},"end":{"line":197,"column":9}}]},"20":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":14},"end":{"line":197,"column":33}},{"start":{"line":197,"column":39},"end":{"line":197,"column":63}}]},"21":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"22":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":6},"end":{"line":203,"column":12}},{"start":{"line":203,"column":16},"end":{"line":203,"column":42}}]},"23":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"24":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":6},"end":{"line":208,"column":11}},{"start":{"line":208,"column":16},"end":{"line":208,"column":37}}]},"25":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"26":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":9},"end":{"line":216,"column":9}},{"start":{"line":216,"column":9},"end":{"line":216,"column":9}}]},"27":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":2},"end":{"line":236,"column":2}},{"start":{"line":236,"column":2},"end":{"line":236,"column":2}}]},"28":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":6},"end":{"line":236,"column":11}},{"start":{"line":236,"column":16},"end":{"line":236,"column":37}},{"start":{"line":236,"column":43},"end":{"line":236,"column":68}}]},"29":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":13},"end":{"line":251,"column":18}},{"start":{"line":251,"column":23},"end":{"line":251,"column":44}},{"start":{"line":251,"column":49},"end":{"line":251,"column":59}}]},"30":{"line":252,"type":"cond-expr","locations":[{"start":{"line":252,"column":48},"end":{"line":252,"column":60}},{"start":{"line":252,"column":63},"end":{"line":252,"column":68}}]},"31":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"32":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":6},"end":{"line":254,"column":11}},{"start":{"line":254,"column":16},"end":{"line":254,"column":45}}]},"33":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":7},"end":{"line":258,"column":7}},{"start":{"line":258,"column":7},"end":{"line":258,"column":7}}]},"34":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":278,"column":2}},{"start":{"line":278,"column":2},"end":{"line":278,"column":2}}]},"35":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":2},"end":{"line":285,"column":2}},{"start":{"line":285,"column":2},"end":{"line":285,"column":2}}]},"36":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":2},"end":{"line":289,"column":2}},{"start":{"line":289,"column":2},"end":{"line":289,"column":2}}]},"37":{"line":300,"type":"binary-expr","locations":[{"start":{"line":300,"column":9},"end":{"line":300,"column":44}},{"start":{"line":300,"column":48},"end":{"line":300,"column":87}}]},"38":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":2},"end":{"line":317,"column":2}},{"start":{"line":317,"column":2},"end":{"line":317,"column":2}}]},"39":{"line":317,"type":"binary-expr","locations":[{"start":{"line":317,"column":7},"end":{"line":317,"column":32}},{"start":{"line":317,"column":38},"end":{"line":317,"column":55}}]},"40":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":4},"end":{"line":323,"column":4}},{"start":{"line":323,"column":4},"end":{"line":323,"column":4}}]},"41":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":9},"end":{"line":323,"column":34}},{"start":{"line":323,"column":40},"end":{"line":323,"column":72}}]},"42":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":6},"end":{"line":327,"column":6}},{"start":{"line":327,"column":6},"end":{"line":327,"column":6}}]},"43":{"line":343,"type":"cond-expr","locations":[{"start":{"line":343,"column":54},"end":{"line":343,"column":62}},{"start":{"line":343,"column":65},"end":{"line":343,"column":82}}]}},"code":["var assert = require('assert');","","// The Flow class","// ==============","","// Flow is a [Duplex stream][1] subclass which implements HTTP/2 flow control. It is designed to be","// subclassed by [Connection](connection.html) and the `upstream` component of [Stream](stream.html).","// [1]: https://nodejs.org/api/stream.html#stream_class_stream_duplex","","var Duplex  = require('stream').Duplex;","","exports.Flow = Flow;","","// Public API","// ----------","","// * **Event: 'error' (type)**: signals an error","//","// * **setInitialWindow(size)**: the initial flow control window size can be changed *any time*","//   ([as described in the standard][1]) using this method","//","// [1]: https://tools.ietf.org/html/rfc7540#section-6.9.2","","// API for child classes","// ---------------------","","// * **new Flow([flowControlId])**: creating a new flow that will listen for WINDOW_UPDATES frames","//   with the given `flowControlId` (or every update frame if not given)","//","// * **_send()**: called when more frames should be pushed. The child class is expected to override","//   this (instead of the `_read` method of the Duplex class).","//","// * **_receive(frame, readyCallback)**: called when there's an incoming frame. The child class is","//   expected to override this (instead of the `_write` method of the Duplex class).","//","// * **push(frame): bool**: schedules `frame` for sending.","//","//   Returns `true` if it needs more frames in the output queue, `false` if the output queue is","//   full, and `null` if did not push the frame into the output queue (instead, it pushed it into","//   the flow control queue).","//","// * **read(limit): frame**: like the regular `read`, but the 'flow control size' (0 for non-DATA","//   frames, length of the payload for DATA frames) of the returned frame will be under `limit`.","//   Small exception: pass -1 as `limit` if the max. flow control size is 0. `read(0)` means the","//   same thing as [in the original API](https://nodejs.org/api/stream.html#stream_stream_read_0).","//","// * **getLastQueuedFrame(): frame**: returns the last frame in output buffers","//","// * **_log**: the Flow class uses the `_log` object of the parent","","// Constructor","// -----------","","// When a HTTP/2.0 connection is first established, new streams are created with an initial flow","// control window size of 65535 bytes.","var INITIAL_WINDOW_SIZE = 65535;","","// `flowControlId` is needed if only specific WINDOW_UPDATEs should be watched.","function Flow(flowControlId) {","  Duplex.call(this, { objectMode: true });","","  this._window = this._initialWindow = INITIAL_WINDOW_SIZE;","  this._flowControlId = flowControlId;","  this._queue = [];","  this._ended = false;","  this._received = 0;","  this._blocked = false;","}","Flow.prototype = Object.create(Duplex.prototype, { constructor: { value: Flow } });","","// Incoming frames","// ---------------","","// `_receive` is called when there's an incoming frame.","Flow.prototype._receive = function _receive(frame, callback) {","  throw new Error('The _receive(frame, callback) method has to be overridden by the child class!');","};","","// `_receive` is called by `_write` which in turn is [called by Duplex][1] when someone `write()`s","// to the flow. It emits the 'receiving' event and notifies the window size tracking code if the","// incoming frame is a WINDOW_UPDATE.","// [1]: https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback_1","Flow.prototype._write = function _write(frame, encoding, callback) {","  var sentToUs = (this._flowControlId === undefined) || (frame.stream === this._flowControlId);","","  if (sentToUs && (frame.flags.END_STREAM || (frame.type === 'RST_STREAM'))) {","    this._ended = true;","  }","","  if ((frame.type === 'DATA') && (frame.data.length > 0)) {","    this._receive(frame, function() {","      this._received += frame.data.length;","      if (!this._restoreWindowTimer) {","        this._restoreWindowTimer = setImmediate(this._restoreWindow.bind(this));","      }","      callback();","    }.bind(this));","  }","","  else {","    this._receive(frame, callback);","  }","","  if (sentToUs && (frame.type === 'WINDOW_UPDATE')) {","    this._updateWindow(frame);","  }","};","","// `_restoreWindow` basically acknowledges the DATA frames received since it's last call. It sends","// a WINDOW_UPDATE that restores the flow control window of the remote end.","// TODO: push this directly into the output queue. No need to wait for DATA frames in the queue.","Flow.prototype._restoreWindow = function _restoreWindow() {","  delete this._restoreWindowTimer;","  if (!this._ended && (this._received > 0)) {","    this.push({","      type: 'WINDOW_UPDATE',","      flags: {},","      stream: this._flowControlId,","      window_size: this._received","    });","    this._received = 0;","  }","};","","// Outgoing frames - sending procedure","// -----------------------------------","","//                                         flow","//                +-------------------------------------------------+","//                |                                                 |","//                +--------+           +---------+                  |","//        read()  | output |  _read()  | flow    |  _send()         |","//     <----------|        |<----------| control |<-------------    |","//                | buffer |           | buffer  |                  |","//                +--------+           +---------+                  |","//                | input  |                                        |","//     ---------->|        |----------------------------------->    |","//       write()  | buffer |  _write()              _receive()      |","//                +--------+                                        |","//                |                                                 |","//                +-------------------------------------------------+","","// `_send` is called when more frames should be pushed to the output buffer.","Flow.prototype._send = function _send() {","  throw new Error('The _send() method has to be overridden by the child class!');","};","","// `_send` is called by `_read` which is in turn [called by Duplex][1] when it wants to have more","// items in the output queue.","// [1]: https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback_1","Flow.prototype._read = function _read() {","  // * if the flow control queue is empty, then let the user push more frames","  if (this._queue.length === 0) {","    this._send();","  }","","  // * if there are items in the flow control queue, then let's put them into the output queue (to","  //   the extent it is possible with respect to the window size and output queue feedback)","  else if (this._window > 0) {","    this._blocked = false;","    this._readableState.sync = true; // to avoid reentrant calls","    do {","      var moreNeeded = this._push(this._queue[0]);","      if (moreNeeded !== null) {","        this._queue.shift();","      }","    } while (moreNeeded && (this._queue.length > 0));","    this._readableState.sync = false;","","    assert((!moreNeeded) ||                              // * output queue is full","           (this._queue.length === 0) ||                         // * flow control queue is empty","           (!this._window && (this._queue[0].type === 'DATA'))); // * waiting for window update","  }","","  // * otherwise, come back when the flow control window is positive","  else if (!this._blocked) {","    this._parentPush({","      type: 'BLOCKED',","      flags: {},","      stream: this._flowControlId","    });","    this.once('window_update', this._read);","    this._blocked = true;","  }","};","","var MAX_PAYLOAD_SIZE = 4096; // Must not be greater than MAX_HTTP_PAYLOAD_SIZE which is 16383","","// `read(limit)` is like the `read` of the Readable class, but it guarantess that the 'flow control","// size' (0 for non-DATA frames, length of the payload for DATA frames) of the returned frame will","// be under `limit`.","Flow.prototype.read = function read(limit) {","  if (limit === 0) {","    return Duplex.prototype.read.call(this, 0);","  } else if (limit === -1) {","    limit = 0;","  } else if ((limit === undefined) || (limit > MAX_PAYLOAD_SIZE)) {","    limit = MAX_PAYLOAD_SIZE;","  }","","  // * Looking at the first frame in the queue without pulling it out if possible.","  var frame = this._readableState.buffer[0];","  if (!frame && !this._readableState.ended) {","    this._read();","    frame = this._readableState.buffer[0];","  }","","  if (frame && (frame.type === 'DATA')) {","    // * If the frame is DATA, then there's two special cases:","    //   * if the limit is 0, we shouldn't return anything","    //   * if the size of the frame is larger than limit, then the frame should be split","    if (limit === 0) {","      return Duplex.prototype.read.call(this, 0);","    }","","    else if (frame.data.length > limit) {","      this._log.trace({ frame: frame, size: frame.data.length, forwardable: limit },","        'Splitting out forwardable part of a DATA frame.');","      this.unshift({","        type: 'DATA',","        flags: {},","        stream: frame.stream,","        data: frame.data.slice(0, limit)","      });","      frame.data = frame.data.slice(limit);","    }","  }","","  return Duplex.prototype.read.call(this);","};","","// `_parentPush` pushes the given `frame` into the output queue","Flow.prototype._parentPush = function _parentPush(frame) {","  this._log.trace({ frame: frame }, 'Pushing frame into the output queue');","","  if (frame && (frame.type === 'DATA') && (this._window !== Infinity)) {","    this._log.trace({ window: this._window, by: frame.data.length },","                    'Decreasing flow control window size.');","    this._window -= frame.data.length;","    assert(this._window >= 0);","  }","","  return Duplex.prototype.push.call(this, frame);","};","","// `_push(frame)` pushes `frame` into the output queue and decreases the flow control window size.","// It is capable of splitting DATA frames into smaller parts, if the window size is not enough to","// push the whole frame. The return value is similar to `push` except that it returns `null` if it","// did not push the whole frame to the output queue (but maybe it did push part of the frame).","Flow.prototype._push = function _push(frame) {","  var data = frame && (frame.type === 'DATA') && frame.data;","  var maxFrameLength = (this._window < 16384) ? this._window : 16384;","","  if (!data || (data.length <= maxFrameLength)) {","    return this._parentPush(frame);","  }","","  else if (this._window <= 0) {","    return null;","  }","","  else {","    this._log.trace({ frame: frame, size: frame.data.length, forwardable: this._window },","                    'Splitting out forwardable part of a DATA frame.');","    frame.data = data.slice(maxFrameLength);","    this._parentPush({","      type: 'DATA',","      flags: {},","      stream: frame.stream,","      data: data.slice(0, maxFrameLength)","    });","    return null;","  }","};","","// Push `frame` into the flow control queue, or if it's empty, then directly into the output queue","Flow.prototype.push = function push(frame) {","  if (frame === null) {","    this._log.debug('Enqueueing outgoing End Of Stream');","  } else {","    this._log.debug({ frame: frame }, 'Enqueueing outgoing frame');","  }","","  var moreNeeded = null;","  if (this._queue.length === 0) {","    moreNeeded = this._push(frame);","  }","","  if (moreNeeded === null) {","    this._queue.push(frame);","  }","","  return moreNeeded;","};","","// `getLastQueuedFrame` returns the last frame in output buffers. This is primarily used by the","// [Stream](stream.html) class to mark the last frame with END_STREAM flag.","Flow.prototype.getLastQueuedFrame = function getLastQueuedFrame() {","  var readableQueue = this._readableState.buffer;","  return this._queue[this._queue.length - 1] || readableQueue[readableQueue.length - 1];","};","","// Outgoing frames - managing the window size","// ------------------------------------------","","// Flow control window size is manipulated using the `_increaseWindow` method.","//","// * Invoking it with `Infinite` means turning off flow control. Flow control cannot be enabled","//   again once disabled. Any attempt to re-enable flow control MUST be rejected with a","//   FLOW_CONTROL_ERROR error code.","// * A sender MUST NOT allow a flow control window to exceed 2^31 - 1 bytes. The action taken","//   depends on it being a stream or the connection itself.","","var WINDOW_SIZE_LIMIT = Math.pow(2, 31) - 1;","","Flow.prototype._increaseWindow = function _increaseWindow(size) {","  if ((this._window === Infinity) && (size !== Infinity)) {","    this._log.error('Trying to increase flow control window after flow control was turned off.');","    this.emit('error', 'FLOW_CONTROL_ERROR');","  } else {","    this._log.trace({ window: this._window, by: size }, 'Increasing flow control window size.');","    this._window += size;","    if ((this._window !== Infinity) && (this._window > WINDOW_SIZE_LIMIT)) {","      this._log.error('Flow control window grew too large.');","      this.emit('error', 'FLOW_CONTROL_ERROR');","    } else {","      if (size != 0) {","        this.emit('window_update');","      }","    }","  }","};","","// The `_updateWindow` method gets called every time there's an incoming WINDOW_UPDATE frame. It","// modifies the flow control window:","//","// * Flow control can be disabled for an individual stream by sending a WINDOW_UPDATE with the","//   END_FLOW_CONTROL flag set. The payload of a WINDOW_UPDATE frame that has the END_FLOW_CONTROL","//   flag set is ignored.","// * A sender that receives a WINDOW_UPDATE frame updates the corresponding window by the amount","//   specified in the frame.","Flow.prototype._updateWindow = function _updateWindow(frame) {","  this._increaseWindow(frame.flags.END_FLOW_CONTROL ? Infinity : frame.window_size);","};","","// A SETTINGS frame can alter the initial flow control window size for all current streams. When the","// value of SETTINGS_INITIAL_WINDOW_SIZE changes, a receiver MUST adjust the size of all stream by","// calling the `setInitialWindow` method. The window size has to be modified by the difference","// between the new value and the old value.","Flow.prototype.setInitialWindow = function setInitialWindow(initialWindow) {","  this._increaseWindow(initialWindow - this._initialWindow);","  this._initialWindow = initialWindow;","};",""],"l":{"1":1,"10":1,"12":1,"56":1,"59":1,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":1,"75":1,"76":0,"83":1,"84":0,"86":0,"87":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"101":0,"104":0,"105":0,"112":1,"113":0,"114":0,"115":0,"121":0,"144":1,"145":0,"151":1,"153":0,"154":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"168":0,"170":0,"176":0,"177":0,"182":0,"183":0,"187":1,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"202":0,"203":0,"204":0,"205":0,"208":0,"212":0,"213":0,"216":0,"217":0,"219":0,"225":0,"229":0,"233":1,"234":0,"236":0,"237":0,"239":0,"240":0,"243":0,"250":1,"251":0,"252":0,"254":0,"255":0,"258":0,"259":0,"263":0,"265":0,"266":0,"272":0,"277":1,"278":0,"279":0,"281":0,"284":0,"285":0,"286":0,"289":0,"290":0,"293":0,"298":1,"299":0,"300":0,"314":1,"316":1,"317":0,"318":0,"319":0,"321":0,"322":0,"323":0,"324":0,"325":0,"327":0,"328":0,"342":1,"343":0,"350":1,"351":0,"352":0}},"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-http2/node_modules/http2/lib/protocol/stream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":1,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":1,"226":1,"227":1,"228":0,"229":0,"230":0,"231":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0,0],"30":[0,0,0,0,0,0,0,0],"31":[0,0,0,0,0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0],"52":[0,0],"53":[0,0,0,0,0,0],"54":[0,0],"55":[0,0,0],"56":[0,0],"57":[0,0,0,0,0,0],"58":[0,0],"59":[0,0,0,0,0,0,0,0,0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"Stream","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":33}}},"2":{"name":"_initializeManagement","line":77,"loc":{"start":{"line":77,"column":41},"end":{"line":77,"column":74}}},"3":{"name":"promise","line":83,"loc":{"start":{"line":83,"column":27},"end":{"line":83,"column":53}}},"4":{"name":"_onPromise","line":96,"loc":{"start":{"line":96,"column":30},"end":{"line":96,"column":57}}},"5":{"name":"headers","line":100,"loc":{"start":{"line":100,"column":27},"end":{"line":100,"column":53}}},"6":{"name":"_onHeaders","line":109,"loc":{"start":{"line":109,"column":30},"end":{"line":109,"column":57}}},"7":{"name":"priority","line":116,"loc":{"start":{"line":116,"column":28},"end":{"line":116,"column":62}}},"8":{"name":"_onPriority","line":140,"loc":{"start":{"line":140,"column":31},"end":{"line":140,"column":59}}},"9":{"name":"reset","line":146,"loc":{"start":{"line":146,"column":25},"end":{"line":146,"column":47}}},"10":{"name":"altsvc","line":159,"loc":{"start":{"line":159,"column":26},"end":{"line":159,"column":82}}},"11":{"name":"_initializeDataFlow","line":213,"loc":{"start":{"line":213,"column":39},"end":{"line":213,"column":70}}},"12":{"name":"_pushUpstream","line":228,"loc":{"start":{"line":228,"column":33},"end":{"line":228,"column":63}}},"13":{"name":"_writeUpstream","line":235,"loc":{"start":{"line":235,"column":34},"end":{"line":235,"column":65}}},"14":{"name":"_receive","line":272,"loc":{"start":{"line":272,"column":28},"end":{"line":272,"column":60}}},"15":{"name":"_read","line":296,"loc":{"start":{"line":296,"column":25},"end":{"line":296,"column":42}}},"16":{"name":"_write","line":305,"loc":{"start":{"line":305,"column":26},"end":{"line":305,"column":67}}},"17":{"name":"_send","line":325,"loc":{"start":{"line":325,"column":25},"end":{"line":325,"column":42}}},"18":{"name":"_finishing","line":338,"loc":{"start":{"line":338,"column":30},"end":{"line":338,"column":52}}},"19":{"name":"_initializeState","line":385,"loc":{"start":{"line":385,"column":36},"end":{"line":385,"column":64}}},"20":{"name":"transition","line":395,"loc":{"start":{"line":395,"column":29},"end":{"line":395,"column":56}}},"21":{"name":"activeState","line":404,"loc":{"start":{"line":404,"column":0},"end":{"line":404,"column":28}}},"22":{"name":"transition","line":411,"loc":{"start":{"line":411,"column":31},"end":{"line":411,"column":67}}},"23":{"name":"(anonymous_23)","line":653,"loc":{"start":{"line":653,"column":24},"end":{"line":653,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":24}},"4":{"start":{"line":49,"column":0},"end":{"line":65,"column":1}},"5":{"start":{"line":50,"column":2},"end":{"line":50,"column":20}},"6":{"start":{"line":53,"column":2},"end":{"line":53,"column":58}},"7":{"start":{"line":56,"column":2},"end":{"line":56,"column":31}},"8":{"start":{"line":59,"column":2},"end":{"line":59,"column":29}},"9":{"start":{"line":62,"column":2},"end":{"line":62,"column":26}},"10":{"start":{"line":64,"column":2},"end":{"line":64,"column":31}},"11":{"start":{"line":67,"column":0},"end":{"line":67,"column":87}},"12":{"start":{"line":73,"column":0},"end":{"line":73,"column":39}},"13":{"start":{"line":74,"column":0},"end":{"line":74,"column":39}},"14":{"start":{"line":77,"column":0},"end":{"line":81,"column":2}},"15":{"start":{"line":78,"column":2},"end":{"line":78,"column":26}},"16":{"start":{"line":79,"column":2},"end":{"line":79,"column":36}},"17":{"start":{"line":80,"column":2},"end":{"line":80,"column":33}},"18":{"start":{"line":83,"column":0},"end":{"line":94,"column":2}},"19":{"start":{"line":84,"column":2},"end":{"line":84,"column":54}},"20":{"start":{"line":85,"column":2},"end":{"line":85,"column":64}},"21":{"start":{"line":86,"column":2},"end":{"line":92,"column":5}},"22":{"start":{"line":93,"column":2},"end":{"line":93,"column":16}},"23":{"start":{"line":96,"column":0},"end":{"line":98,"column":2}},"24":{"start":{"line":97,"column":2},"end":{"line":97,"column":61}},"25":{"start":{"line":100,"column":0},"end":{"line":107,"column":2}},"26":{"start":{"line":101,"column":2},"end":{"line":106,"column":5}},"27":{"start":{"line":109,"column":0},"end":{"line":114,"column":2}},"28":{"start":{"line":110,"column":2},"end":{"line":112,"column":3}},"29":{"start":{"line":111,"column":4},"end":{"line":111,"column":40}},"30":{"start":{"line":113,"column":2},"end":{"line":113,"column":38}},"31":{"start":{"line":116,"column":0},"end":{"line":138,"column":2}},"32":{"start":{"line":117,"column":2},"end":{"line":137,"column":3}},"33":{"start":{"line":118,"column":4},"end":{"line":132,"column":5}},"34":{"start":{"line":119,"column":6},"end":{"line":119,"column":38}},"35":{"start":{"line":121,"column":6},"end":{"line":121,"column":57}},"36":{"start":{"line":122,"column":6},"end":{"line":131,"column":7}},"37":{"start":{"line":123,"column":8},"end":{"line":123,"column":38}},"38":{"start":{"line":125,"column":8},"end":{"line":130,"column":11}},"39":{"start":{"line":134,"column":4},"end":{"line":134,"column":65}},"40":{"start":{"line":135,"column":4},"end":{"line":135,"column":36}},"41":{"start":{"line":136,"column":4},"end":{"line":136,"column":30}},"42":{"start":{"line":140,"column":0},"end":{"line":142,"column":2}},"43":{"start":{"line":141,"column":2},"end":{"line":141,"column":38}},"44":{"start":{"line":146,"column":0},"end":{"line":156,"column":2}},"45":{"start":{"line":147,"column":2},"end":{"line":155,"column":3}},"46":{"start":{"line":148,"column":4},"end":{"line":148,"column":27}},"47":{"start":{"line":149,"column":4},"end":{"line":154,"column":7}},"48":{"start":{"line":159,"column":0},"end":{"line":176,"column":2}},"49":{"start":{"line":160,"column":4},"end":{"line":160,"column":15}},"50":{"start":{"line":161,"column":4},"end":{"line":165,"column":5}},"51":{"start":{"line":162,"column":8},"end":{"line":162,"column":19}},"52":{"start":{"line":164,"column":8},"end":{"line":164,"column":25}},"53":{"start":{"line":166,"column":4},"end":{"line":175,"column":7}},"54":{"start":{"line":211,"column":0},"end":{"line":211,"column":34}},"55":{"start":{"line":213,"column":0},"end":{"line":226,"column":2}},"56":{"start":{"line":214,"column":2},"end":{"line":214,"column":22}},"57":{"start":{"line":216,"column":2},"end":{"line":216,"column":22}},"58":{"start":{"line":218,"column":2},"end":{"line":218,"column":29}},"59":{"start":{"line":219,"column":2},"end":{"line":219,"column":33}},"60":{"start":{"line":220,"column":2},"end":{"line":220,"column":46}},"61":{"start":{"line":221,"column":2},"end":{"line":221,"column":52}},"62":{"start":{"line":222,"column":2},"end":{"line":222,"column":55}},"63":{"start":{"line":223,"column":2},"end":{"line":223,"column":59}},"64":{"start":{"line":225,"column":2},"end":{"line":225,"column":37}},"65":{"start":{"line":228,"column":0},"end":{"line":231,"column":2}},"66":{"start":{"line":229,"column":2},"end":{"line":229,"column":28}},"67":{"start":{"line":230,"column":2},"end":{"line":230,"column":32}},"68":{"start":{"line":235,"column":0},"end":{"line":269,"column":2}},"69":{"start":{"line":236,"column":2},"end":{"line":236,"column":55}},"70":{"start":{"line":238,"column":2},"end":{"line":238,"column":67}},"71":{"start":{"line":241,"column":2},"end":{"line":241,"column":33}},"72":{"start":{"line":244,"column":2},"end":{"line":266,"column":3}},"73":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"74":{"start":{"line":246,"column":6},"end":{"line":246,"column":43}},"75":{"start":{"line":248,"column":4},"end":{"line":248,"column":34}},"76":{"start":{"line":249,"column":4},"end":{"line":249,"column":27}},"77":{"start":{"line":250,"column":9},"end":{"line":266,"column":3}},"78":{"start":{"line":251,"column":4},"end":{"line":251,"column":27}},"79":{"start":{"line":252,"column":9},"end":{"line":266,"column":3}},"80":{"start":{"line":253,"column":4},"end":{"line":253,"column":28}},"81":{"start":{"line":254,"column":9},"end":{"line":266,"column":3}},"82":{"start":{"line":256,"column":9},"end":{"line":266,"column":3}},"83":{"start":{"line":261,"column":7},"end":{"line":266,"column":3}},"84":{"start":{"line":264,"column":4},"end":{"line":264,"column":68}},"85":{"start":{"line":265,"column":4},"end":{"line":265,"column":41}},"86":{"start":{"line":268,"column":2},"end":{"line":268,"column":20}},"87":{"start":{"line":272,"column":0},"end":{"line":292,"column":2}},"88":{"start":{"line":275,"column":2},"end":{"line":280,"column":3}},"89":{"start":{"line":276,"column":4},"end":{"line":276,"column":43}},"90":{"start":{"line":277,"column":4},"end":{"line":279,"column":5}},"91":{"start":{"line":278,"column":6},"end":{"line":278,"column":32}},"92":{"start":{"line":283,"column":2},"end":{"line":286,"column":3}},"93":{"start":{"line":284,"column":4},"end":{"line":284,"column":20}},"94":{"start":{"line":285,"column":4},"end":{"line":285,"column":23}},"95":{"start":{"line":289,"column":2},"end":{"line":291,"column":3}},"96":{"start":{"line":290,"column":4},"end":{"line":290,"column":12}},"97":{"start":{"line":296,"column":0},"end":{"line":302,"column":2}},"98":{"start":{"line":297,"column":2},"end":{"line":301,"column":3}},"99":{"start":{"line":298,"column":4},"end":{"line":298,"column":40}},"100":{"start":{"line":299,"column":4},"end":{"line":299,"column":29}},"101":{"start":{"line":300,"column":4},"end":{"line":300,"column":18}},"102":{"start":{"line":305,"column":0},"end":{"line":320,"column":2}},"103":{"start":{"line":307,"column":2},"end":{"line":312,"column":5}},"104":{"start":{"line":315,"column":2},"end":{"line":319,"column":3}},"105":{"start":{"line":316,"column":4},"end":{"line":316,"column":12}},"106":{"start":{"line":318,"column":4},"end":{"line":318,"column":27}},"107":{"start":{"line":325,"column":0},"end":{"line":331,"column":2}},"108":{"start":{"line":326,"column":2},"end":{"line":330,"column":3}},"109":{"start":{"line":327,"column":4},"end":{"line":327,"column":34}},"110":{"start":{"line":328,"column":4},"end":{"line":328,"column":26}},"111":{"start":{"line":329,"column":4},"end":{"line":329,"column":15}},"112":{"start":{"line":337,"column":0},"end":{"line":337,"column":32}},"113":{"start":{"line":338,"column":0},"end":{"line":353,"column":2}},"114":{"start":{"line":339,"column":2},"end":{"line":344,"column":4}},"115":{"start":{"line":345,"column":2},"end":{"line":345,"column":53}},"116":{"start":{"line":346,"column":2},"end":{"line":352,"column":3}},"117":{"start":{"line":347,"column":4},"end":{"line":347,"column":86}},"118":{"start":{"line":348,"column":4},"end":{"line":348,"column":38}},"119":{"start":{"line":349,"column":4},"end":{"line":349,"column":37}},"120":{"start":{"line":351,"column":4},"end":{"line":351,"column":33}},"121":{"start":{"line":385,"column":0},"end":{"line":391,"column":2}},"122":{"start":{"line":386,"column":2},"end":{"line":386,"column":22}},"123":{"start":{"line":387,"column":2},"end":{"line":387,"column":30}},"124":{"start":{"line":388,"column":2},"end":{"line":388,"column":31}},"125":{"start":{"line":389,"column":2},"end":{"line":389,"column":34}},"126":{"start":{"line":390,"column":2},"end":{"line":390,"column":33}},"127":{"start":{"line":395,"column":0},"end":{"line":400,"column":2}},"128":{"start":{"line":396,"column":2},"end":{"line":396,"column":31}},"129":{"start":{"line":397,"column":2},"end":{"line":397,"column":71}},"130":{"start":{"line":398,"column":2},"end":{"line":398,"column":21}},"131":{"start":{"line":399,"column":2},"end":{"line":399,"column":28}},"132":{"start":{"line":404,"column":0},"end":{"line":406,"column":1}},"133":{"start":{"line":405,"column":2},"end":{"line":405,"column":101}},"134":{"start":{"line":411,"column":0},"end":{"line":645,"column":2}},"135":{"start":{"line":412,"column":2},"end":{"line":412,"column":27}},"136":{"start":{"line":413,"column":2},"end":{"line":413,"column":22}},"137":{"start":{"line":414,"column":2},"end":{"line":414,"column":18}},"138":{"start":{"line":416,"column":2},"end":{"line":416,"column":87}},"139":{"start":{"line":417,"column":2},"end":{"line":417,"column":70}},"140":{"start":{"line":418,"column":2},"end":{"line":427,"column":3}},"141":{"start":{"line":419,"column":26},"end":{"line":419,"column":47}},"142":{"start":{"line":419,"column":48},"end":{"line":419,"column":54}},"143":{"start":{"line":420,"column":26},"end":{"line":420,"column":47}},"144":{"start":{"line":420,"column":48},"end":{"line":420,"column":54}},"145":{"start":{"line":421,"column":26},"end":{"line":421,"column":47}},"146":{"start":{"line":421,"column":48},"end":{"line":421,"column":54}},"147":{"start":{"line":422,"column":26},"end":{"line":422,"column":47}},"148":{"start":{"line":422,"column":48},"end":{"line":422,"column":54}},"149":{"start":{"line":423,"column":26},"end":{"line":423,"column":47}},"150":{"start":{"line":423,"column":48},"end":{"line":423,"column":54}},"151":{"start":{"line":424,"column":26},"end":{"line":424,"column":47}},"152":{"start":{"line":424,"column":48},"end":{"line":424,"column":54}},"153":{"start":{"line":425,"column":26},"end":{"line":425,"column":47}},"154":{"start":{"line":425,"column":48},"end":{"line":425,"column":54}},"155":{"start":{"line":426,"column":26},"end":{"line":426,"column":47}},"156":{"start":{"line":426,"column":48},"end":{"line":426,"column":54}},"157":{"start":{"line":429,"column":2},"end":{"line":429,"column":33}},"158":{"start":{"line":431,"column":2},"end":{"line":578,"column":3}},"159":{"start":{"line":438,"column":6},"end":{"line":450,"column":7}},"160":{"start":{"line":439,"column":8},"end":{"line":439,"column":31}},"161":{"start":{"line":440,"column":8},"end":{"line":442,"column":9}},"162":{"start":{"line":441,"column":10},"end":{"line":441,"column":79}},"163":{"start":{"line":443,"column":8},"end":{"line":443,"column":34}},"164":{"start":{"line":444,"column":13},"end":{"line":450,"column":7}},"165":{"start":{"line":445,"column":8},"end":{"line":445,"column":33}},"166":{"start":{"line":446,"column":13},"end":{"line":450,"column":7}},"167":{"start":{"line":449,"column":8},"end":{"line":449,"column":43}},"168":{"start":{"line":451,"column":6},"end":{"line":451,"column":12}},"169":{"start":{"line":463,"column":6},"end":{"line":471,"column":7}},"170":{"start":{"line":464,"column":8},"end":{"line":464,"column":45}},"171":{"start":{"line":465,"column":13},"end":{"line":471,"column":7}},"172":{"start":{"line":466,"column":8},"end":{"line":466,"column":33}},"173":{"start":{"line":467,"column":13},"end":{"line":471,"column":7}},"174":{"start":{"line":470,"column":8},"end":{"line":470,"column":43}},"175":{"start":{"line":472,"column":6},"end":{"line":472,"column":12}},"176":{"start":{"line":482,"column":6},"end":{"line":490,"column":7}},"177":{"start":{"line":483,"column":8},"end":{"line":483,"column":33}},"178":{"start":{"line":484,"column":13},"end":{"line":490,"column":7}},"179":{"start":{"line":485,"column":8},"end":{"line":485,"column":44}},"180":{"start":{"line":486,"column":13},"end":{"line":490,"column":7}},"181":{"start":{"line":489,"column":8},"end":{"line":489,"column":43}},"182":{"start":{"line":491,"column":6},"end":{"line":491,"column":12}},"183":{"start":{"line":503,"column":6},"end":{"line":509,"column":7}},"184":{"start":{"line":504,"column":8},"end":{"line":504,"column":77}},"185":{"start":{"line":505,"column":13},"end":{"line":509,"column":7}},"186":{"start":{"line":506,"column":8},"end":{"line":506,"column":33}},"187":{"start":{"line":510,"column":6},"end":{"line":510,"column":12}},"188":{"start":{"line":519,"column":6},"end":{"line":525,"column":7}},"189":{"start":{"line":520,"column":8},"end":{"line":520,"column":33}},"190":{"start":{"line":521,"column":13},"end":{"line":525,"column":7}},"191":{"start":{"line":524,"column":8},"end":{"line":524,"column":43}},"192":{"start":{"line":526,"column":6},"end":{"line":526,"column":12}},"193":{"start":{"line":539,"column":6},"end":{"line":545,"column":7}},"194":{"start":{"line":540,"column":8},"end":{"line":540,"column":33}},"195":{"start":{"line":541,"column":13},"end":{"line":545,"column":7}},"196":{"start":{"line":544,"column":8},"end":{"line":544,"column":43}},"197":{"start":{"line":546,"column":6},"end":{"line":546,"column":12}},"198":{"start":{"line":569,"column":6},"end":{"line":576,"column":7}},"199":{"start":{"line":575,"column":8},"end":{"line":575,"column":38}},"200":{"start":{"line":577,"column":6},"end":{"line":577,"column":12}},"201":{"start":{"line":583,"column":2},"end":{"line":586,"column":3}},"202":{"start":{"line":584,"column":4},"end":{"line":584,"column":31}},"203":{"start":{"line":585,"column":4},"end":{"line":585,"column":37}},"204":{"start":{"line":594,"column":2},"end":{"line":601,"column":3}},"205":{"start":{"line":598,"column":4},"end":{"line":598,"column":80}},"206":{"start":{"line":599,"column":4},"end":{"line":599,"column":84}},"207":{"start":{"line":600,"column":4},"end":{"line":600,"column":47}},"208":{"start":{"line":604,"column":2},"end":{"line":613,"column":3}},"209":{"start":{"line":605,"column":4},"end":{"line":605,"column":72}},"210":{"start":{"line":606,"column":4},"end":{"line":610,"column":5}},"211":{"start":{"line":607,"column":6},"end":{"line":607,"column":34}},"212":{"start":{"line":609,"column":6},"end":{"line":609,"column":33}},"213":{"start":{"line":611,"column":9},"end":{"line":613,"column":3}},"214":{"start":{"line":612,"column":4},"end":{"line":612,"column":27}},"215":{"start":{"line":616,"column":2},"end":{"line":644,"column":3}},"216":{"start":{"line":617,"column":4},"end":{"line":623,"column":6}},"217":{"start":{"line":626,"column":4},"end":{"line":643,"column":5}},"218":{"start":{"line":627,"column":6},"end":{"line":627,"column":54}},"219":{"start":{"line":628,"column":6},"end":{"line":628,"column":118}},"220":{"start":{"line":636,"column":6},"end":{"line":636,"column":55}},"221":{"start":{"line":637,"column":6},"end":{"line":642,"column":7}},"222":{"start":{"line":638,"column":8},"end":{"line":638,"column":54}},"223":{"start":{"line":640,"column":8},"end":{"line":640,"column":32}},"224":{"start":{"line":641,"column":8},"end":{"line":641,"column":40}},"225":{"start":{"line":650,"column":0},"end":{"line":650,"column":25}},"226":{"start":{"line":652,"column":0},"end":{"line":652,"column":15}},"227":{"start":{"line":653,"column":0},"end":{"line":659,"column":2}},"228":{"start":{"line":654,"column":2},"end":{"line":657,"column":3}},"229":{"start":{"line":655,"column":4},"end":{"line":655,"column":24}},"230":{"start":{"line":656,"column":4},"end":{"line":656,"column":16}},"231":{"start":{"line":658,"column":2},"end":{"line":658,"column":20}}},"branchMap":{"1":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"2":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"3":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":7},"end":{"line":117,"column":11}},{"start":{"line":117,"column":15},"end":{"line":117,"column":38}},{"start":{"line":117,"column":43},"end":{"line":117,"column":48}}]},"4":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"5":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":122,"column":6}},{"start":{"line":122,"column":6},"end":{"line":122,"column":6}}]},"6":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":10},"end":{"line":122,"column":19}},{"start":{"line":122,"column":25},"end":{"line":122,"column":53}},{"start":{"line":122,"column":59},"end":{"line":122,"column":88}}]},"7":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"8":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"9":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"10":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"11":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":30}},{"start":{"line":245,"column":34},"end":{"line":245,"column":60}}]},"12":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":9},"end":{"line":250,"column":9}},{"start":{"line":250,"column":9},"end":{"line":250,"column":9}}]},"13":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":9},"end":{"line":252,"column":9}},{"start":{"line":252,"column":9},"end":{"line":252,"column":9}}]},"14":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":9},"end":{"line":254,"column":9}},{"start":{"line":254,"column":9},"end":{"line":254,"column":9}}]},"15":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":9},"end":{"line":256,"column":9}},{"start":{"line":256,"column":9},"end":{"line":256,"column":9}}]},"16":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":7},"end":{"line":261,"column":7}},{"start":{"line":261,"column":7},"end":{"line":261,"column":7}}]},"17":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":12},"end":{"line":261,"column":33}},{"start":{"line":262,"column":12},"end":{"line":262,"column":42}},{"start":{"line":263,"column":12},"end":{"line":263,"column":39}}]},"18":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"19":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":6},"end":{"line":275,"column":18}},{"start":{"line":275,"column":23},"end":{"line":275,"column":44}}]},"20":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"21":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"22":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":18}},{"start":{"line":283,"column":23},"end":{"line":283,"column":45}},{"start":{"line":283,"column":50},"end":{"line":283,"column":77}}]},"23":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":2},"end":{"line":289,"column":2}},{"start":{"line":289,"column":2},"end":{"line":289,"column":2}}]},"24":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":2},"end":{"line":297,"column":2}},{"start":{"line":297,"column":2},"end":{"line":297,"column":2}}]},"25":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":2},"end":{"line":315,"column":2}},{"start":{"line":315,"column":2},"end":{"line":315,"column":2}}]},"26":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":2},"end":{"line":326,"column":2}},{"start":{"line":326,"column":2},"end":{"line":326,"column":2}}]},"27":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":2},"end":{"line":346,"column":2}},{"start":{"line":346,"column":2},"end":{"line":346,"column":2}}]},"28":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":6},"end":{"line":346,"column":15}},{"start":{"line":346,"column":21},"end":{"line":346,"column":46}},{"start":{"line":346,"column":52},"end":{"line":346,"column":80}}]},"29":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":11},"end":{"line":405,"column":40}},{"start":{"line":405,"column":46},"end":{"line":405,"column":76}},{"start":{"line":405,"column":82},"end":{"line":405,"column":98}}]},"30":{"line":418,"type":"switch","locations":[{"start":{"line":419,"column":4},"end":{"line":419,"column":54}},{"start":{"line":420,"column":4},"end":{"line":420,"column":54}},{"start":{"line":421,"column":4},"end":{"line":421,"column":54}},{"start":{"line":422,"column":4},"end":{"line":422,"column":54}},{"start":{"line":423,"column":4},"end":{"line":423,"column":54}},{"start":{"line":424,"column":4},"end":{"line":424,"column":54}},{"start":{"line":425,"column":4},"end":{"line":425,"column":54}},{"start":{"line":426,"column":4},"end":{"line":426,"column":54}}]},"31":{"line":431,"type":"switch","locations":[{"start":{"line":437,"column":4},"end":{"line":451,"column":12}},{"start":{"line":462,"column":4},"end":{"line":472,"column":12}},{"start":{"line":481,"column":4},"end":{"line":491,"column":12}},{"start":{"line":502,"column":4},"end":{"line":510,"column":12}},{"start":{"line":518,"column":4},"end":{"line":526,"column":12}},{"start":{"line":538,"column":4},"end":{"line":546,"column":12}},{"start":{"line":568,"column":4},"end":{"line":577,"column":12}}]},"32":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":6},"end":{"line":438,"column":6}},{"start":{"line":438,"column":6},"end":{"line":438,"column":6}}]},"33":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":8},"end":{"line":440,"column":8}},{"start":{"line":440,"column":8},"end":{"line":440,"column":8}}]},"34":{"line":441,"type":"cond-expr","locations":[{"start":{"line":441,"column":35},"end":{"line":441,"column":54}},{"start":{"line":441,"column":57},"end":{"line":441,"column":77}}]},"35":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":13},"end":{"line":444,"column":13}},{"start":{"line":444,"column":13},"end":{"line":444,"column":13}}]},"36":{"line":444,"type":"binary-expr","locations":[{"start":{"line":444,"column":17},"end":{"line":444,"column":24}},{"start":{"line":444,"column":28},"end":{"line":444,"column":38}}]},"37":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":13},"end":{"line":446,"column":13}},{"start":{"line":446,"column":13},"end":{"line":446,"column":13}}]},"38":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":6},"end":{"line":463,"column":6}},{"start":{"line":463,"column":6},"end":{"line":463,"column":6}}]},"39":{"line":463,"type":"binary-expr","locations":[{"start":{"line":463,"column":10},"end":{"line":463,"column":17}},{"start":{"line":463,"column":21},"end":{"line":463,"column":28}}]},"40":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":13},"end":{"line":465,"column":13}},{"start":{"line":465,"column":13},"end":{"line":465,"column":13}}]},"41":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":13},"end":{"line":467,"column":13}},{"start":{"line":467,"column":13},"end":{"line":467,"column":13}}]},"42":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":6},"end":{"line":482,"column":6}},{"start":{"line":482,"column":6},"end":{"line":482,"column":6}}]},"43":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":13},"end":{"line":484,"column":13}},{"start":{"line":484,"column":13},"end":{"line":484,"column":13}}]},"44":{"line":484,"type":"binary-expr","locations":[{"start":{"line":484,"column":17},"end":{"line":484,"column":26}},{"start":{"line":484,"column":30},"end":{"line":484,"column":37}}]},"45":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":13},"end":{"line":486,"column":13}},{"start":{"line":486,"column":13},"end":{"line":486,"column":13}}]},"46":{"line":486,"type":"binary-expr","locations":[{"start":{"line":486,"column":17},"end":{"line":486,"column":24}},{"start":{"line":486,"column":28},"end":{"line":486,"column":36}}]},"47":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":6},"end":{"line":503,"column":6}},{"start":{"line":503,"column":6},"end":{"line":503,"column":6}}]},"48":{"line":504,"type":"cond-expr","locations":[{"start":{"line":504,"column":33},"end":{"line":504,"column":52}},{"start":{"line":504,"column":55},"end":{"line":504,"column":75}}]},"49":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":13},"end":{"line":505,"column":13}},{"start":{"line":505,"column":13},"end":{"line":505,"column":13}}]},"50":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":6},"end":{"line":519,"column":6}},{"start":{"line":519,"column":6},"end":{"line":519,"column":6}}]},"51":{"line":519,"type":"binary-expr","locations":[{"start":{"line":519,"column":10},"end":{"line":519,"column":20}},{"start":{"line":519,"column":25},"end":{"line":519,"column":34}},{"start":{"line":519,"column":38},"end":{"line":519,"column":60}}]},"52":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":13},"end":{"line":521,"column":13}},{"start":{"line":521,"column":13},"end":{"line":521,"column":13}}]},"53":{"line":521,"type":"binary-expr","locations":[{"start":{"line":521,"column":17},"end":{"line":521,"column":24}},{"start":{"line":521,"column":28},"end":{"line":521,"column":34}},{"start":{"line":521,"column":38},"end":{"line":521,"column":47}},{"start":{"line":521,"column":51},"end":{"line":521,"column":59}},{"start":{"line":521,"column":64},"end":{"line":521,"column":71}},{"start":{"line":521,"column":75},"end":{"line":521,"column":88}}]},"54":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":6},"end":{"line":539,"column":6}},{"start":{"line":539,"column":6},"end":{"line":539,"column":6}}]},"55":{"line":539,"type":"binary-expr","locations":[{"start":{"line":539,"column":10},"end":{"line":539,"column":20}},{"start":{"line":539,"column":25},"end":{"line":539,"column":32}},{"start":{"line":539,"column":36},"end":{"line":539,"column":58}}]},"56":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":13},"end":{"line":541,"column":13}},{"start":{"line":541,"column":13},"end":{"line":541,"column":13}}]},"57":{"line":541,"type":"binary-expr","locations":[{"start":{"line":541,"column":17},"end":{"line":541,"column":24}},{"start":{"line":541,"column":28},"end":{"line":541,"column":34}},{"start":{"line":541,"column":38},"end":{"line":541,"column":45}},{"start":{"line":541,"column":49},"end":{"line":541,"column":57}},{"start":{"line":541,"column":62},"end":{"line":541,"column":71}},{"start":{"line":541,"column":75},"end":{"line":541,"column":88}}]},"58":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":6},"end":{"line":569,"column":6}},{"start":{"line":569,"column":6},"end":{"line":569,"column":6}}]},"59":{"line":569,"type":"binary-expr","locations":[{"start":{"line":569,"column":10},"end":{"line":569,"column":18}},{"start":{"line":569,"column":23},"end":{"line":569,"column":30}},{"start":{"line":569,"column":34},"end":{"line":569,"column":44}},{"start":{"line":570,"column":11},"end":{"line":570,"column":20}},{"start":{"line":570,"column":24},"end":{"line":570,"column":37}},{"start":{"line":571,"column":11},"end":{"line":571,"column":20}},{"start":{"line":571,"column":24},"end":{"line":571,"column":40}},{"start":{"line":572,"column":12},"end":{"line":572,"column":31}},{"start":{"line":572,"column":35},"end":{"line":572,"column":45}},{"start":{"line":572,"column":49},"end":{"line":572,"column":55}}]},"60":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":2},"end":{"line":583,"column":2}},{"start":{"line":583,"column":2},"end":{"line":583,"column":2}}]},"61":{"line":583,"type":"binary-expr","locations":[{"start":{"line":583,"column":7},"end":{"line":583,"column":30}},{"start":{"line":583,"column":36},"end":{"line":583,"column":62}}]},"62":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":2},"end":{"line":594,"column":2}},{"start":{"line":594,"column":2},"end":{"line":594,"column":2}}]},"63":{"line":594,"type":"binary-expr","locations":[{"start":{"line":594,"column":6},"end":{"line":594,"column":18}},{"start":{"line":594,"column":22},"end":{"line":594,"column":38}},{"start":{"line":594,"column":42},"end":{"line":594,"column":54}}]},"64":{"line":599,"type":"cond-expr","locations":[{"start":{"line":599,"column":46},"end":{"line":599,"column":62}},{"start":{"line":599,"column":65},"end":{"line":599,"column":82}}]},"65":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":2},"end":{"line":604,"column":2}},{"start":{"line":604,"column":2},"end":{"line":604,"column":2}}]},"66":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":4},"end":{"line":606,"column":4}},{"start":{"line":606,"column":4},"end":{"line":606,"column":4}}]},"67":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":9},"end":{"line":611,"column":9}},{"start":{"line":611,"column":9},"end":{"line":611,"column":9}}]},"68":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":2},"end":{"line":616,"column":2}},{"start":{"line":616,"column":2},"end":{"line":616,"column":2}}]},"69":{"line":616,"type":"binary-expr","locations":[{"start":{"line":616,"column":6},"end":{"line":616,"column":21}},{"start":{"line":616,"column":25},"end":{"line":616,"column":36}}]},"70":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":4},"end":{"line":626,"column":4}},{"start":{"line":626,"column":4},"end":{"line":626,"column":4}}]},"71":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":6},"end":{"line":637,"column":6}},{"start":{"line":637,"column":6},"end":{"line":637,"column":6}}]},"72":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":2},"end":{"line":654,"column":2}},{"start":{"line":654,"column":2},"end":{"line":654,"column":2}}]}},"code":["var assert = require('assert');","","// The Stream class","// ================","","// Stream is a [Duplex stream](https://nodejs.org/api/stream.html#stream_class_stream_duplex)","// subclass that implements the [HTTP/2 Stream](https://tools.ietf.org/html/rfc7540#section-5)","// concept. It has two 'sides': one that is used by the user to send/receive data (the `stream`","// object itself) and one that is used by a Connection to read/write frames to/from the other peer","// (`stream.upstream`).","","var Duplex = require('stream').Duplex;","","exports.Stream = Stream;","","// Public API","// ----------","","// * **new Stream(log, connection)**: create a new Stream","//","// * **Event: 'headers' (headers)**: signals incoming headers","//","// * **Event: 'promise' (stream, headers)**: signals an incoming push promise","//","// * **Event: 'priority' (priority)**: signals a priority change. `priority` is a number between 0","//     (highest priority) and 2^31-1 (lowest priority). Default value is 2^30.","//","// * **Event: 'error' (type)**: signals an error","//","// * **headers(headers)**: send headers","//","// * **promise(headers): Stream**: promise a stream","//","// * **priority(priority)**: set the priority of the stream. Priority can be changed by the peer","//   too, but once it is set locally, it can not be changed remotely.","//","// * **reset(error)**: reset the stream with an error code","//","// * **upstream**: a [Flow](flow.js) that is used by the parent connection to write/read frames","//   that are to be sent/arrived to/from the peer and are related to this stream.","//","// Headers are always in the [regular node.js header format][1].","// [1]: https://nodejs.org/api/http.html#http_message_headers","","// Constructor","// -----------","","// The main aspects of managing the stream are:","function Stream(log, connection) {","  Duplex.call(this);","","  // * logging","  this._log = log.child({ component: 'stream', s: this });","","  // * receiving and sending stream management commands","  this._initializeManagement();","","  // * sending and receiving frames to/from the upstream connection","  this._initializeDataFlow();","","  // * maintaining the state of the stream (idle, open, closed, etc.) and error detection","  this._initializeState();","","  this.connection = connection;","}","","Stream.prototype = Object.create(Duplex.prototype, { constructor: { value: Stream } });","","// Managing the stream","// -------------------","","// the default stream priority is 2^30","var DEFAULT_PRIORITY = Math.pow(2, 30);","var MAX_PRIORITY = Math.pow(2, 31) - 1;","","// PUSH_PROMISE and HEADERS are forwarded to the user through events.","Stream.prototype._initializeManagement = function _initializeManagement() {","  this._resetSent = false;","  this._priority = DEFAULT_PRIORITY;","  this._letPeerPrioritize = true;","};","","Stream.prototype.promise = function promise(headers) {","  var stream = new Stream(this._log, this.connection);","  stream._priority = Math.min(this._priority + 1, MAX_PRIORITY);","  this._pushUpstream({","    type: 'PUSH_PROMISE',","    flags: {},","    stream: this.id,","    promised_stream: stream,","    headers: headers","  });","  return stream;","};","","Stream.prototype._onPromise = function _onPromise(frame) {","  this.emit('promise', frame.promised_stream, frame.headers);","};","","Stream.prototype.headers = function headers(headers) {","  this._pushUpstream({","    type: 'HEADERS',","    flags: {},","    stream: this.id,","    headers: headers","  });","};","","Stream.prototype._onHeaders = function _onHeaders(frame) {","  if (frame.priority !== undefined) {","    this.priority(frame.priority, true);","  }","  this.emit('headers', frame.headers);","};","","Stream.prototype.priority = function priority(priority, peer) {","  if ((peer && this._letPeerPrioritize) || !peer) {","    if (!peer) {","      this._letPeerPrioritize = false;","","      var lastFrame = this.upstream.getLastQueuedFrame();","      if (lastFrame && ((lastFrame.type === 'HEADERS') || (lastFrame.type === 'PRIORITY'))) {","        lastFrame.priority = priority;","      } else {","        this._pushUpstream({","          type: 'PRIORITY',","          flags: {},","          stream: this.id,","          priority: priority","        });","      }","    }","","    this._log.debug({ priority: priority }, 'Changing priority');","    this.emit('priority', priority);","    this._priority = priority;","  }","};","","Stream.prototype._onPriority = function _onPriority(frame) {","  this.priority(frame.priority, true);","};","","// Resetting the stream. Normally, an endpoint SHOULD NOT send more than one RST_STREAM frame for","// any stream.","Stream.prototype.reset = function reset(error) {","  if (!this._resetSent) {","    this._resetSent = true;","    this._pushUpstream({","      type: 'RST_STREAM',","      flags: {},","      stream: this.id,","      error: error","    });","  }","};","","// Specify an alternate service for the origin of this stream","Stream.prototype.altsvc = function altsvc(host, port, protocolID, maxAge, origin) {","    var stream;","    if (origin) {","        stream = 0;","    } else {","        stream = this.id;","    }","    this._pushUpstream({","        type: 'ALTSVC',","        flags: {},","        stream: stream,","        host: host,","        port: port,","        protocolID: protocolID,","        origin: origin,","        maxAge: maxAge","    });","};","","// Data flow","// ---------","","// The incoming and the generated outgoing frames are received/transmitted on the `this.upstream`","// [Flow](flow.html). The [Connection](connection.html) object instantiating the stream will read","// and write frames to/from it. The stream itself is a regular [Duplex stream][1], and is used by","// the user to write or read the body of the request.","// [1]: https://nodejs.org/api/stream.html#stream_class_stream_duplex","","//     upstream side                  stream                  user side","//","//                    +------------------------------------+","//                    |                                    |","//                    +------------------+                 |","//                    |     upstream     |                 |","//                    |                  |                 |","//                    +--+               |              +--|","//            read()  |  |  _send()      |    _write()  |  |  write(buf)","//     <--------------|B |<--------------|--------------| B|<------------","//                    |  |               |              |  |","//            frames  +--+               |              +--|  buffers","//                    |  |               |              |  |","//     -------------->|B |---------------|------------->| B|------------>","//      write(frame)  |  |  _receive()   |     _read()  |  |  read()","//                    +--+               |              +--|","//                    |                  |                 |","//                    |                  |                 |","//                    +------------------+                 |","//                    |                                    |","//                    +------------------------------------+","//","//     B: input or output buffer","","var Flow = require('./flow').Flow;","","Stream.prototype._initializeDataFlow = function _initializeDataFlow() {","  this.id = undefined;","","  this._ended = false;","","  this.upstream = new Flow();","  this.upstream._log = this._log;","  this.upstream._send = this._send.bind(this);","  this.upstream._receive = this._receive.bind(this);","  this.upstream.write = this._writeUpstream.bind(this);","  this.upstream.on('error', this.emit.bind(this, 'error'));","","  this.on('finish', this._finishing);","};","","Stream.prototype._pushUpstream = function _pushUpstream(frame) {","  this.upstream.push(frame);","  this._transition(true, frame);","};","","// Overriding the upstream's `write` allows us to act immediately instead of waiting for the input","// queue to empty. This is important in case of control frames.","Stream.prototype._writeUpstream = function _writeUpstream(frame) {","  this._log.debug({ frame: frame }, 'Receiving frame');","","  var moreNeeded = Flow.prototype.write.call(this.upstream, frame);","","  // * Transition to a new state if that's the effect of receiving the frame","  this._transition(false, frame);","","  // * If it's a control frame. Call the appropriate handler method.","  if (frame.type === 'HEADERS') {","    if (this._processedHeaders && !frame.flags['END_STREAM']) {","      this.emit('error', 'PROTOCOL_ERROR');","    }","    this._processedHeaders = true;","    this._onHeaders(frame);","  } else if (frame.type === 'PUSH_PROMISE') {","    this._onPromise(frame);","  } else if (frame.type === 'PRIORITY') {","    this._onPriority(frame);","  } else if (frame.type === 'ALTSVC') {","    // TODO","  } else if (frame.type === 'BLOCKED') {","    // TODO","  }","","  // * If it's an invalid stream level frame, emit error","  else if ((frame.type !== 'DATA') &&","           (frame.type !== 'WINDOW_UPDATE') &&","           (frame.type !== 'RST_STREAM')) {","    this._log.error({ frame: frame }, 'Invalid stream level frame');","    this.emit('error', 'PROTOCOL_ERROR');","  }","","  return moreNeeded;","};","","// The `_receive` method (= `upstream._receive`) gets called when there's an incoming frame.","Stream.prototype._receive = function _receive(frame, ready) {","  // * If it's a DATA frame, then push the payload into the output buffer on the other side.","  //   Call ready when the other side is ready to receive more.","  if (!this._ended && (frame.type === 'DATA')) {","    var moreNeeded = this.push(frame.data);","    if (!moreNeeded) {","      this._receiveMore = ready;","    }","  }","","  // * Any frame may signal the end of the stream with the END_STREAM flag","  if (!this._ended && (frame.flags.END_STREAM || (frame.type === 'RST_STREAM'))) {","    this.push(null);","    this._ended = true;","  }","","  // * Postpone calling `ready` if `push()` returned a falsy value","  if (this._receiveMore !== ready) {","    ready();","  }","};","","// The `_read` method is called when the user side is ready to receive more data. If there's a","// pending write on the upstream, then call its pending ready callback to receive more frames.","Stream.prototype._read = function _read() {","  if (this._receiveMore) {","    var receiveMore = this._receiveMore;","    delete this._receiveMore;","    receiveMore();","  }","};","","// The `write` method gets called when there's a write request from the user.","Stream.prototype._write = function _write(buffer, encoding, ready) {","  // * Chunking is done by the upstream Flow.","  var moreNeeded = this._pushUpstream({","    type: 'DATA',","    flags: {},","    stream: this.id,","    data: buffer","  });","","  // * Call ready when upstream is ready to receive more frames.","  if (moreNeeded) {","    ready();","  } else {","    this._sendMore = ready;","  }","};","","// The `_send` (= `upstream._send`) method is called when upstream is ready to receive more frames.","// If there's a pending write on the user side, then call its pending ready callback to receive more","// writes.","Stream.prototype._send = function _send() {","  if (this._sendMore) {","    var sendMore = this._sendMore;","    delete this._sendMore;","    sendMore();","  }","};","","// When the stream is finishing (the user calls `end()` on it), then we have to set the `END_STREAM`","// flag on the last frame. If there's no frame in the queue, or if it doesn't support this flag,","// then we create a 0 length DATA frame. We could do this all the time, but putting the flag on an","// existing frame is a nice optimization.","var emptyBuffer = new Buffer(0);","Stream.prototype._finishing = function _finishing() {","  var endFrame = {","    type: 'DATA',","    flags: { END_STREAM: true },","    stream: this.id,","    data: emptyBuffer","  };","  var lastFrame = this.upstream.getLastQueuedFrame();","  if (lastFrame && ((lastFrame.type === 'DATA') || (lastFrame.type === 'HEADERS'))) {","    this._log.debug({ frame: lastFrame }, 'Marking last frame with END_STREAM flag.');","    lastFrame.flags.END_STREAM = true;","    this._transition(true, endFrame);","  } else {","    this._pushUpstream(endFrame);","  }","};","","// [Stream States](https://tools.ietf.org/html/rfc7540#section-5.1)","// ----------------","//","//                           +--------+","//                     PP    |        |    PP","//                  ,--------|  idle  |--------.","//                 /         |        |         \\","//                v          +--------+          v","//         +----------+          |           +----------+","//         |          |          | H         |          |","//     ,---| reserved |          |           | reserved |---.","//     |   | (local)  |          v           | (remote) |   |","//     |   +----------+      +--------+      +----------+   |","//     |      |          ES  |        |  ES          |      |","//     |      | H    ,-------|  open  |-------.      | H    |","//     |      |     /        |        |        \\     |      |","//     |      v    v         +--------+         v    v      |","//     |   +----------+          |           +----------+   |","//     |   |   half   |          |           |   half   |   |","//     |   |  closed  |          | R         |  closed  |   |","//     |   | (remote) |          |           | (local)  |   |","//     |   +----------+          |           +----------+   |","//     |        |                v                 |        |","//     |        |  ES / R    +--------+  ES / R    |        |","//     |        `----------->|        |<-----------'        |","//     |  R                  | closed |                  R  |","//     `-------------------->|        |<--------------------'","//                           +--------+","","// Streams begin in the IDLE state and transitions happen when there's an incoming or outgoing frame","Stream.prototype._initializeState = function _initializeState() {","  this.state = 'IDLE';","  this._initiated = undefined;","  this._closedByUs = undefined;","  this._closedWithRst = undefined;","  this._processedHeaders = false;","};","","// Only `_setState` should change `this.state` directly. It also logs the state change and notifies","// interested parties using the 'state' event.","Stream.prototype._setState = function transition(state) {","  assert(this.state !== state);","  this._log.debug({ from: this.state, to: state }, 'State transition');","  this.state = state;","  this.emit('state', state);","};","","// A state is 'active' if the stream in that state counts towards the concurrency limit. Streams","// that are in the \"open\" state, or either of the \"half closed\" states count toward this limit.","function activeState(state) {","  return ((state === 'HALF_CLOSED_LOCAL') || (state === 'HALF_CLOSED_REMOTE') || (state === 'OPEN'));","}","","// `_transition` is called every time there's an incoming or outgoing frame. It manages state","// transitions, and detects stream errors. A stream error is always caused by a frame that is not","// allowed in the current state.","Stream.prototype._transition = function transition(sending, frame) {","  var receiving = !sending;","  var connectionError;","  var streamError;","","  var DATA = false, HEADERS = false, PRIORITY = false, ALTSVC = false, BLOCKED = false;","  var RST_STREAM = false, PUSH_PROMISE = false, WINDOW_UPDATE = false;","  switch(frame.type) {","    case 'DATA'         : DATA          = true; break;","    case 'HEADERS'      : HEADERS       = true; break;","    case 'PRIORITY'     : PRIORITY      = true; break;","    case 'RST_STREAM'   : RST_STREAM    = true; break;","    case 'PUSH_PROMISE' : PUSH_PROMISE  = true; break;","    case 'WINDOW_UPDATE': WINDOW_UPDATE = true; break;","    case 'ALTSVC'       : ALTSVC        = true; break;","    case 'BLOCKED'      : BLOCKED       = true; break;","  }","","  var previousState = this.state;","","  switch (this.state) {","    // All streams start in the **idle** state. In this state, no frames have been exchanged.","    //","    // * Sending or receiving a HEADERS frame causes the stream to become \"open\".","    //","    // When the HEADERS frame contains the END_STREAM flags, then two state transitions happen.","    case 'IDLE':","      if (HEADERS) {","        this._setState('OPEN');","        if (frame.flags.END_STREAM) {","          this._setState(sending ? 'HALF_CLOSED_LOCAL' : 'HALF_CLOSED_REMOTE');","        }","        this._initiated = sending;","      } else if (sending && RST_STREAM) {","        this._setState('CLOSED');","      } else if (PRIORITY) {","        /* No state change */","      } else {","        connectionError = 'PROTOCOL_ERROR';","      }","      break;","","    // A stream in the **reserved (local)** state is one that has been promised by sending a","    // PUSH_PROMISE frame.","    //","    // * The endpoint can send a HEADERS frame. This causes the stream to open in a \"half closed","    //   (remote)\" state.","    // * Either endpoint can send a RST_STREAM frame to cause the stream to become \"closed\". This","    //   releases the stream reservation.","    // * An endpoint may receive PRIORITY frame in this state.","    // * An endpoint MUST NOT send any other type of frame in this state.","    case 'RESERVED_LOCAL':","      if (sending && HEADERS) {","        this._setState('HALF_CLOSED_REMOTE');","      } else if (RST_STREAM) {","        this._setState('CLOSED');","      } else if (PRIORITY) {","        /* No state change */","      } else {","        connectionError = 'PROTOCOL_ERROR';","      }","      break;","","    // A stream in the **reserved (remote)** state has been reserved by a remote peer.","    //","    // * Either endpoint can send a RST_STREAM frame to cause the stream to become \"closed\". This","    //   releases the stream reservation.","    // * Receiving a HEADERS frame causes the stream to transition to \"half closed (local)\".","    // * An endpoint MAY send PRIORITY frames in this state to reprioritize the stream.","    // * Receiving any other type of frame MUST be treated as a stream error of type PROTOCOL_ERROR.","    case 'RESERVED_REMOTE':","      if (RST_STREAM) {","        this._setState('CLOSED');","      } else if (receiving && HEADERS) {","        this._setState('HALF_CLOSED_LOCAL');","      } else if (BLOCKED || PRIORITY) {","        /* No state change */","      } else {","        connectionError = 'PROTOCOL_ERROR';","      }","      break;","","    // The **open** state is where both peers can send frames. In this state, sending peers observe","    // advertised stream level flow control limits.","    //","    // * From this state either endpoint can send a frame with a END_STREAM flag set, which causes","    //   the stream to transition into one of the \"half closed\" states: an endpoint sending a","    //   END_STREAM flag causes the stream state to become \"half closed (local)\"; an endpoint","    //   receiving a END_STREAM flag causes the stream state to become \"half closed (remote)\".","    // * Either endpoint can send a RST_STREAM frame from this state, causing it to transition","    //   immediately to \"closed\".","    case 'OPEN':","      if (frame.flags.END_STREAM) {","        this._setState(sending ? 'HALF_CLOSED_LOCAL' : 'HALF_CLOSED_REMOTE');","      } else if (RST_STREAM) {","        this._setState('CLOSED');","      } else {","        /* No state change */","      }","      break;","","    // A stream that is **half closed (local)** cannot be used for sending frames.","    //","    // * A stream transitions from this state to \"closed\" when a frame that contains a END_STREAM","    //   flag is received, or when either peer sends a RST_STREAM frame.","    // * An endpoint MAY send or receive PRIORITY frames in this state to reprioritize the stream.","    // * WINDOW_UPDATE can be sent by a peer that has sent a frame bearing the END_STREAM flag.","    case 'HALF_CLOSED_LOCAL':","      if (RST_STREAM || (receiving && frame.flags.END_STREAM)) {","        this._setState('CLOSED');","      } else if (BLOCKED || ALTSVC || receiving || PRIORITY || (sending && WINDOW_UPDATE)) {","        /* No state change */","      } else {","        connectionError = 'PROTOCOL_ERROR';","      }","      break;","","    // A stream that is **half closed (remote)** is no longer being used by the peer to send frames.","    // In this state, an endpoint is no longer obligated to maintain a receiver flow control window","    // if it performs flow control.","    //","    // * If an endpoint receives additional frames for a stream that is in this state it MUST","    //   respond with a stream error of type STREAM_CLOSED.","    // * A stream can transition from this state to \"closed\" by sending a frame that contains a","    //   END_STREAM flag, or when either peer sends a RST_STREAM frame.","    // * An endpoint MAY send or receive PRIORITY frames in this state to reprioritize the stream.","    // * A receiver MAY receive a WINDOW_UPDATE frame on a \"half closed (remote)\" stream.","    case 'HALF_CLOSED_REMOTE':","      if (RST_STREAM || (sending && frame.flags.END_STREAM)) {","        this._setState('CLOSED');","      } else if (BLOCKED || ALTSVC || sending || PRIORITY || (receiving && WINDOW_UPDATE)) {","        /* No state change */","      } else {","        connectionError = 'PROTOCOL_ERROR';","      }","      break;","","    // The **closed** state is the terminal state.","    //","    // * An endpoint MUST NOT send frames on a closed stream. An endpoint that receives a frame","    //   after receiving a RST_STREAM or a frame containing a END_STREAM flag on that stream MUST","    //   treat that as a stream error of type STREAM_CLOSED.","    // * WINDOW_UPDATE, PRIORITY or RST_STREAM frames can be received in this state for a short","    //   period after a frame containing an END_STREAM flag is sent.  Until the remote peer receives","    //   and processes the frame bearing the END_STREAM flag, it might send either frame type.","    //   Endpoints MUST ignore WINDOW_UPDATE frames received in this state, though endpoints MAY","    //   choose to treat WINDOW_UPDATE frames that arrive a significant time after sending","    //   END_STREAM as a connection error of type PROTOCOL_ERROR.","    // * If this state is reached as a result of sending a RST_STREAM frame, the peer that receives","    //   the RST_STREAM might have already sent - or enqueued for sending - frames on the stream","    //   that cannot be withdrawn. An endpoint that sends a RST_STREAM frame MUST ignore frames that","    //   it receives on closed streams after it has sent a RST_STREAM frame. An endpoint MAY choose","    //   to limit the period over which it ignores frames and treat frames that arrive after this","    //   time as being in error.","    // * An endpoint might receive a PUSH_PROMISE frame after it sends RST_STREAM. PUSH_PROMISE","    //   causes a stream to become \"reserved\". If promised streams are not desired, a RST_STREAM","    //   can be used to close any of those streams.","    case 'CLOSED':","      if (PRIORITY || (sending && RST_STREAM) ||","          (receiving && WINDOW_UPDATE) ||","          (receiving && this._closedByUs &&","           (this._closedWithRst || RST_STREAM || ALTSVC))) {","        /* No state change */","      } else {","        streamError = 'STREAM_CLOSED';","      }","      break;","  }","","  // Noting that the connection was closed by the other endpoint. It may be important in edge cases.","  // For example, when the peer tries to cancel a promised stream, but we already sent every data","  // on it, then the stream is in CLOSED state, yet we want to ignore the incoming RST_STREAM.","  if ((this.state === 'CLOSED') && (previousState !== 'CLOSED')) {","    this._closedByUs = sending;","    this._closedWithRst = RST_STREAM;","  }","","  // Sending/receiving a PUSH_PROMISE","  //","  // * Sending a PUSH_PROMISE frame marks the associated stream for later use. The stream state","  //   for the reserved stream transitions to \"reserved (local)\".","  // * Receiving a PUSH_PROMISE frame marks the associated stream as reserved by the remote peer.","  //   The state of the stream becomes \"reserved (remote)\".","  if (PUSH_PROMISE && !connectionError && !streamError) {","    /* This assertion must hold, because _transition is called immediately when a frame is written","       to the stream. If it would be called when a frame gets out of the input queue, the state","       of the reserved could have been changed by then. */","    assert(frame.promised_stream.state === 'IDLE', frame.promised_stream.state);","    frame.promised_stream._setState(sending ? 'RESERVED_LOCAL' : 'RESERVED_REMOTE');","    frame.promised_stream._initiated = sending;","  }","","  // Signaling how sending/receiving this frame changes the active stream count (-1, 0 or +1)","  if (this._initiated) {","    var change = (activeState(this.state) - activeState(previousState));","    if (sending) {","      frame.count_change = change;","    } else {","      frame.count_change(change);","    }","  } else if (sending) {","    frame.count_change = 0;","  }","","  // Common error handling.","  if (connectionError || streamError) {","    var info = {","      error: connectionError,","      frame: frame,","      state: this.state,","      closedByUs: this._closedByUs,","      closedWithRst: this._closedWithRst","    };","","    // * When sending something invalid, throwing an exception, since it is probably a bug.","    if (sending) {","      this._log.error(info, 'Sending illegal frame.');","      return this.emit('error', new Error('Sending illegal frame (' + frame.type + ') in ' + this.state + ' state.'));","    }","","    // * In case of a serious problem, emitting and error and letting someone else handle it","    //   (e.g. closing the connection)","    // * When receiving something invalid, sending an RST_STREAM using the `reset` method.","    //   This will automatically cause a transition to the CLOSED state.","    else {","      this._log.error(info, 'Received illegal frame.');","      if (connectionError) {","        this.emit('connectionError', connectionError);","      } else {","        this.reset(streamError);","        this.emit('error', streamError);","      }","    }","  }","};","","// Bunyan serializers","// ------------------","","exports.serializers = {};","","var nextId = 0;","exports.serializers.s = function(stream) {","  if (!('_id' in stream)) {","    stream._id = nextId;","    nextId += 1;","  }","  return stream._id;","};",""],"l":{"1":1,"12":1,"14":1,"49":1,"50":0,"53":0,"56":0,"59":0,"62":0,"64":0,"67":1,"73":1,"74":1,"77":1,"78":0,"79":0,"80":0,"83":1,"84":0,"85":0,"86":0,"93":0,"96":1,"97":0,"100":1,"101":0,"109":1,"110":0,"111":0,"113":0,"116":1,"117":0,"118":0,"119":0,"121":0,"122":0,"123":0,"125":0,"134":0,"135":0,"136":0,"140":1,"141":0,"146":1,"147":0,"148":0,"149":0,"159":1,"160":0,"161":0,"162":0,"164":0,"166":0,"211":1,"213":1,"214":0,"216":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"225":0,"228":1,"229":0,"230":0,"235":1,"236":0,"238":0,"241":0,"244":0,"245":0,"246":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"256":0,"261":0,"264":0,"265":0,"268":0,"272":1,"275":0,"276":0,"277":0,"278":0,"283":0,"284":0,"285":0,"289":0,"290":0,"296":1,"297":0,"298":0,"299":0,"300":0,"305":1,"307":0,"315":0,"316":0,"318":0,"325":1,"326":0,"327":0,"328":0,"329":0,"337":1,"338":1,"339":0,"345":0,"346":0,"347":0,"348":0,"349":0,"351":0,"385":1,"386":0,"387":0,"388":0,"389":0,"390":0,"395":1,"396":0,"397":0,"398":0,"399":0,"404":1,"405":0,"411":1,"412":0,"413":0,"414":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"429":0,"431":0,"438":0,"439":0,"440":0,"441":0,"443":0,"444":0,"445":0,"446":0,"449":0,"451":0,"463":0,"464":0,"465":0,"466":0,"467":0,"470":0,"472":0,"482":0,"483":0,"484":0,"485":0,"486":0,"489":0,"491":0,"503":0,"504":0,"505":0,"506":0,"510":0,"519":0,"520":0,"521":0,"524":0,"526":0,"539":0,"540":0,"541":0,"544":0,"546":0,"569":0,"575":0,"577":0,"583":0,"584":0,"585":0,"594":0,"598":0,"599":0,"600":0,"604":0,"605":0,"606":0,"607":0,"609":0,"611":0,"612":0,"616":0,"617":0,"626":0,"627":0,"628":0,"636":0,"637":0,"638":0,"640":0,"641":0,"650":1,"652":1,"653":1,"654":0,"655":0,"656":0,"658":0}}}